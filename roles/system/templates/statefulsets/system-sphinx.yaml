apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: system-sphinx
  namespace: "{{ meta.namespace }}"
  labels:
    app: 3scale-api-management
    threescale_component: system
    threescale_component_element: sphinx
spec:
  selector:
    matchLabels:
      app: 3scale-api-management
      threescale_component: system
      threescale_component_element: sphinx
  replicas: 1
  serviceName: system-sphinx
  template:
    metadata:
      labels:
        app: 3scale-api-management
        threescale_component: system
        threescale_component_element: sphinx
    spec:
      volumes:
        - name: system-sphinx-database
          persistentVolumeClaim:
            claimName: system-sphinx-storage
      containers:
      # containers > system-sphinx
        - name: system-sphinx
          image: "{{ image.name | default(image_name) }}:{{ image.tag | default(image_tag) }}"
          imagePullPolicy: "{{ image.pull_policy | default(image_pull_policy) }}"
          args:
            - rake
            - openshift:thinking_sphinx:start
        ## container > system-sidekiq > ports
          ports:
            - containerPort: 9306
              name: sphinx
              protocol: TCP
        ## containers > system-sphinx > probes
          readinessProbe:
            tcpSocket:
              port: 9306
            initialDelaySeconds: {{ sphinx.readiness_probe.initial_delay_seconds | default(sphinx_readiness_probe_initial_delay_seconds) }}
            timeoutSeconds: {{ sphinx.readiness_probe.timeout_seconds | default(sphinx_readiness_probe_timeout_seconds) }}
            periodSeconds: {{ sphinx.readiness_probe.period_seconds | default (sphinx_readiness_probe_period_seconds) }}
            successThreshold: {{ sphinx.readiness_probe.success_threshold | default(sphinx_readiness_probe_success_threshold) }}
            failureThreshold: {{ sphinx.readiness_probe.failure_threshold | default(sphinx_readiness_probe_failure_threshold) }}
          livenessProbe:
            tcpSocket:
              port: 9306
            initialDelaySeconds: {{ sphinx.liveness_probe.initial_delay_seconds | default(sphinx_liveness_probe_initial_delay_seconds) }}
            timeoutSeconds: {{ sphinx.liveness_probe.timeout_seconds | default(sphinx_liveness_probe_timeout_seconds) }}
            periodSeconds: {{ sphinx.liveness_probe.period_seconds | default (sphinx_liveness_probe_period_seconds) }}
            successThreshold: {{ sphinx.liveness_probe.success_threshold | default(sphinx_liveness_probe_success_threshold) }}
            failureThreshold: {{ sphinx.liveness_probe.failure_threshold | default(sphinx_liveness_probe_failure_threshold) }}
        ## container > system-sphinx > resources
          resources:
            requests:
              memory: "{{ sphinx.resources.requests.memory | default(sphinx_resources_requests_memory) }}"
              cpu: "{{ sphinx.resources.requests.cpu | default(sphinx_resources_requests_cpu) }}"
            limits:
              memory: "{{ sphinx.resources.limits.memory | default(sphinx_resources_limits_memory) }}"
              cpu: "{{ sphinx.resources.limits.cpu | default(sphinx_resources_limits_cpu) }}"
        ## containers > system-sphinx > env
          env:
            - name: THINKING_SPHINX_ADDRESS
              value: "{{ sphinx.env.thinking.bind_address | default(sphinx_env_thinking_bind_address) }}"
            - name: THINKING_SPHINX_CONFIGURATION_FILE
              value: "{{ sphinx.env.thinking.config_file | default(sphinx_env_thinking_config_file) }}"
            - name: THINKING_SPHINX_PID_FILE
              value: "{{ sphinx.env.thinking.pid_file | default(sphinx_env_thinking_pid_file) }}"
            - name: DELTA_INDEX_INTERVAL
              value: "{{ sphinx.env.delta_index_interval | default(sphinx_env_delta_index_interval) }}"
            - name: FULL_REINDEX_INTERVAL
              value: "{{ sphinx.env.full_reindex_interval | default(sphinx_env_full_reindex_interval) }}"
          ### configmap/system-environment
            - name: RAILS_ENV
              valueFrom:
                configMapKeyRef:
                  key: RAILS_ENV
                  name: system-environment
          ### secret/system-database
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  key: URL
                  name: system-database
          ### secret/system-redis
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  key: URL
                  name: system-redis
            - name: MESSAGE_BUS_REDIS_URL
              valueFrom:
                secretKeyRef:
                  key: MESSAGE_BUS_URL
                  name: system-redis
            - name: REDIS_NAMESPACE
              valueFrom:
                secretKeyRef:
                  key: NAMESPACE
                  name: system-redis
            - name: MESSAGE_BUS_REDIS_NAMESPACE
              valueFrom:
                secretKeyRef:
                  key: MESSAGE_BUS_NAMESPACE
                  name: system-redis
            - name: REDIS_SENTINEL_HOSTS
              valueFrom:
                secretKeyRef:
                  key: SENTINEL_HOSTS
                  name: system-redis
            - name: REDIS_SENTINEL_ROLE
              valueFrom:
                secretKeyRef:
                  key: SENTINEL_ROLE
                  name: system-redis
            - name: MESSAGE_BUS_REDIS_SENTINEL_HOSTS
              valueFrom:
                secretKeyRef:
                  key: MESSAGE_BUS_SENTINEL_HOSTS
                  name: system-redis
            - name: MESSAGE_BUS_REDIS_SENTINEL_ROLE
              valueFrom:
                secretKeyRef:
                  key: MESSAGE_BUS_SENTINEL_ROLE
                  name: system-redis
        ## container > system-sphinx > volumeMounts
          volumeMounts:
          - mountPath: "{{ sphinx.env.thinking.db_path | default(sphinx_env_thinking_db_path) }}"
            name: system-sphinx-database
  volumeClaimTemplates:
    - metadata:
        name: system-sphinx-database
      spec:
        volumeMode: Filesystem
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "{{ sphinx.resources.storage | default(sphinx_resources_storage) }}"
