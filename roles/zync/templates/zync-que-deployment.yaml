apiVersion: apps/v1
kind: Deployment
metadata:
  name: zync-que
  namespace: "{{ meta.namespace }}"
  labels:
    app: 3scale-api-management
    threescale_component: zync
    threescale_component_element: zync-que
spec:
{% if que.hpa.enabled is defined and que.hpa.enabled == false %}
  replicas: {{ que.replicas | default(que_replicas) }}
{% endif %}
  selector:
    matchLabels:
      deployment: zync-que
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: 3scale-api-management
        deployment: zync-que
    spec:
{% if image.pull_secret_name is defined %}
      imagePullSecrets:
        - name: "{{ image.pull_secret_name }}"
{% endif %}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
      # containers > zync
        - name: zync-que
          image: "{{ image.name | default(image_name) }}:{{ image.tag | default(image_tag) }}"
          command:
            - /usr/bin/bash
            - -c
            - bundle exec rake 'que[--worker-count 10]'
          ports:
            - name: metrics
              containerPort: 9394
              protocol: TCP
        ## containers > zync-que > resources
          resources:
            requests:
              memory: "{{ que.resources.requests.memory | default(que_resources_requests_memory) }}"
              cpu: "{{ que.resources.requests.cpu | default(que_resources_requests_cpu) }}"
            limits:
              memory: "{{ que.resources.limits.memory | default(que_resources_limits_memory) }}"
              cpu: "{{ que.resources.limits.cpu | default(que_resources_limits_cpu) }}"
        ## containers > zync-que > probes
          livenessProbe:
            httpGet:
              path: /metrics
              port: 9394
              scheme: HTTP
            initialDelaySeconds: {{ que.liveness_probe.initial_delay_seconds | default(que_liveness_probe_initial_delay_seconds) }}
            timeoutSeconds: {{ que.liveness_probe.timeout_seconds | default(que_liveness_probe_timeout_seconds) }}
            periodSeconds: {{ que.liveness_probe.period_seconds | default (que_liveness_probe_period_seconds) }}
            successThreshold: {{ que.liveness_probe.success_threshold | default(que_liveness_probe_success_threshold) }}
            failureThreshold: {{ que.liveness_probe.failure_threshold | default(que_liveness_probe_failure_threshold) }}
          readinessProbe:
            httpGet:
              path: /metrics
              port: 9394
              scheme: HTTP
            initialDelaySeconds: {{ que.readiness_probe.initial_delay_seconds | default(que_readiness_probe_initial_delay_seconds) }}
            timeoutSeconds: {{ que.readiness_probe.timeout_seconds | default(que_readiness_probe_timeout_seconds) }}
            periodSeconds: {{ que.readiness_probe.period_seconds | default(que_readiness_probe_period_seconds) }}
            successThreshold: {{ que.readiness_probe.success_threshold | default(que_readiness_probe_success_threshold) }}
            failureThreshold: {{ que.readiness_probe.failure_threshold | default(que_readiness_probe_failure_threshold) }}
        ## containers > zync-que > env
          env:
          - name: RAILS_LOG_TO_STDOUT
            value: "true"
          - name: RAILS_ENV
            value: "{{ que.env.rails_env | default(que_env_rails_env) }}"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          ### secret/zync
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                key: DB_URL
                name: zync
          - name: SECRET_KEY_BASE
            valueFrom:
              secretKeyRef:
                key: SECRET_KEY_BASE
                name: zync
          - name: ZYNC_AUTHENTICATION_TOKEN
            valueFrom:
              secretKeyRef:
                key: ZYNC_AUTHENTICATION_TOKEN
                name: zync