---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.0
  creationTimestamp: null
  name: systems.saas.3scale.net
spec:
  group: saas.3scale.net
  names:
    kind: System
    listKind: SystemList
    plural: systems
    singular: system
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: System is the Schema for the systems API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SystemSpec defines the desired state of System
            properties:
              app:
                description: Application specific configuration options
                properties:
                  canary:
                    description: Canary defines spec changes for the canary Deployment.
                      If left unset the canary Deployment wil not be created.
                    properties:
                      imageName:
                        description: ImageName to use for the canary Deployment
                        type: string
                      imageTag:
                        description: ImageTag to use for the canary Deployment
                        type: string
                      patches:
                        description: Patches to apply for the canary Deployment. Patches
                          are expected to be JSON documents as an RFC 6902 patches.
                        items:
                          type: string
                        type: array
                      replicas:
                        description: Number of replicas for the canary Deployment
                        format: int32
                        type: integer
                      sendTraffic:
                        description: SendTraffic controls if traffic is sent to the
                          canary
                        type: boolean
                    required:
                    - sendTraffic
                    type: object
                  deploymentStrategy:
                    description: The deployment strategy to use to replace existing
                      pods with new ones.
                    properties:
                      rollingUpdate:
                        description: Rolling update config params. Present only if
                          DeploymentStrategyType = RollingUpdate.
                        properties:
                          maxSurge:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of pods that can be scheduled
                              above the desired number of pods. Value can be an absolute
                              number (ex: 5) or a percentage of desired pods (ex:
                              10%). This can not be 0 if MaxUnavailable is 0. Absolute
                              number is calculated from percentage by rounding up.
                              Defaults to 25%. Example: when this is set to 30%, the
                              new ReplicaSet can be scaled up immediately when the
                              rolling update starts, such that the total number of
                              old and new pods do not exceed 130% of desired pods.
                              Once old pods have been killed, new ReplicaSet can be
                              scaled up further, ensuring that total number of pods
                              running at any time during the update is at most 130%
                              of desired pods.'
                            x-kubernetes-int-or-string: true
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of pods that can be unavailable
                              during the update. Value can be an absolute number (ex:
                              5) or a percentage of desired pods (ex: 10%). Absolute
                              number is calculated from percentage by rounding down.
                              This can not be 0 if MaxSurge is 0. Defaults to 25%.
                              Example: when this is set to 30%, the old ReplicaSet
                              can be scaled down to 70% of desired pods immediately
                              when the rolling update starts. Once new pods are ready,
                              old ReplicaSet can be scaled down further, followed
                              by scaling up the new ReplicaSet, ensuring that the
                              total number of pods available at all times during the
                              update is at least 70% of desired pods.'
                            x-kubernetes-int-or-string: true
                        type: object
                      type:
                        description: Type of deployment. Can be "Recreate" or "RollingUpdate".
                          Default is RollingUpdate.
                        type: string
                    type: object
                  hpa:
                    description: Horizontal Pod Autoscaler for the component
                    properties:
                      behavior:
                        description: Behavior configures the scaling behavior of the
                          target in both Up and Down directions (scaleUp and scaleDown
                          fields respectively). If not set, the default HPAScalingRules
                          for scale up and scale down are used.
                        properties:
                          scaleDown:
                            description: scaleDown is scaling policy for scaling Down.
                              If not set, the default value is to allow to scale down
                              to minReplicas pods, with a 300 second stabilization
                              window (i.e., the highest recommendation for the last
                              300sec is used).
                            properties:
                              policies:
                                description: policies is a list of potential scaling
                                  polices which can be used during scaling. At least
                                  one policy must be specified, otherwise the HPAScalingRules
                                  will be discarded as invalid
                                items:
                                  description: HPAScalingPolicy is a single policy
                                    which must hold true for a specified past interval.
                                  properties:
                                    periodSeconds:
                                      description: periodSeconds specifies the window
                                        of time for which the policy should hold true.
                                        PeriodSeconds must be greater than zero and
                                        less than or equal to 1800 (30 min).
                                      format: int32
                                      type: integer
                                    type:
                                      description: type is used to specify the scaling
                                        policy.
                                      type: string
                                    value:
                                      description: value contains the amount of change
                                        which is permitted by the policy. It must
                                        be greater than zero
                                      format: int32
                                      type: integer
                                  required:
                                  - periodSeconds
                                  - type
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              selectPolicy:
                                description: selectPolicy is used to specify which
                                  policy should be used. If not set, the default value
                                  Max is used.
                                type: string
                              stabilizationWindowSeconds:
                                description: 'stabilizationWindowSeconds is the number
                                  of seconds for which past recommendations should
                                  be considered while scaling up or scaling down.
                                  StabilizationWindowSeconds must be greater than
                                  or equal to zero and less than or equal to 3600
                                  (one hour). If not set, use the default values:
                                  - For scale up: 0 (i.e. no stabilization is done).
                                  - For scale down: 300 (i.e. the stabilization window
                                  is 300 seconds long).'
                                format: int32
                                type: integer
                            type: object
                          scaleUp:
                            description: 'scaleUp is scaling policy for scaling Up.
                              If not set, the default value is the higher of: * increase
                              no more than 4 pods per 60 seconds * double the number
                              of pods per 60 seconds No stabilization is used.'
                            properties:
                              policies:
                                description: policies is a list of potential scaling
                                  polices which can be used during scaling. At least
                                  one policy must be specified, otherwise the HPAScalingRules
                                  will be discarded as invalid
                                items:
                                  description: HPAScalingPolicy is a single policy
                                    which must hold true for a specified past interval.
                                  properties:
                                    periodSeconds:
                                      description: periodSeconds specifies the window
                                        of time for which the policy should hold true.
                                        PeriodSeconds must be greater than zero and
                                        less than or equal to 1800 (30 min).
                                      format: int32
                                      type: integer
                                    type:
                                      description: type is used to specify the scaling
                                        policy.
                                      type: string
                                    value:
                                      description: value contains the amount of change
                                        which is permitted by the policy. It must
                                        be greater than zero
                                      format: int32
                                      type: integer
                                  required:
                                  - periodSeconds
                                  - type
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              selectPolicy:
                                description: selectPolicy is used to specify which
                                  policy should be used. If not set, the default value
                                  Max is used.
                                type: string
                              stabilizationWindowSeconds:
                                description: 'stabilizationWindowSeconds is the number
                                  of seconds for which past recommendations should
                                  be considered while scaling up or scaling down.
                                  StabilizationWindowSeconds must be greater than
                                  or equal to zero and less than or equal to 3600
                                  (one hour). If not set, use the default values:
                                  - For scale up: 0 (i.e. no stabilization is done).
                                  - For scale down: 300 (i.e. the stabilization window
                                  is 300 seconds long).'
                                format: int32
                                type: integer
                            type: object
                        type: object
                      maxReplicas:
                        description: Upper limit for the number of replicas to which
                          the autoscaler can scale up. It cannot be less that minReplicas.
                        format: int32
                        type: integer
                      minReplicas:
                        description: Lower limit for the number of replicas to which
                          the autoscaler can scale down.  It defaults to 1 pod.  minReplicas
                          is allowed to be 0 if the alpha feature gate HPAScaleToZero
                          is enabled and at least one Object or External metric is
                          configured.  Scaling is active as long as at least one metric
                          value is available.
                        format: int32
                        type: integer
                      resourceName:
                        description: Target resource used to autoscale (cpu/memory)
                        enum:
                        - cpu
                        - memory
                        type: string
                      resourceUtilization:
                        description: A percentage indicating the target resource consumption
                          used to autoscale
                        format: int32
                        type: integer
                    type: object
                  livenessProbe:
                    description: Liveness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  pdb:
                    description: Pod Disruption Budget for the component
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: An eviction is allowed if at most "maxUnavailable"
                          pods selected by "selector" are unavailable after the eviction,
                          i.e. even in absence of the evicted pod. For example, one
                          can prevent all voluntary evictions by specifying 0. This
                          is a mutually exclusive setting with "minAvailable".
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: An eviction is allowed if at least "minAvailable"
                          pods selected by "selector" will still be available after
                          the eviction, i.e. even in the absence of the evicted pod.  So
                          for example you can prevent all voluntary evictions by specifying
                          "100%".
                        x-kubernetes-int-or-string: true
                    type: object
                  publishingStrategies:
                    description: Describes how the services provided by this workload
                      are exposed to its consumers
                    properties:
                      endpoints:
                        description: Endpoints holds the list of publishing strategies
                          for each workload endpoint.
                        items:
                          properties:
                            create:
                              description: Create explicitely tells the controller
                                that this is a new endpoint that should be added.
                                Default is false, causing the controller to error
                                when seeing an unknown endpoint.
                              type: boolean
                            marin3rSidecar:
                              description: Marin3rSidecar holds configuration for
                                the Marin3rSidecar publishing strategy
                              properties:
                                dynamicConfigs:
                                  additionalProperties:
                                    maxProperties: 2
                                    minProperties: 2
                                    properties:
                                      cluster:
                                        description: Cluster contains options for
                                          an Envoy cluster protobuffer message
                                        properties:
                                          host:
                                            description: The upstream host
                                            type: string
                                          isHttp2:
                                            default: false
                                            description: Specifies if the upstream
                                              cluster is http2 or not (default).
                                            type: boolean
                                          port:
                                            description: The upstream port
                                            format: int32
                                            type: integer
                                        required:
                                        - host
                                        - port
                                        type: object
                                      generatorVersion:
                                        default: v1
                                        description: GeneratorVersion specifies the
                                          version of a given template. "v1" is the
                                          default.
                                        type: string
                                      listenerHttp:
                                        description: ListenerHttp contains options
                                          for an HTTP/HTTPS listener
                                        properties:
                                          allowHeadersWithUnderscores:
                                            default: true
                                            description: Allow headers with underscores
                                            type: boolean
                                          certificateSecretName:
                                            description: The name of the Secret containing
                                              a valid certificate. If unset the listener
                                              will be http, if set https
                                            type: string
                                          defaultHostForHttp10:
                                            description: If this filed is set, http
                                              1.0 will be enabled and this will be
                                              the default hostname to use.
                                            type: string
                                          enableHttp2:
                                            default: false
                                            description: Enable http2 in the listener.Disabled
                                              by default.
                                            type: boolean
                                          maxConnectionDuration:
                                            description: Max connection duration.
                                              If unset no max connection duration
                                              will be applied.
                                            type: string
                                          port:
                                            description: The port where the listener
                                              listens for new connections
                                            format: int32
                                            type: integer
                                          proxyProtocol:
                                            default: true
                                            description: Whether proxy protocol should
                                              be enabled or not. Defaults to true.
                                            type: boolean
                                          rateLimitOptions:
                                            description: Rate limit options for the
                                              ratelimit filter of the HTTP connection
                                              manager
                                            properties:
                                              domain:
                                                description: The rate limit domain
                                                type: string
                                              failureModeDeny:
                                                default: false
                                                description: Whether to allow requests
                                                  or not if the rate limit service
                                                  is unavailable
                                                type: boolean
                                              rateLimitCluster:
                                                description: Location of the rate
                                                  limit service. Must point to one
                                                  of the defined clusters.
                                                type: string
                                              timeout:
                                                description: Max time to wait for
                                                  a response from the rate limit service
                                                format: duration
                                                type: string
                                            required:
                                            - domain
                                            - rateLimitCluster
                                            - timeout
                                            type: object
                                          routeConfigName:
                                            description: The name of the RouteConfiguration
                                              to use in the listener
                                            type: string
                                        required:
                                        - port
                                        - routeConfigName
                                        type: object
                                      rawConfig:
                                        description: RawConfig is a struct with methods
                                          to manage a configuration defined using
                                          directly the Envoy config API
                                        properties:
                                          type:
                                            description: Type is the type url for
                                              the protobuf message
                                            enum:
                                            - listener
                                            - routeConfiguration
                                            - cluster
                                            - runtime
                                            type: string
                                          value:
                                            description: 'Allows defining configuration
                                              using directly envoy''s config API.
                                              WARNING: no validation of this field''s
                                              value is performed before writting the
                                              custom resource to etcd.'
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        required:
                                        - type
                                        - value
                                        type: object
                                      routeConfiguration:
                                        description: RouteConfiguration contains options
                                          for an Envoy route_configuration protobuffer
                                          message
                                        properties:
                                          virtualHosts:
                                            description: The virtual_hosts definitions
                                              for this route configuration. Virtual
                                              hosts must be specified using directly
                                              Envoy's API
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        required:
                                        - virtualHosts
                                        type: object
                                      runtime:
                                        description: Runtime contains options for
                                          an Envoy runtime protobuffer message
                                        properties:
                                          listenerNames:
                                            description: The list of listeners to
                                              apply overload protection limits to
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - listenerNames
                                        type: object
                                    type: object
                                  description: Envoy dynamic configuration. Populating
                                    this field causes the operator to create a Marin3r
                                    EnvoyConfig resource, so Marin3r must be installed
                                    in the cluster.
                                  type: object
                                elasticLoadBalancerConfig:
                                  description: Classic LB configuration
                                  properties:
                                    connectionDrainingEnabled:
                                      description: Enables/disables connection draining
                                      type: boolean
                                    connectionDrainingTimeout:
                                      description: Sets the timeout for connection
                                        draining
                                      format: int32
                                      type: integer
                                    crossZoneLoadBalancingEnabled:
                                      description: Enables/disables cross zone load
                                        balancing
                                      type: boolean
                                    healthcheckHealthyThreshold:
                                      description: Sets the healthy threshold for
                                        the load balancer
                                      format: int32
                                      type: integer
                                    healthcheckInterval:
                                      description: Sets the interval between health
                                        checks
                                      format: int32
                                      type: integer
                                    healthcheckTimeout:
                                      description: Sets the timeout for the health
                                        check
                                      format: int32
                                      type: integer
                                    healthcheckUnhealthyThreshold:
                                      description: Sets the unhealthy threshold for
                                        the load balancer
                                      format: int32
                                      type: integer
                                    proxyProtocol:
                                      description: Enables/disbles use of proxy protocol
                                        in the load balancer
                                      type: boolean
                                  type: object
                                envoyAPIVersion:
                                  description: The Envoy API version to use
                                  enum:
                                  - v3
                                  type: string
                                envoyImage:
                                  description: The Envoy iamge to use
                                  type: string
                                externalDnsHostnames:
                                  description: ExternalDnsHostnames defines the hostnames
                                    that ExternalDNS should configure records for
                                    external consumners to reach the service Only
                                    works with Services of type NLB/ELB
                                  items:
                                    type: string
                                  type: array
                                extraPodAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: Extra annotations to pass the Pod to
                                    further configure the sidecar container.
                                  type: object
                                networkLoadBalancerConfig:
                                  description: NLB configuration
                                  properties:
                                    crossZoneLoadBalancingEnabled:
                                      description: Enables/disables cross zone load
                                        balancing
                                      type: boolean
                                    deletionProtection:
                                      description: Deletion protection setting
                                      type: boolean
                                    eipAllocations:
                                      description: The list of optional Elastic IPs
                                        allocations
                                      items:
                                        type: string
                                      type: array
                                    loadBalancerName:
                                      description: Optionally specify the load balancer
                                        name
                                      type: string
                                    proxyProtocol:
                                      description: Enables/disbles use of proxy protocol
                                        in the load balancer
                                      type: boolean
                                  type: object
                                nodeID:
                                  description: The NodeID that identifies the Envoy
                                    sidecar to the DiscoveryService
                                  type: string
                                ports:
                                  description: The ports that the sidecar exposes
                                  items:
                                    description: SidecarPort defines port for the
                                      Marin3r sidecar container
                                    properties:
                                      name:
                                        description: Port name
                                        type: string
                                      port:
                                        description: Port value
                                        format: int32
                                        type: integer
                                    required:
                                    - name
                                    - port
                                    type: object
                                  type: array
                                resources:
                                  description: Compute Resources required by the sidecar
                                    container.
                                  properties:
                                    claims:
                                      description: "Claims lists the names of resources,
                                        defined in spec.resourceClaims, that are used
                                        by this container. \n This is an alpha field
                                        and requires enabling the DynamicResourceAllocation
                                        feature gate. \n This field is immutable."
                                      items:
                                        description: ResourceClaim references one
                                          entry in PodSpec.ResourceClaims.
                                        properties:
                                          name:
                                            description: Name must match the name
                                              of one entry in pod.spec.resourceClaims
                                              of the Pod where this field is used.
                                              It makes that resource available inside
                                              a container.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                      type: object
                                  type: object
                                serviceName:
                                  description: ServiceNameOverride allows the user
                                    to override the generated Service name
                                  type: string
                                servicePorts:
                                  description: ServicePortsOverride allows the user
                                    to override the ports of a Service. It's a replace
                                    operation, so specify all the required ports.
                                  items:
                                    description: ServicePort contains information
                                      on service's port.
                                    properties:
                                      appProtocol:
                                        description: "The application protocol for
                                          this port. This is used as a hint for implementations
                                          to offer richer behavior for protocols that
                                          they understand. This field follows standard
                                          Kubernetes label syntax. Valid values are
                                          either: \n * Un-prefixed protocol names
                                          - reserved for IANA standard service names
                                          (as per RFC-6335 and https://www.iana.org/assignments/service-names).
                                          \n * Kubernetes-defined prefixed names:
                                          * 'kubernetes.io/h2c' - HTTP/2 prior knowledge
                                          over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
                                          * 'kubernetes.io/ws'  - WebSocket over cleartext
                                          as described in https://www.rfc-editor.org/rfc/rfc6455
                                          * 'kubernetes.io/wss' - WebSocket over TLS
                                          as described in https://www.rfc-editor.org/rfc/rfc6455
                                          \n * Other protocols should use implementation-defined
                                          prefixed names such as mycompany.com/my-custom-protocol."
                                        type: string
                                      name:
                                        description: The name of this port within
                                          the service. This must be a DNS_LABEL. All
                                          ports within a ServiceSpec must have unique
                                          names. When considering the endpoints for
                                          a Service, this must match the 'name' field
                                          in the EndpointPort. Optional if only one
                                          ServicePort is defined on this service.
                                        type: string
                                      nodePort:
                                        description: 'The port on each node on which
                                          this service is exposed when type is NodePort
                                          or LoadBalancer.  Usually assigned by the
                                          system. If a value is specified, in-range,
                                          and not in use it will be used, otherwise
                                          the operation will fail.  If not specified,
                                          a port will be allocated if this Service
                                          requires one.  If this field is specified
                                          when creating a Service which does not need
                                          it, creation will fail. This field will
                                          be wiped when updating a Service to no longer
                                          need it (e.g. changing type from NodePort
                                          to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                        format: int32
                                        type: integer
                                      port:
                                        description: The port that will be exposed
                                          by this service.
                                        format: int32
                                        type: integer
                                      protocol:
                                        default: TCP
                                        description: The IP protocol for this port.
                                          Supports "TCP", "UDP", and "SCTP". Default
                                          is TCP.
                                        type: string
                                      targetPort:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: 'Number or name of the port to
                                          access on the pods targeted by the service.
                                          Number must be in the range 1 to 65535.
                                          Name must be an IANA_SVC_NAME. If this is
                                          a string, it will be looked up as a named
                                          port in the target Pod''s container ports.
                                          If this is not specified, the value of the
                                          ''port'' field is used (an identity map).
                                          This field is ignored for services with
                                          clusterIP=None, and should be omitted or
                                          set equal to the ''port'' field. More info:
                                          https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                        x-kubernetes-int-or-string: true
                                    required:
                                    - port
                                    type: object
                                  type: array
                                serviceType:
                                  description: ServiceType defines the type of k8s
                                    Service to use for exposing the service to its
                                    consumers
                                  type: string
                                shtdnmgrExtraLifecycleHooks:
                                  description: Extra containers to sync with the shutdown
                                    manager upon pod termination
                                  items:
                                    type: string
                                  type: array
                                shtdnmgrPort:
                                  description: The port where Marin3r's shutdown manager
                                    listens
                                  format: int32
                                  type: integer
                              type: object
                            name:
                              description: EndpointName defines the endpoint affected
                                by this publishing strategy
                              type: string
                            simple:
                              description: Simple holds configuration for the Simple
                                publishing strategy
                              properties:
                                elasticLoadBalancerConfig:
                                  description: Classic LB configuration
                                  properties:
                                    connectionDrainingEnabled:
                                      description: Enables/disables connection draining
                                      type: boolean
                                    connectionDrainingTimeout:
                                      description: Sets the timeout for connection
                                        draining
                                      format: int32
                                      type: integer
                                    crossZoneLoadBalancingEnabled:
                                      description: Enables/disables cross zone load
                                        balancing
                                      type: boolean
                                    healthcheckHealthyThreshold:
                                      description: Sets the healthy threshold for
                                        the load balancer
                                      format: int32
                                      type: integer
                                    healthcheckInterval:
                                      description: Sets the interval between health
                                        checks
                                      format: int32
                                      type: integer
                                    healthcheckTimeout:
                                      description: Sets the timeout for the health
                                        check
                                      format: int32
                                      type: integer
                                    healthcheckUnhealthyThreshold:
                                      description: Sets the unhealthy threshold for
                                        the load balancer
                                      format: int32
                                      type: integer
                                    proxyProtocol:
                                      description: Enables/disbles use of proxy protocol
                                        in the load balancer
                                      type: boolean
                                  type: object
                                externalDnsHostnames:
                                  description: ExternalDnsHostnames defines the hostnames
                                    that ExternalDNS should configure records for
                                    external consumners to reach the service Only
                                    works with Services of type NLB/ELB
                                  items:
                                    type: string
                                  type: array
                                networkLoadBalancerConfig:
                                  description: NLB configuration
                                  properties:
                                    crossZoneLoadBalancingEnabled:
                                      description: Enables/disables cross zone load
                                        balancing
                                      type: boolean
                                    deletionProtection:
                                      description: Deletion protection setting
                                      type: boolean
                                    eipAllocations:
                                      description: The list of optional Elastic IPs
                                        allocations
                                      items:
                                        type: string
                                      type: array
                                    loadBalancerName:
                                      description: Optionally specify the load balancer
                                        name
                                      type: string
                                    proxyProtocol:
                                      description: Enables/disbles use of proxy protocol
                                        in the load balancer
                                      type: boolean
                                  type: object
                                serviceName:
                                  description: ServiceNameOverride allows the user
                                    to override the generated Service name
                                  type: string
                                servicePorts:
                                  description: ServicePortsOverride allows the user
                                    to override the ports of a Service. It's a replace
                                    operation, so specify all the required ports.
                                  items:
                                    description: ServicePort contains information
                                      on service's port.
                                    properties:
                                      appProtocol:
                                        description: "The application protocol for
                                          this port. This is used as a hint for implementations
                                          to offer richer behavior for protocols that
                                          they understand. This field follows standard
                                          Kubernetes label syntax. Valid values are
                                          either: \n * Un-prefixed protocol names
                                          - reserved for IANA standard service names
                                          (as per RFC-6335 and https://www.iana.org/assignments/service-names).
                                          \n * Kubernetes-defined prefixed names:
                                          * 'kubernetes.io/h2c' - HTTP/2 prior knowledge
                                          over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
                                          * 'kubernetes.io/ws'  - WebSocket over cleartext
                                          as described in https://www.rfc-editor.org/rfc/rfc6455
                                          * 'kubernetes.io/wss' - WebSocket over TLS
                                          as described in https://www.rfc-editor.org/rfc/rfc6455
                                          \n * Other protocols should use implementation-defined
                                          prefixed names such as mycompany.com/my-custom-protocol."
                                        type: string
                                      name:
                                        description: The name of this port within
                                          the service. This must be a DNS_LABEL. All
                                          ports within a ServiceSpec must have unique
                                          names. When considering the endpoints for
                                          a Service, this must match the 'name' field
                                          in the EndpointPort. Optional if only one
                                          ServicePort is defined on this service.
                                        type: string
                                      nodePort:
                                        description: 'The port on each node on which
                                          this service is exposed when type is NodePort
                                          or LoadBalancer.  Usually assigned by the
                                          system. If a value is specified, in-range,
                                          and not in use it will be used, otherwise
                                          the operation will fail.  If not specified,
                                          a port will be allocated if this Service
                                          requires one.  If this field is specified
                                          when creating a Service which does not need
                                          it, creation will fail. This field will
                                          be wiped when updating a Service to no longer
                                          need it (e.g. changing type from NodePort
                                          to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                        format: int32
                                        type: integer
                                      port:
                                        description: The port that will be exposed
                                          by this service.
                                        format: int32
                                        type: integer
                                      protocol:
                                        default: TCP
                                        description: The IP protocol for this port.
                                          Supports "TCP", "UDP", and "SCTP". Default
                                          is TCP.
                                        type: string
                                      targetPort:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: 'Number or name of the port to
                                          access on the pods targeted by the service.
                                          Number must be in the range 1 to 65535.
                                          Name must be an IANA_SVC_NAME. If this is
                                          a string, it will be looked up as a named
                                          port in the target Pod''s container ports.
                                          If this is not specified, the value of the
                                          ''port'' field is used (an identity map).
                                          This field is ignored for services with
                                          clusterIP=None, and should be omitted or
                                          set equal to the ''port'' field. More info:
                                          https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                        x-kubernetes-int-or-string: true
                                    required:
                                    - port
                                    type: object
                                  type: array
                                serviceType:
                                  description: ServiceType defines the type of k8s
                                    Service to use for exposing the service to its
                                    consumers
                                  type: string
                              type: object
                            strategy:
                              description: Strategy defines the type of publishing
                                strategy
                              type: string
                          required:
                          - name
                          - strategy
                          type: object
                        type: array
                      mode:
                        description: PublishingStrategiesReconcileMode specifies if
                          the list of strategies should be merged with the defautls
                          or replace them entirely. Allowed values are "Merge" or
                          "Replace". "Replace" strategy should be used to enable 2
                          strategies at the same time for a single endpoint.
                        type: string
                    type: object
                  readinessProbe:
                    description: Readiness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  replicas:
                    description: Number of replicas (ignored if hpa is enabled) for
                      the component
                    format: int32
                    type: integer
                  resources:
                    description: Resource requirements for the component
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  terminationGracePeriodSeconds:
                    description: Configures the TerminationGracePeriodSeconds
                    format: int64
                    type: integer
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
              config:
                description: Application specific configuration options for System
                  components
                properties:
                  accessCode:
                    description: AccessCode to protect admin urls
                    properties:
                      fromSeed:
                        description: FromSeed will try to retrieve the secret value
                          from the default seed Secret.
                        type: object
                      fromVault:
                        description: FromVault is a reference to a secret key/value
                          stored in a Hashicorp Vault
                        properties:
                          key:
                            description: The Vault key of the secret
                            type: string
                          path:
                            description: The Vault path where the secret is located
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      override:
                        description: Override allows to directly specify a string
                          value.
                        type: string
                    type: object
                  apicast:
                    description: Apicast can be used to pass down apicast endpoints
                      configuration
                    properties:
                      cloudHostedRegistryURL:
                        description: Policies registry URL for Apicast Cloud Hosteed
                        type: string
                      productionDomain:
                        description: Apicast Production endpoint
                        type: string
                      selfManagedRegistryURL:
                        description: Policies registry URL for Apicast Self Managed
                          (on-prem)
                        type: string
                      stagingDomain:
                        description: Apicast Staging endpoint
                        type: string
                    required:
                    - cloudHostedRegistryURL
                    - productionDomain
                    - selfManagedRegistryURL
                    - stagingDomain
                    type: object
                  assets:
                    description: Assets has configuration to access assets in AWS
                      s3
                    properties:
                      accessKey:
                        description: AWS access key
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      bucket:
                        description: AWS S3 bucket name
                        type: string
                      host:
                        description: Assets host (CDN)
                        type: string
                      region:
                        description: AWS S3 region
                        type: string
                      s3Endpoint:
                        description: Assets custom S3 endpoint
                        type: string
                      secretKey:
                        description: AWS secret access key
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                    required:
                    - accessKey
                    - bucket
                    - region
                    - secretKey
                    type: object
                  backend:
                    description: Backend has configuration options for system to contact
                      backend
                    properties:
                      externalEndpoint:
                        description: External endpoint
                        type: string
                      internalAPIPassword:
                        description: Internal API password
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      internalAPIUser:
                        description: Internal API user
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      internalEndpoint:
                        description: Internal endpoint
                        type: string
                      redisDSN:
                        description: Redis data source name
                        type: string
                    required:
                    - externalEndpoint
                    - internalAPIPassword
                    - internalAPIUser
                    - internalEndpoint
                    - redisDSN
                    type: object
                  bugsnag:
                    description: Options for configuring Bugsnag integration
                    properties:
                      apiKey:
                        description: API key
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      releaseStage:
                        description: Release Stage to identify environment
                        type: string
                    required:
                    - apiKey
                    type: object
                  configFilesSecret:
                    description: Secret containging system configuration files to
                      be mounted in the pods
                    type: string
                  databaseDSN:
                    description: DSN of system's main database
                    properties:
                      fromSeed:
                        description: FromSeed will try to retrieve the secret value
                          from the default seed Secret.
                        type: object
                      fromVault:
                        description: FromVault is a reference to a secret key/value
                          stored in a Hashicorp Vault
                        properties:
                          key:
                            description: The Vault key of the secret
                            type: string
                          path:
                            description: The Vault path where the secret is located
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      override:
                        description: Override allows to directly specify a string
                          value.
                        type: string
                    type: object
                  databaseSecret:
                    description: DatabaseSecret is a site key stored off-database
                      for improved more secure password hashing See https://github.com/3scale/porta/blob/ae498814cef3d856613f60d29330882fa870271d/config/initializers/site_keys.rb#L2-L19
                    properties:
                      fromSeed:
                        description: FromSeed will try to retrieve the secret value
                          from the default seed Secret.
                        type: object
                      fromVault:
                        description: FromVault is a reference to a secret key/value
                          stored in a Hashicorp Vault
                        properties:
                          key:
                            description: The Vault key of the secret
                            type: string
                          path:
                            description: The Vault path where the secret is located
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      override:
                        description: Override allows to directly specify a string
                          value.
                        type: string
                    type: object
                  eventsSharedSecret:
                    description: EventsSharedSecret is a password that protects System's
                      event hooks endpoint.
                    properties:
                      fromSeed:
                        description: FromSeed will try to retrieve the secret value
                          from the default seed Secret.
                        type: object
                      fromVault:
                        description: FromVault is a reference to a secret key/value
                          stored in a Hashicorp Vault
                        properties:
                          key:
                            description: The Vault key of the secret
                            type: string
                          path:
                            description: The Vault path where the secret is located
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      override:
                        description: Override allows to directly specify a string
                          value.
                        type: string
                    type: object
                  externalSecret:
                    description: External Secret common configuration
                    properties:
                      refreshInterval:
                        description: RefreshInterval is the amount of time before
                          the values reading again from the SecretStore provider (duration)
                        type: string
                      secretStoreRef:
                        description: SecretStoreRef defines which SecretStore to use
                          when fetching the secret data
                        properties:
                          kind:
                            description: The Vault secret store reference kind
                            type: string
                          name:
                            description: The Vault secret store reference name
                            type: string
                        type: object
                    type: object
                  forceSSL:
                    description: Enable (true) or disable (false) enforcing SSL
                    type: boolean
                  github:
                    description: Options for Github integration
                    properties:
                      clientID:
                        description: Client ID
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      clientSecret:
                        description: Client secret
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                    required:
                    - clientID
                    - clientSecret
                    type: object
                  mappingServiceAccessToken:
                    description: Mapping Service access token
                    properties:
                      fromSeed:
                        description: FromSeed will try to retrieve the secret value
                          from the default seed Secret.
                        type: object
                      fromVault:
                        description: FromVault is a reference to a secret key/value
                          stored in a Hashicorp Vault
                        properties:
                          key:
                            description: The Vault key of the secret
                            type: string
                          path:
                            description: The Vault path where the secret is located
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      override:
                        description: Override allows to directly specify a string
                          value.
                        type: string
                    type: object
                  memcachedServers:
                    description: Memcached servers
                    type: string
                  rails:
                    description: Rails configuration options for system components
                    properties:
                      console:
                        description: Rails Console
                        type: boolean
                      environment:
                        description: Rails environment
                        type: string
                      logLevel:
                        description: Rails log level (debug, info, warn, error, fatal
                          or unknown)
                        enum:
                        - debug
                        - info
                        - warn
                        - error
                        - fatal
                        - unknown
                        type: string
                    type: object
                  recaptcha:
                    description: Holds recaptcha configuration options
                    properties:
                      privateKey:
                        description: Private key
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      publicKey:
                        description: Public key
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                    required:
                    - privateKey
                    - publicKey
                    type: object
                  redhatCustomerPortal:
                    description: Options for configuring RH Customer Portal integration
                    properties:
                      clientID:
                        description: Client ID
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      clientSecret:
                        description: Client secret
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      realm:
                        description: Realm
                        type: string
                    required:
                    - clientID
                    - clientSecret
                    type: object
                  redis:
                    description: Redis configuration options
                    properties:
                      queuesDSN:
                        description: Data source name
                        type: string
                    required:
                    - queuesDSN
                    type: object
                  sandboxProxyOpensslVerifyMode:
                    description: OpenSSL verification mode for sandbox proxy
                    type: string
                  searchServer:
                    description: Search service options
                    properties:
                      batchSize:
                        description: Defines the batch size
                        format: int32
                        type: integer
                      host:
                        description: Defines the address host
                        type: string
                      port:
                        description: Defines the address port
                        format: int32
                        type: integer
                    type: object
                  secretKeyBase:
                    description: 'SecretKeyBase: https://api.rubyonrails.org/classes/Rails/Application.html#method-i-secret_key_base
                      You can generate one random key using ''bundle exec rake secret'''
                    properties:
                      fromSeed:
                        description: FromSeed will try to retrieve the secret value
                          from the default seed Secret.
                        type: object
                      fromVault:
                        description: FromVault is a reference to a secret key/value
                          stored in a Hashicorp Vault
                        properties:
                          key:
                            description: The Vault key of the secret
                            type: string
                          path:
                            description: The Vault path where the secret is located
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      override:
                        description: Override allows to directly specify a string
                          value.
                        type: string
                    type: object
                  segment:
                    description: Options for Segment integration
                    properties:
                      deletionToken:
                        description: Deletion token
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      deletionWorkspace:
                        description: Deletion workspace
                        type: string
                      writeKey:
                        description: Write key
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                    required:
                    - deletionToken
                    - deletionWorkspace
                    - writeKey
                    type: object
                  smtp:
                    description: SMTP configuration options
                    properties:
                      address:
                        description: Address
                        type: string
                      authProtocol:
                        description: Authentication protocol
                        type: string
                      opensslVerifyMode:
                        description: OpenSSL verify mode
                        type: string
                      password:
                        description: Password
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      port:
                        description: Port
                        format: int32
                        type: integer
                      starttls:
                        description: Enable/disable STARTTLS
                        type: boolean
                      starttlsAuto:
                        description: Enable/disable auto STARTTLS
                        type: boolean
                      user:
                        description: User
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                    required:
                    - address
                    - authProtocol
                    - opensslVerifyMode
                    - password
                    - port
                    - user
                    type: object
                  sslCertsDir:
                    description: SSL certificates path
                    type: string
                  threescaleProviderPlan:
                    description: 3scale provider plan
                    type: string
                  threescaleSuperdomain:
                    description: 3scale superdomain
                    type: string
                  zync:
                    description: Zync has configuration options for system to contact
                      zync
                    properties:
                      authToken:
                        description: Zync authentication token
                        properties:
                          fromSeed:
                            description: FromSeed will try to retrieve the secret
                              value from the default seed Secret.
                            type: object
                          fromVault:
                            description: FromVault is a reference to a secret key/value
                              stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      endpoint:
                        description: Zync endpoint
                        type: string
                    required:
                    - authToken
                    - endpoint
                    type: object
                required:
                - assets
                - backend
                - databaseDSN
                - databaseSecret
                - eventsSharedSecret
                - github
                - mappingServiceAccessToken
                - memcachedServers
                - recaptcha
                - redhatCustomerPortal
                - redis
                - secretKeyBase
                - segment
                - smtp
                type: object
              console:
                description: Console specific configuration options
                properties:
                  image:
                    description: Image specification for the Console component. Defaults
                      to system image if not defined.
                    properties:
                      name:
                        description: Docker repository of the image
                        type: string
                      pullPolicy:
                        description: Pull policy for the image
                        type: string
                      pullSecretName:
                        description: Name of the Secret that holds quay.io credentials
                          to access the image repository
                        type: string
                      tag:
                        description: Image tag
                        type: string
                    type: object
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  resources:
                    description: Resource requirements for the component
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
              grafanaDashboard:
                description: Configures the Grafana Dashboard for the component
                properties:
                  selectorKey:
                    description: Label key used by grafana-operator for dashboard
                      discovery
                    type: string
                  selectorValue:
                    description: Label value used by grafana-operator for dashboard
                      discovery
                    type: string
                type: object
              image:
                description: Image specification for the component
                properties:
                  name:
                    description: Docker repository of the image
                    type: string
                  pullPolicy:
                    description: Pull policy for the image
                    type: string
                  pullSecretName:
                    description: Name of the Secret that holds quay.io credentials
                      to access the image repository
                    type: string
                  tag:
                    description: Image tag
                    type: string
                type: object
              searchd:
                description: Searchd specific configuration options
                properties:
                  config:
                    description: Configuration options for System's Searchd
                    properties:
                      databasePath:
                        description: Searchd database path
                        type: string
                      databaseStorageClass:
                        description: Searchd database storage type
                        type: string
                      databaseStorageSize:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Searchd database storage size
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      port:
                        description: The TCP port Searchd will run its daemon on
                        format: int32
                        type: integer
                      serviceName:
                        description: Allows setting the service name for Searchd
                        type: string
                    type: object
                  enabled:
                    description: Deploy searchd instance
                    type: boolean
                  image:
                    description: Image specification for the Searchd component. Defaults
                      to system image if not defined.
                    properties:
                      name:
                        description: Docker repository of the image
                        type: string
                      pullPolicy:
                        description: Pull policy for the image
                        type: string
                      pullSecretName:
                        description: Name of the Secret that holds quay.io credentials
                          to access the image repository
                        type: string
                      tag:
                        description: Image tag
                        type: string
                    type: object
                  livenessProbe:
                    description: Liveness probe for the Searchd component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      Searchd pod
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  readinessProbe:
                    description: Readiness probe for the Searchd component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  resources:
                    description: Resource requirements for the Searchd component
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  terminationGracePeriodSeconds:
                    description: Configures the TerminationGracePeriodSeconds for
                      Searchd
                    format: int64
                    type: integer
                  tolerations:
                    description: If specified, the Searchd pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
              sidekiqBilling:
                description: Sidekiq Billing specific configuration options
                properties:
                  canary:
                    description: Canary defines spec changes for the canary Deployment.
                      If left unset the canary Deployment wil not be created.
                    properties:
                      imageName:
                        description: ImageName to use for the canary Deployment
                        type: string
                      imageTag:
                        description: ImageTag to use for the canary Deployment
                        type: string
                      patches:
                        description: Patches to apply for the canary Deployment. Patches
                          are expected to be JSON documents as an RFC 6902 patches.
                        items:
                          type: string
                        type: array
                      replicas:
                        description: Number of replicas for the canary Deployment
                        format: int32
                        type: integer
                      sendTraffic:
                        description: SendTraffic controls if traffic is sent to the
                          canary
                        type: boolean
                    required:
                    - sendTraffic
                    type: object
                  config:
                    description: Sidekiq specific configuration options for the component
                      element
                    properties:
                      maxThreads:
                        description: Number of rails max threads per sidekiq pod
                        format: int32
                        type: integer
                      queues:
                        description: 'List of queues to be consumed by sidekiq. Format:
                          queue[,Priority]'
                        items:
                          type: string
                        type: array
                    type: object
                  deploymentStrategy:
                    description: The deployment strategy to use to replace existing
                      pods with new ones.
                    properties:
                      rollingUpdate:
                        description: Rolling update config params. Present only if
                          DeploymentStrategyType = RollingUpdate.
                        properties:
                          maxSurge:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of pods that can be scheduled
                              above the desired number of pods. Value can be an absolute
                              number (ex: 5) or a percentage of desired pods (ex:
                              10%). This can not be 0 if MaxUnavailable is 0. Absolute
                              number is calculated from percentage by rounding up.
                              Defaults to 25%. Example: when this is set to 30%, the
                              new ReplicaSet can be scaled up immediately when the
                              rolling update starts, such that the total number of
                              old and new pods do not exceed 130% of desired pods.
                              Once old pods have been killed, new ReplicaSet can be
                              scaled up further, ensuring that total number of pods
                              running at any time during the update is at most 130%
                              of desired pods.'
                            x-kubernetes-int-or-string: true
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of pods that can be unavailable
                              during the update. Value can be an absolute number (ex:
                              5) or a percentage of desired pods (ex: 10%). Absolute
                              number is calculated from percentage by rounding down.
                              This can not be 0 if MaxSurge is 0. Defaults to 25%.
                              Example: when this is set to 30%, the old ReplicaSet
                              can be scaled down to 70% of desired pods immediately
                              when the rolling update starts. Once new pods are ready,
                              old ReplicaSet can be scaled down further, followed
                              by scaling up the new ReplicaSet, ensuring that the
                              total number of pods available at all times during the
                              update is at least 70% of desired pods.'
                            x-kubernetes-int-or-string: true
                        type: object
                      type:
                        description: Type of deployment. Can be "Recreate" or "RollingUpdate".
                          Default is RollingUpdate.
                        type: string
                    type: object
                  hpa:
                    description: Horizontal Pod Autoscaler for the component
                    properties:
                      behavior:
                        description: Behavior configures the scaling behavior of the
                          target in both Up and Down directions (scaleUp and scaleDown
                          fields respectively). If not set, the default HPAScalingRules
                          for scale up and scale down are used.
                        properties:
                          scaleDown:
                            description: scaleDown is scaling policy for scaling Down.
                              If not set, the default value is to allow to scale down
                              to minReplicas pods, with a 300 second stabilization
                              window (i.e., the highest recommendation for the last
                              300sec is used).
                            properties:
                              policies:
                                description: policies is a list of potential scaling
                                  polices which can be used during scaling. At least
                                  one policy must be specified, otherwise the HPAScalingRules
                                  will be discarded as invalid
                                items:
                                  description: HPAScalingPolicy is a single policy
                                    which must hold true for a specified past interval.
                                  properties:
                                    periodSeconds:
                                      description: periodSeconds specifies the window
                                        of time for which the policy should hold true.
                                        PeriodSeconds must be greater than zero and
                                        less than or equal to 1800 (30 min).
                                      format: int32
                                      type: integer
                                    type:
                                      description: type is used to specify the scaling
                                        policy.
                                      type: string
                                    value:
                                      description: value contains the amount of change
                                        which is permitted by the policy. It must
                                        be greater than zero
                                      format: int32
                                      type: integer
                                  required:
                                  - periodSeconds
                                  - type
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              selectPolicy:
                                description: selectPolicy is used to specify which
                                  policy should be used. If not set, the default value
                                  Max is used.
                                type: string
                              stabilizationWindowSeconds:
                                description: 'stabilizationWindowSeconds is the number
                                  of seconds for which past recommendations should
                                  be considered while scaling up or scaling down.
                                  StabilizationWindowSeconds must be greater than
                                  or equal to zero and less than or equal to 3600
                                  (one hour). If not set, use the default values:
                                  - For scale up: 0 (i.e. no stabilization is done).
                                  - For scale down: 300 (i.e. the stabilization window
                                  is 300 seconds long).'
                                format: int32
                                type: integer
                            type: object
                          scaleUp:
                            description: 'scaleUp is scaling policy for scaling Up.
                              If not set, the default value is the higher of: * increase
                              no more than 4 pods per 60 seconds * double the number
                              of pods per 60 seconds No stabilization is used.'
                            properties:
                              policies:
                                description: policies is a list of potential scaling
                                  polices which can be used during scaling. At least
                                  one policy must be specified, otherwise the HPAScalingRules
                                  will be discarded as invalid
                                items:
                                  description: HPAScalingPolicy is a single policy
                                    which must hold true for a specified past interval.
                                  properties:
                                    periodSeconds:
                                      description: periodSeconds specifies the window
                                        of time for which the policy should hold true.
                                        PeriodSeconds must be greater than zero and
                                        less than or equal to 1800 (30 min).
                                      format: int32
                                      type: integer
                                    type:
                                      description: type is used to specify the scaling
                                        policy.
                                      type: string
                                    value:
                                      description: value contains the amount of change
                                        which is permitted by the policy. It must
                                        be greater than zero
                                      format: int32
                                      type: integer
                                  required:
                                  - periodSeconds
                                  - type
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              selectPolicy:
                                description: selectPolicy is used to specify which
                                  policy should be used. If not set, the default value
                                  Max is used.
                                type: string
                              stabilizationWindowSeconds:
                                description: 'stabilizationWindowSeconds is the number
                                  of seconds for which past recommendations should
                                  be considered while scaling up or scaling down.
                                  StabilizationWindowSeconds must be greater than
                                  or equal to zero and less than or equal to 3600
                                  (one hour). If not set, use the default values:
                                  - For scale up: 0 (i.e. no stabilization is done).
                                  - For scale down: 300 (i.e. the stabilization window
                                  is 300 seconds long).'
                                format: int32
                                type: integer
                            type: object
                        type: object
                      maxReplicas:
                        description: Upper limit for the number of replicas to which
                          the autoscaler can scale up. It cannot be less that minReplicas.
                        format: int32
                        type: integer
                      minReplicas:
                        description: Lower limit for the number of replicas to which
                          the autoscaler can scale down.  It defaults to 1 pod.  minReplicas
                          is allowed to be 0 if the alpha feature gate HPAScaleToZero
                          is enabled and at least one Object or External metric is
                          configured.  Scaling is active as long as at least one metric
                          value is available.
                        format: int32
                        type: integer
                      resourceName:
                        description: Target resource used to autoscale (cpu/memory)
                        enum:
                        - cpu
                        - memory
                        type: string
                      resourceUtilization:
                        description: A percentage indicating the target resource consumption
                          used to autoscale
                        format: int32
                        type: integer
                    type: object
                  livenessProbe:
                    description: Liveness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  pdb:
                    description: Pod Disruption Budget for the component
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: An eviction is allowed if at most "maxUnavailable"
                          pods selected by "selector" are unavailable after the eviction,
                          i.e. even in absence of the evicted pod. For example, one
                          can prevent all voluntary evictions by specifying 0. This
                          is a mutually exclusive setting with "minAvailable".
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: An eviction is allowed if at least "minAvailable"
                          pods selected by "selector" will still be available after
                          the eviction, i.e. even in the absence of the evicted pod.  So
                          for example you can prevent all voluntary evictions by specifying
                          "100%".
                        x-kubernetes-int-or-string: true
                    type: object
                  readinessProbe:
                    description: Readiness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  replicas:
                    description: Number of replicas (ignored if hpa is enabled) for
                      the component
                    format: int32
                    type: integer
                  resources:
                    description: Resource requirements for the component
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  terminationGracePeriodSeconds:
                    description: Configures the TerminationGracePeriodSeconds
                    format: int64
                    type: integer
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
              sidekiqDefault:
                description: Sidekiq Default specific configuration options
                properties:
                  canary:
                    description: Canary defines spec changes for the canary Deployment.
                      If left unset the canary Deployment wil not be created.
                    properties:
                      imageName:
                        description: ImageName to use for the canary Deployment
                        type: string
                      imageTag:
                        description: ImageTag to use for the canary Deployment
                        type: string
                      patches:
                        description: Patches to apply for the canary Deployment. Patches
                          are expected to be JSON documents as an RFC 6902 patches.
                        items:
                          type: string
                        type: array
                      replicas:
                        description: Number of replicas for the canary Deployment
                        format: int32
                        type: integer
                      sendTraffic:
                        description: SendTraffic controls if traffic is sent to the
                          canary
                        type: boolean
                    required:
                    - sendTraffic
                    type: object
                  config:
                    description: Sidekiq specific configuration options for the component
                      element
                    properties:
                      maxThreads:
                        description: Number of rails max threads per sidekiq pod
                        format: int32
                        type: integer
                      queues:
                        description: 'List of queues to be consumed by sidekiq. Format:
                          queue[,Priority]'
                        items:
                          type: string
                        type: array
                    type: object
                  deploymentStrategy:
                    description: The deployment strategy to use to replace existing
                      pods with new ones.
                    properties:
                      rollingUpdate:
                        description: Rolling update config params. Present only if
                          DeploymentStrategyType = RollingUpdate.
                        properties:
                          maxSurge:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of pods that can be scheduled
                              above the desired number of pods. Value can be an absolute
                              number (ex: 5) or a percentage of desired pods (ex:
                              10%). This can not be 0 if MaxUnavailable is 0. Absolute
                              number is calculated from percentage by rounding up.
                              Defaults to 25%. Example: when this is set to 30%, the
                              new ReplicaSet can be scaled up immediately when the
                              rolling update starts, such that the total number of
                              old and new pods do not exceed 130% of desired pods.
                              Once old pods have been killed, new ReplicaSet can be
                              scaled up further, ensuring that total number of pods
                              running at any time during the update is at most 130%
                              of desired pods.'
                            x-kubernetes-int-or-string: true
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of pods that can be unavailable
                              during the update. Value can be an absolute number (ex:
                              5) or a percentage of desired pods (ex: 10%). Absolute
                              number is calculated from percentage by rounding down.
                              This can not be 0 if MaxSurge is 0. Defaults to 25%.
                              Example: when this is set to 30%, the old ReplicaSet
                              can be scaled down to 70% of desired pods immediately
                              when the rolling update starts. Once new pods are ready,
                              old ReplicaSet can be scaled down further, followed
                              by scaling up the new ReplicaSet, ensuring that the
                              total number of pods available at all times during the
                              update is at least 70% of desired pods.'
                            x-kubernetes-int-or-string: true
                        type: object
                      type:
                        description: Type of deployment. Can be "Recreate" or "RollingUpdate".
                          Default is RollingUpdate.
                        type: string
                    type: object
                  hpa:
                    description: Horizontal Pod Autoscaler for the component
                    properties:
                      behavior:
                        description: Behavior configures the scaling behavior of the
                          target in both Up and Down directions (scaleUp and scaleDown
                          fields respectively). If not set, the default HPAScalingRules
                          for scale up and scale down are used.
                        properties:
                          scaleDown:
                            description: scaleDown is scaling policy for scaling Down.
                              If not set, the default value is to allow to scale down
                              to minReplicas pods, with a 300 second stabilization
                              window (i.e., the highest recommendation for the last
                              300sec is used).
                            properties:
                              policies:
                                description: policies is a list of potential scaling
                                  polices which can be used during scaling. At least
                                  one policy must be specified, otherwise the HPAScalingRules
                                  will be discarded as invalid
                                items:
                                  description: HPAScalingPolicy is a single policy
                                    which must hold true for a specified past interval.
                                  properties:
                                    periodSeconds:
                                      description: periodSeconds specifies the window
                                        of time for which the policy should hold true.
                                        PeriodSeconds must be greater than zero and
                                        less than or equal to 1800 (30 min).
                                      format: int32
                                      type: integer
                                    type:
                                      description: type is used to specify the scaling
                                        policy.
                                      type: string
                                    value:
                                      description: value contains the amount of change
                                        which is permitted by the policy. It must
                                        be greater than zero
                                      format: int32
                                      type: integer
                                  required:
                                  - periodSeconds
                                  - type
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              selectPolicy:
                                description: selectPolicy is used to specify which
                                  policy should be used. If not set, the default value
                                  Max is used.
                                type: string
                              stabilizationWindowSeconds:
                                description: 'stabilizationWindowSeconds is the number
                                  of seconds for which past recommendations should
                                  be considered while scaling up or scaling down.
                                  StabilizationWindowSeconds must be greater than
                                  or equal to zero and less than or equal to 3600
                                  (one hour). If not set, use the default values:
                                  - For scale up: 0 (i.e. no stabilization is done).
                                  - For scale down: 300 (i.e. the stabilization window
                                  is 300 seconds long).'
                                format: int32
                                type: integer
                            type: object
                          scaleUp:
                            description: 'scaleUp is scaling policy for scaling Up.
                              If not set, the default value is the higher of: * increase
                              no more than 4 pods per 60 seconds * double the number
                              of pods per 60 seconds No stabilization is used.'
                            properties:
                              policies:
                                description: policies is a list of potential scaling
                                  polices which can be used during scaling. At least
                                  one policy must be specified, otherwise the HPAScalingRules
                                  will be discarded as invalid
                                items:
                                  description: HPAScalingPolicy is a single policy
                                    which must hold true for a specified past interval.
                                  properties:
                                    periodSeconds:
                                      description: periodSeconds specifies the window
                                        of time for which the policy should hold true.
                                        PeriodSeconds must be greater than zero and
                                        less than or equal to 1800 (30 min).
                                      format: int32
                                      type: integer
                                    type:
                                      description: type is used to specify the scaling
                                        policy.
                                      type: string
                                    value:
                                      description: value contains the amount of change
                                        which is permitted by the policy. It must
                                        be greater than zero
                                      format: int32
                                      type: integer
                                  required:
                                  - periodSeconds
                                  - type
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              selectPolicy:
                                description: selectPolicy is used to specify which
                                  policy should be used. If not set, the default value
                                  Max is used.
                                type: string
                              stabilizationWindowSeconds:
                                description: 'stabilizationWindowSeconds is the number
                                  of seconds for which past recommendations should
                                  be considered while scaling up or scaling down.
                                  StabilizationWindowSeconds must be greater than
                                  or equal to zero and less than or equal to 3600
                                  (one hour). If not set, use the default values:
                                  - For scale up: 0 (i.e. no stabilization is done).
                                  - For scale down: 300 (i.e. the stabilization window
                                  is 300 seconds long).'
                                format: int32
                                type: integer
                            type: object
                        type: object
                      maxReplicas:
                        description: Upper limit for the number of replicas to which
                          the autoscaler can scale up. It cannot be less that minReplicas.
                        format: int32
                        type: integer
                      minReplicas:
                        description: Lower limit for the number of replicas to which
                          the autoscaler can scale down.  It defaults to 1 pod.  minReplicas
                          is allowed to be 0 if the alpha feature gate HPAScaleToZero
                          is enabled and at least one Object or External metric is
                          configured.  Scaling is active as long as at least one metric
                          value is available.
                        format: int32
                        type: integer
                      resourceName:
                        description: Target resource used to autoscale (cpu/memory)
                        enum:
                        - cpu
                        - memory
                        type: string
                      resourceUtilization:
                        description: A percentage indicating the target resource consumption
                          used to autoscale
                        format: int32
                        type: integer
                    type: object
                  livenessProbe:
                    description: Liveness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  pdb:
                    description: Pod Disruption Budget for the component
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: An eviction is allowed if at most "maxUnavailable"
                          pods selected by "selector" are unavailable after the eviction,
                          i.e. even in absence of the evicted pod. For example, one
                          can prevent all voluntary evictions by specifying 0. This
                          is a mutually exclusive setting with "minAvailable".
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: An eviction is allowed if at least "minAvailable"
                          pods selected by "selector" will still be available after
                          the eviction, i.e. even in the absence of the evicted pod.  So
                          for example you can prevent all voluntary evictions by specifying
                          "100%".
                        x-kubernetes-int-or-string: true
                    type: object
                  readinessProbe:
                    description: Readiness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  replicas:
                    description: Number of replicas (ignored if hpa is enabled) for
                      the component
                    format: int32
                    type: integer
                  resources:
                    description: Resource requirements for the component
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  terminationGracePeriodSeconds:
                    description: Configures the TerminationGracePeriodSeconds
                    format: int64
                    type: integer
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
              sidekiqLow:
                description: Sidekiq Low specific configuration options
                properties:
                  canary:
                    description: Canary defines spec changes for the canary Deployment.
                      If left unset the canary Deployment wil not be created.
                    properties:
                      imageName:
                        description: ImageName to use for the canary Deployment
                        type: string
                      imageTag:
                        description: ImageTag to use for the canary Deployment
                        type: string
                      patches:
                        description: Patches to apply for the canary Deployment. Patches
                          are expected to be JSON documents as an RFC 6902 patches.
                        items:
                          type: string
                        type: array
                      replicas:
                        description: Number of replicas for the canary Deployment
                        format: int32
                        type: integer
                      sendTraffic:
                        description: SendTraffic controls if traffic is sent to the
                          canary
                        type: boolean
                    required:
                    - sendTraffic
                    type: object
                  config:
                    description: Sidekiq specific configuration options for the component
                      element
                    properties:
                      maxThreads:
                        description: Number of rails max threads per sidekiq pod
                        format: int32
                        type: integer
                      queues:
                        description: 'List of queues to be consumed by sidekiq. Format:
                          queue[,Priority]'
                        items:
                          type: string
                        type: array
                    type: object
                  deploymentStrategy:
                    description: The deployment strategy to use to replace existing
                      pods with new ones.
                    properties:
                      rollingUpdate:
                        description: Rolling update config params. Present only if
                          DeploymentStrategyType = RollingUpdate.
                        properties:
                          maxSurge:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of pods that can be scheduled
                              above the desired number of pods. Value can be an absolute
                              number (ex: 5) or a percentage of desired pods (ex:
                              10%). This can not be 0 if MaxUnavailable is 0. Absolute
                              number is calculated from percentage by rounding up.
                              Defaults to 25%. Example: when this is set to 30%, the
                              new ReplicaSet can be scaled up immediately when the
                              rolling update starts, such that the total number of
                              old and new pods do not exceed 130% of desired pods.
                              Once old pods have been killed, new ReplicaSet can be
                              scaled up further, ensuring that total number of pods
                              running at any time during the update is at most 130%
                              of desired pods.'
                            x-kubernetes-int-or-string: true
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The maximum number of pods that can be unavailable
                              during the update. Value can be an absolute number (ex:
                              5) or a percentage of desired pods (ex: 10%). Absolute
                              number is calculated from percentage by rounding down.
                              This can not be 0 if MaxSurge is 0. Defaults to 25%.
                              Example: when this is set to 30%, the old ReplicaSet
                              can be scaled down to 70% of desired pods immediately
                              when the rolling update starts. Once new pods are ready,
                              old ReplicaSet can be scaled down further, followed
                              by scaling up the new ReplicaSet, ensuring that the
                              total number of pods available at all times during the
                              update is at least 70% of desired pods.'
                            x-kubernetes-int-or-string: true
                        type: object
                      type:
                        description: Type of deployment. Can be "Recreate" or "RollingUpdate".
                          Default is RollingUpdate.
                        type: string
                    type: object
                  hpa:
                    description: Horizontal Pod Autoscaler for the component
                    properties:
                      behavior:
                        description: Behavior configures the scaling behavior of the
                          target in both Up and Down directions (scaleUp and scaleDown
                          fields respectively). If not set, the default HPAScalingRules
                          for scale up and scale down are used.
                        properties:
                          scaleDown:
                            description: scaleDown is scaling policy for scaling Down.
                              If not set, the default value is to allow to scale down
                              to minReplicas pods, with a 300 second stabilization
                              window (i.e., the highest recommendation for the last
                              300sec is used).
                            properties:
                              policies:
                                description: policies is a list of potential scaling
                                  polices which can be used during scaling. At least
                                  one policy must be specified, otherwise the HPAScalingRules
                                  will be discarded as invalid
                                items:
                                  description: HPAScalingPolicy is a single policy
                                    which must hold true for a specified past interval.
                                  properties:
                                    periodSeconds:
                                      description: periodSeconds specifies the window
                                        of time for which the policy should hold true.
                                        PeriodSeconds must be greater than zero and
                                        less than or equal to 1800 (30 min).
                                      format: int32
                                      type: integer
                                    type:
                                      description: type is used to specify the scaling
                                        policy.
                                      type: string
                                    value:
                                      description: value contains the amount of change
                                        which is permitted by the policy. It must
                                        be greater than zero
                                      format: int32
                                      type: integer
                                  required:
                                  - periodSeconds
                                  - type
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              selectPolicy:
                                description: selectPolicy is used to specify which
                                  policy should be used. If not set, the default value
                                  Max is used.
                                type: string
                              stabilizationWindowSeconds:
                                description: 'stabilizationWindowSeconds is the number
                                  of seconds for which past recommendations should
                                  be considered while scaling up or scaling down.
                                  StabilizationWindowSeconds must be greater than
                                  or equal to zero and less than or equal to 3600
                                  (one hour). If not set, use the default values:
                                  - For scale up: 0 (i.e. no stabilization is done).
                                  - For scale down: 300 (i.e. the stabilization window
                                  is 300 seconds long).'
                                format: int32
                                type: integer
                            type: object
                          scaleUp:
                            description: 'scaleUp is scaling policy for scaling Up.
                              If not set, the default value is the higher of: * increase
                              no more than 4 pods per 60 seconds * double the number
                              of pods per 60 seconds No stabilization is used.'
                            properties:
                              policies:
                                description: policies is a list of potential scaling
                                  polices which can be used during scaling. At least
                                  one policy must be specified, otherwise the HPAScalingRules
                                  will be discarded as invalid
                                items:
                                  description: HPAScalingPolicy is a single policy
                                    which must hold true for a specified past interval.
                                  properties:
                                    periodSeconds:
                                      description: periodSeconds specifies the window
                                        of time for which the policy should hold true.
                                        PeriodSeconds must be greater than zero and
                                        less than or equal to 1800 (30 min).
                                      format: int32
                                      type: integer
                                    type:
                                      description: type is used to specify the scaling
                                        policy.
                                      type: string
                                    value:
                                      description: value contains the amount of change
                                        which is permitted by the policy. It must
                                        be greater than zero
                                      format: int32
                                      type: integer
                                  required:
                                  - periodSeconds
                                  - type
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              selectPolicy:
                                description: selectPolicy is used to specify which
                                  policy should be used. If not set, the default value
                                  Max is used.
                                type: string
                              stabilizationWindowSeconds:
                                description: 'stabilizationWindowSeconds is the number
                                  of seconds for which past recommendations should
                                  be considered while scaling up or scaling down.
                                  StabilizationWindowSeconds must be greater than
                                  or equal to zero and less than or equal to 3600
                                  (one hour). If not set, use the default values:
                                  - For scale up: 0 (i.e. no stabilization is done).
                                  - For scale down: 300 (i.e. the stabilization window
                                  is 300 seconds long).'
                                format: int32
                                type: integer
                            type: object
                        type: object
                      maxReplicas:
                        description: Upper limit for the number of replicas to which
                          the autoscaler can scale up. It cannot be less that minReplicas.
                        format: int32
                        type: integer
                      minReplicas:
                        description: Lower limit for the number of replicas to which
                          the autoscaler can scale down.  It defaults to 1 pod.  minReplicas
                          is allowed to be 0 if the alpha feature gate HPAScaleToZero
                          is enabled and at least one Object or External metric is
                          configured.  Scaling is active as long as at least one metric
                          value is available.
                        format: int32
                        type: integer
                      resourceName:
                        description: Target resource used to autoscale (cpu/memory)
                        enum:
                        - cpu
                        - memory
                        type: string
                      resourceUtilization:
                        description: A percentage indicating the target resource consumption
                          used to autoscale
                        format: int32
                        type: integer
                    type: object
                  livenessProbe:
                    description: Liveness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  pdb:
                    description: Pod Disruption Budget for the component
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: An eviction is allowed if at most "maxUnavailable"
                          pods selected by "selector" are unavailable after the eviction,
                          i.e. even in absence of the evicted pod. For example, one
                          can prevent all voluntary evictions by specifying 0. This
                          is a mutually exclusive setting with "minAvailable".
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: An eviction is allowed if at least "minAvailable"
                          pods selected by "selector" will still be available after
                          the eviction, i.e. even in the absence of the evicted pod.  So
                          for example you can prevent all voluntary evictions by specifying
                          "100%".
                        x-kubernetes-int-or-string: true
                    type: object
                  readinessProbe:
                    description: Readiness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  replicas:
                    description: Number of replicas (ignored if hpa is enabled) for
                      the component
                    format: int32
                    type: integer
                  resources:
                    description: Resource requirements for the component
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  terminationGracePeriodSeconds:
                    description: Configures the TerminationGracePeriodSeconds
                    format: int64
                    type: integer
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
              tasks:
                description: Configures the Tekton Tasks for the component
                items:
                  description: SystemTektonTaskSpec configures the Sidekiq component
                    of System
                  properties:
                    config:
                      description: System Tekton Task specific configuration options
                        for the component element
                      properties:
                        args:
                          description: List of args to be consumed by the task.
                          items:
                            type: string
                          type: array
                        command:
                          description: List of commands to be consumed by the task.
                          items:
                            type: string
                          type: array
                        extraEnv:
                          description: List of extra evironment variables to be consumed
                            by the task.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        image:
                          description: Image specification for the Console component.
                            Defaults to system image if not defined.
                          properties:
                            name:
                              description: Docker repository of the image
                              type: string
                            pullPolicy:
                              description: Pull policy for the image
                              type: string
                            pullSecretName:
                              description: Name of the Secret that holds quay.io credentials
                                to access the image repository
                              type: string
                            tag:
                              description: Image tag
                              type: string
                          type: object
                        timeout:
                          description: Timeout for the Tekton task
                          type: string
                      type: object
                    description:
                      description: Description for the Tekton task and pipeline
                      type: string
                    enabled:
                      description: Deploy task instance
                      type: boolean
                    name:
                      description: Name for the Tekton task and pipeline
                      type: string
                    nodeAffinity:
                      description: Describes node affinity scheduling rules for the
                        pod.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            matches the corresponding matchExpressions; the node(s)
                            with the highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects
                              (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A node selector term, associated with
                                  the corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                                x-kubernetes-map-type: atomic
                              weight:
                                description: Weight associated with matching the corresponding
                                  nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - preference
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to an update), the system
                            may or may not try to eventually evict the pod from its
                            node.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                                x-kubernetes-map-type: atomic
                              type: array
                          required:
                          - nodeSelectorTerms
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    resources:
                      description: Pod Disruption Budget for the component
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined
                            in spec.resourceClaims, that are used by this container.
                            \n This is an alpha field and requires enabling the DynamicResourceAllocation
                            feature gate. \n This field is immutable."
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: Name must match the name of one entry
                                  in pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource available
                                  inside a container.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    terminationGracePeriodSeconds:
                      description: Configures the TerminationGracePeriodSeconds
                      format: int64
                      type: integer
                    tolerations:
                      description: If specified, the pod's tolerations.
                      items:
                        description: The pod this Toleration is attached to tolerates
                          any taint that matches the triple <key,value,effect> using
                          the matching operator <operator>.
                        properties:
                          effect:
                            description: Effect indicates the taint effect to match.
                              Empty means match all taint effects. When specified,
                              allowed values are NoSchedule, PreferNoSchedule and
                              NoExecute.
                            type: string
                          key:
                            description: Key is the taint key that the toleration
                              applies to. Empty means match all taint keys. If the
                              key is empty, operator must be Exists; this combination
                              means to match all values and all keys.
                            type: string
                          operator:
                            description: Operator represents a key's relationship
                              to the value. Valid operators are Exists and Equal.
                              Defaults to Equal. Exists is equivalent to wildcard
                              for value, so that a pod can tolerate all taints of
                              a particular category.
                            type: string
                          tolerationSeconds:
                            description: TolerationSeconds represents the period of
                              time the toleration (which must be of effect NoExecute,
                              otherwise this field is ignored) tolerates the taint.
                              By default, it is not set, which means tolerate the
                              taint forever (do not evict). Zero and negative values
                              will be treated as 0 (evict immediately) by the system.
                            format: int64
                            type: integer
                          value:
                            description: Value is the taint value the toleration matches
                              to. If the operator is Exists, the value should be empty,
                              otherwise just a regular string.
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              twemproxy:
                description: Configures twemproxy
                properties:
                  image:
                    description: Image specification for the component
                    properties:
                      name:
                        description: Docker repository of the image
                        type: string
                      pullPolicy:
                        description: Pull policy for the image
                        type: string
                      pullSecretName:
                        description: Name of the Secret that holds quay.io credentials
                          to access the image repository
                        type: string
                      tag:
                        description: Image tag
                        type: string
                    type: object
                  livenessProbe:
                    description: Liveness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  options:
                    description: Options
                    properties:
                      logLevel:
                        description: 'Set logging level to N. (default: 5, min: 0,
                          max: 11)'
                        format: int32
                        type: integer
                      metricsAddress:
                        description: 'Set stats monitoring port to port.  (default:
                          22222)'
                        format: int32
                        type: integer
                      statsInterval:
                        description: 'Set stats aggregation interval in msec to interval.  (default:
                          30s)'
                        type: string
                    type: object
                  readinessProbe:
                    description: Readiness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  resources:
                    description: Resource requirements for the component
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  twemproxyConfigRef:
                    description: TwemproxyConfigRef is a reference to a TwemproxyConfig
                      resource in the same Namespace
                    type: string
                required:
                - twemproxyConfigRef
                type: object
            required:
            - config
            type: object
          status:
            description: SystemStatus defines the observed state of System
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
