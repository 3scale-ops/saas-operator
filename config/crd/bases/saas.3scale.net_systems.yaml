
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: systems.saas.3scale.net
spec:
  group: saas.3scale.net
  names:
    kind: System
    listKind: SystemList
    plural: systems
    singular: system
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: System is the Schema for the systems API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SystemSpec defines the desired state of System
            properties:
              app:
                description: Application specific configuration options
                properties:
                  hpa:
                    description: Horizontal Pod Autoscaler for the component
                    properties:
                      maxReplicas:
                        description: Upper limit for the number of replicas to which
                          the autoscaler can scale up. It cannot be less that minReplicas.
                        format: int32
                        type: integer
                      minReplicas:
                        description: Lower limit for the number of replicas to which
                          the autoscaler can scale down.  It defaults to 1 pod.  minReplicas
                          is allowed to be 0 if the alpha feature gate HPAScaleToZero
                          is enabled and at least one Object or External metric is
                          configured.  Scaling is active as long as at least one metric
                          value is available.
                        format: int32
                        type: integer
                      resourceName:
                        description: Target resource used to autoscale (cpu/memory)
                        enum:
                        - cpu
                        - memory
                        type: string
                      resourceUtilization:
                        description: A percentage indicating the target resource consumption
                          used to autoscale
                        format: int32
                        type: integer
                    type: object
                  livenessProbe:
                    description: Liveness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  marin3r:
                    description: Marin3r configures the Marin3r sidecars for the component
                    properties:
                      extraPodAnnotations:
                        additionalProperties:
                          type: string
                        description: Extra annotations to pass the Pod to further
                          configure the sidecar container.
                        type: object
                      ports:
                        description: The ports that the sidecar exposes
                        items:
                          description: SidecarPort defines port for the Marin3r sidecar
                            container
                          properties:
                            name:
                              description: Port name
                              type: string
                            port:
                              description: Port value
                              format: int32
                              type: integer
                          required:
                          - name
                          - port
                          type: object
                        type: array
                      resources:
                        description: Compute Resources required by this container.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                        type: object
                    required:
                    - ports
                    type: object
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                    type: object
                  pdb:
                    description: Pod Disruption Budget for the component
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: An eviction is allowed if at most "maxUnavailable"
                          pods selected by "selector" are unavailable after the eviction,
                          i.e. even in absence of the evicted pod. For example, one
                          can prevent all voluntary evictions by specifying 0. This
                          is a mutually exclusive setting with "minAvailable".
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: An eviction is allowed if at least "minAvailable"
                          pods selected by "selector" will still be available after
                          the eviction, i.e. even in the absence of the evicted pod.  So
                          for example you can prevent all voluntary evictions by specifying
                          "100%".
                        x-kubernetes-int-or-string: true
                    type: object
                  readinessProbe:
                    description: Readiness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  replicas:
                    description: Number of replicas (ignored if hpa is enabled) for
                      the component
                    format: int32
                    type: integer
                  resources:
                    description: Resource requirements for the component
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
              config:
                description: Application specific configuration options for System
                  components
                properties:
                  accessCode:
                    description: AccessCode to protect admin urls
                    properties:
                      fromVault:
                        description: VaultSecretReference is a reference to a secret
                          stored in a Hashicorp Vault
                        properties:
                          key:
                            description: The Vault key of the secret
                            type: string
                          path:
                            description: The Vault path where the secret is located
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      override:
                        description: Override allows to directly specify a string
                          value.
                        type: string
                    type: object
                  ampRelease:
                    description: AMP release number
                    type: string
                  assets:
                    description: Assets has configuration to access assets in AWS
                      s3
                    properties:
                      accessKey:
                        description: AWS access key
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      bucket:
                        description: AWS S3 bucket name
                        type: string
                      region:
                        description: AWS S3 region
                        type: string
                      secretKey:
                        description: AWS secret access key
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                    required:
                    - accessKey
                    - bucket
                    - region
                    - secretKey
                    type: object
                  backend:
                    description: Backend has configuration options for system to contact
                      backend
                    properties:
                      externalEndpoint:
                        description: External endpoint
                        type: string
                      internalAPIPassword:
                        description: Internal API password
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      internalAPIUser:
                        description: Internal API user
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      internalEndpoint:
                        description: Internal endpoint
                        type: string
                      redisDSN:
                        description: Redis data source name
                        type: string
                    required:
                    - externalEndpoint
                    - internalAPIPassword
                    - internalAPIUser
                    - internalEndpoint
                    - redisDSN
                    type: object
                  bugsnag:
                    description: Options for configuring Bugsnag integration
                    properties:
                      apiKey:
                        description: API key
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                    required:
                    - apiKey
                    type: object
                  configFiles:
                    description: Extra configuration files to be mounted in the pods
                    properties:
                      files:
                        items:
                          type: string
                        type: array
                      vaultPath:
                        type: string
                    required:
                    - files
                    - vaultPath
                    type: object
                  databaseDSN:
                    description: DSN of system's main database
                    properties:
                      fromVault:
                        description: VaultSecretReference is a reference to a secret
                          stored in a Hashicorp Vault
                        properties:
                          key:
                            description: The Vault key of the secret
                            type: string
                          path:
                            description: The Vault path where the secret is located
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      override:
                        description: Override allows to directly specify a string
                          value.
                        type: string
                    type: object
                  databaseSecret:
                    description: Database secret
                    properties:
                      fromVault:
                        description: VaultSecretReference is a reference to a secret
                          stored in a Hashicorp Vault
                        properties:
                          key:
                            description: The Vault key of the secret
                            type: string
                          path:
                            description: The Vault path where the secret is located
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      override:
                        description: Override allows to directly specify a string
                          value.
                        type: string
                    type: object
                  eventsSharedSecret:
                    description: EventsSharedSecret
                    properties:
                      fromVault:
                        description: VaultSecretReference is a reference to a secret
                          stored in a Hashicorp Vault
                        properties:
                          key:
                            description: The Vault key of the secret
                            type: string
                          path:
                            description: The Vault path where the secret is located
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      override:
                        description: Override allows to directly specify a string
                          value.
                        type: string
                    type: object
                  forceSSL:
                    description: Enable (true) or disable (false) enforcing SSL
                    type: boolean
                  github:
                    description: Options for Github integration
                    properties:
                      clientID:
                        description: Client ID
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      clientSecret:
                        description: Client secret
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                    required:
                    - clientID
                    - clientSecret
                    type: object
                  mappingServiceAccessToken:
                    description: Mapping Service access token
                    properties:
                      fromVault:
                        description: VaultSecretReference is a reference to a secret
                          stored in a Hashicorp Vault
                        properties:
                          key:
                            description: The Vault key of the secret
                            type: string
                          path:
                            description: The Vault path where the secret is located
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      override:
                        description: Override allows to directly specify a string
                          value.
                        type: string
                    type: object
                  memcachedServers:
                    description: Memcached servers
                    type: string
                  metrics:
                    description: Options for configuring metrics publication
                    properties:
                      password:
                        description: Password
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      user:
                        description: User name
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                    required:
                    - password
                    - user
                    type: object
                  rails:
                    description: Rails configuration options for system components
                    properties:
                      environment:
                        description: Rails environment
                        type: string
                      logLevel:
                        description: Rails log level (debug, info, warn, error, fatal
                          or unknown)
                        enum:
                        - debug
                        - info
                        - warn
                        - error
                        - fatal
                        - unknown
                        type: string
                    type: object
                  recaptcha:
                    description: Holds recaptcha configuration options
                    properties:
                      privateKey:
                        description: Private key
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      publicKey:
                        description: Public key
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                    required:
                    - privateKey
                    - publicKey
                    type: object
                  redhatCustomerPortal:
                    description: Options for configuring RH Customer Portal integration
                    properties:
                      clientID:
                        description: Client ID
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      clientSecret:
                        description: Client secret
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                    required:
                    - clientID
                    - clientSecret
                    type: object
                  redis:
                    description: Redis configuration options
                    properties:
                      messageBusDSN:
                        description: Message bus data source name
                        type: string
                      queuesDSN:
                        description: Data source name
                        type: string
                    required:
                    - messageBusDSN
                    - queuesDSN
                    type: object
                  sandboxProxyOpensslVerifyMode:
                    description: OpenSSL verification mode for sandbox proxy
                    type: string
                  secretKeyBase:
                    description: SecretKeyBase
                    properties:
                      fromVault:
                        description: VaultSecretReference is a reference to a secret
                          stored in a Hashicorp Vault
                        properties:
                          key:
                            description: The Vault key of the secret
                            type: string
                          path:
                            description: The Vault path where the secret is located
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      override:
                        description: Override allows to directly specify a string
                          value.
                        type: string
                    type: object
                  seed:
                    description: System seed
                    properties:
                      adminAccessToken:
                        description: Admin access token
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      adminEmail:
                        description: Admin email address
                        type: string
                      adminPassword:
                        description: Admin password
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      adminUser:
                        description: Admin user
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      masterAccessToken:
                        description: Master access token
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      masterDomain:
                        description: Master domain
                        type: string
                      masterPassword:
                        description: Master password
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      masterUser:
                        description: Master user
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      tenantName:
                        description: Tenant name
                        type: string
                    required:
                    - adminAccessToken
                    - adminEmail
                    - adminPassword
                    - adminUser
                    - masterAccessToken
                    - masterDomain
                    - masterPassword
                    - masterUser
                    - tenantName
                    type: object
                  segment:
                    description: Options for Segment integration
                    properties:
                      deletionToken:
                        description: Deletion token
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      deletionWorkspace:
                        description: Deletion workspace
                        type: string
                      writeKey:
                        description: Write key
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                    required:
                    - deletionToken
                    - deletionWorkspace
                    - writeKey
                    type: object
                  smtp:
                    description: SMTP configuration options
                    properties:
                      address:
                        description: Address
                        type: string
                      authProtocol:
                        description: Authentication protocol
                        type: string
                      opensslVerifyMode:
                        description: OpenSSL verify mode
                        type: string
                      password:
                        description: Password
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                      port:
                        description: Port
                        format: int32
                        type: integer
                      starttlsAuto:
                        description: Enable/disable auto STARTTLS
                        type: boolean
                      user:
                        description: User
                        properties:
                          fromVault:
                            description: VaultSecretReference is a reference to a
                              secret stored in a Hashicorp Vault
                            properties:
                              key:
                                description: The Vault key of the secret
                                type: string
                              path:
                                description: The Vault path where the secret is located
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          override:
                            description: Override allows to directly specify a string
                              value.
                            type: string
                        type: object
                    required:
                    - address
                    - authProtocol
                    - opensslVerifyMode
                    - password
                    - port
                    - starttlsAuto
                    - user
                    type: object
                  sslCertsDir:
                    description: SSL certificates path
                    type: string
                  threescaleProviderPlan:
                    description: 3scale provider plan
                    type: string
                  threescaleSuperdomain:
                    description: 3scale superdomain
                    type: string
                  zyncAuthToken:
                    description: Zync authentication token
                    properties:
                      fromVault:
                        description: VaultSecretReference is a reference to a secret
                          stored in a Hashicorp Vault
                        properties:
                          key:
                            description: The Vault key of the secret
                            type: string
                          path:
                            description: The Vault path where the secret is located
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      override:
                        description: Override allows to directly specify a string
                          value.
                        type: string
                    type: object
                required:
                - accessCode
                - assets
                - backend
                - databaseDSN
                - databaseSecret
                - eventsSharedSecret
                - github
                - mappingServiceAccessToken
                - memcachedServers
                - metrics
                - recaptcha
                - redhatCustomerPortal
                - redis
                - secretKeyBase
                - seed
                - segment
                - smtp
                - zyncAuthToken
                type: object
              grafanaDashboard:
                description: Configures the Grafana Dashboard for the component
                properties:
                  selectorKey:
                    description: Label key used by grafana-operator for dashboard
                      discovery
                    type: string
                  selectorValue:
                    description: Label value used by grafana-operator for dashboard
                      discovery
                    type: string
                type: object
              image:
                description: Image specification for the component
                properties:
                  name:
                    description: Docker repository of the image
                    type: string
                  pullPolicy:
                    description: Pull policy for the image
                    type: string
                  pullSecretName:
                    description: Name of the Secret that holds quay.io credentials
                      to access the image repository
                    type: string
                  tag:
                    description: Image tag
                    type: string
                type: object
              sidekiq:
                description: Sidekiq specific configuration options
                properties:
                  hpa:
                    description: Horizontal Pod Autoscaler for the component
                    properties:
                      maxReplicas:
                        description: Upper limit for the number of replicas to which
                          the autoscaler can scale up. It cannot be less that minReplicas.
                        format: int32
                        type: integer
                      minReplicas:
                        description: Lower limit for the number of replicas to which
                          the autoscaler can scale down.  It defaults to 1 pod.  minReplicas
                          is allowed to be 0 if the alpha feature gate HPAScaleToZero
                          is enabled and at least one Object or External metric is
                          configured.  Scaling is active as long as at least one metric
                          value is available.
                        format: int32
                        type: integer
                      resourceName:
                        description: Target resource used to autoscale (cpu/memory)
                        enum:
                        - cpu
                        - memory
                        type: string
                      resourceUtilization:
                        description: A percentage indicating the target resource consumption
                          used to autoscale
                        format: int32
                        type: integer
                    type: object
                  livenessProbe:
                    description: Liveness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                    type: object
                  pdb:
                    description: Pod Disruption Budget for the component
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: An eviction is allowed if at most "maxUnavailable"
                          pods selected by "selector" are unavailable after the eviction,
                          i.e. even in absence of the evicted pod. For example, one
                          can prevent all voluntary evictions by specifying 0. This
                          is a mutually exclusive setting with "minAvailable".
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: An eviction is allowed if at least "minAvailable"
                          pods selected by "selector" will still be available after
                          the eviction, i.e. even in the absence of the evicted pod.  So
                          for example you can prevent all voluntary evictions by specifying
                          "100%".
                        x-kubernetes-int-or-string: true
                    type: object
                  readinessProbe:
                    description: Readiness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  replicas:
                    description: Number of replicas (ignored if hpa is enabled) for
                      the component
                    format: int32
                    type: integer
                  resources:
                    description: Resource requirements for the component
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
              sphinx:
                description: Sphinx specific configuration options
                properties:
                  config:
                    description: Configuration options for System's sphinx
                    properties:
                      deltaIndexInterval:
                        description: Interval used for adding chunks of brand new
                          documents to the primary index at certain intervals without
                          having to do a full re-index
                        format: int32
                        type: integer
                      fullReindexInterval:
                        description: Interval used to do a full re-index
                        format: int32
                        type: integer
                      thinking:
                        description: Thinking configuration for sphinx
                        properties:
                          bindAddress:
                            description: Allows setting the TCP host for Sphinx to
                              a different address
                            type: string
                          configFile:
                            description: Sphinx configuration file path
                            type: string
                          databasePath:
                            description: Sphinx database path
                            type: string
                          databaseStorageClass:
                            description: Sphinx database storage type
                            type: string
                          databaseStorageSize:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Sphinx database storage size
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          pidFile:
                            description: Sphinx PID file path
                            type: string
                          port:
                            description: The TCP port Sphinx will run its daemon on
                            format: int32
                            type: integer
                        type: object
                    type: object
                  image:
                    description: Image specification for the Sphinx component. Defaults
                      to system image if not defined.
                    properties:
                      name:
                        description: Docker repository of the image
                        type: string
                      pullPolicy:
                        description: Pull policy for the image
                        type: string
                      pullSecretName:
                        description: Name of the Secret that holds quay.io credentials
                          to access the image repository
                        type: string
                      tag:
                        description: Image tag
                        type: string
                    type: object
                  livenessProbe:
                    description: Liveness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                    type: object
                  readinessProbe:
                    description: Readiness probe for the component
                    properties:
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: Number of seconds after the container has started
                          before liveness probes are initiated
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Number of seconds after which the probe times
                          out
                        format: int32
                        type: integer
                    type: object
                  resources:
                    description: Resource requirements for the component
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
            required:
            - config
            type: object
          status:
            description: SystemStatus defines the observed state of System
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
