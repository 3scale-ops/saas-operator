apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: backend-cert
spec:
  dnsNames: ["REPLACE"]
  issuerRef:
    kind: ClusterIssuer
    name: selfsigned-cluster-issuer
  secretName: backend-cert

---
apiVersion: saas.3scale.net/v1alpha1
kind: Backend
metadata:
  name: backend
spec:
  image:
    name: REPLACE
    tag: REPLACE
    pullSecretName: pull-secrets
    pullPolicy: Always
  config:
    masterServiceID: 1
    internalAPIPassword: {fromSeed: {}}
    internalAPIUser: {fromSeed: {}}
    rackEnv: preview
    redisQueuesDSN: "redis://backend-redis:6379/1"
    redisStorageDSN: "redis://backend-redis:6379/0"
    systemEventsHookPassword: {}
    systemEventsHookURL: {override: https://REPLACE/master/events/import }
  listener:
    config:
      listenerWorkers: 1
      redisAsync: true
    endpoint: {dns: [REPLACE]}
    hpa: {}
    loadBalancer:
      proxyProtocol: false
    marin3r:
      dynamicConfigs:
        backend_listener_cluster:
          cluster:
            host: 127.0.0.1
            port: 3000
        http:
          listenerHttp:
            proxyProtocol: false
            port: 38080
            routeConfigName: router_external
        http_internal:
          listenerHttp:
            port: 38081
            proxyProtocol: false
            routeConfigName: router_internal
        https:
          listenerHttp:
            proxyProtocol: false
            certificateSecretName: backend-cert
            port: 38443
            routeConfigName: router_external
        router_external:
          routeConfiguration:
            virtualHosts:
              - domains: ["*"]
                name: backend_listener
                routes:
                  - direct_response:
                      status: "404"
                    match:
                      prefix: /internal
                  - match:
                      prefix: /
                    route:
                      cluster: backend_listener_cluster
        router_internal:
          routeConfiguration:
            virtualHosts:
              - domains: ["*"]
                name: backend_listener
                routes:
                  - match:
                      prefix: /
                    route:
                      cluster: backend_listener_cluster
      envoyImage: REPLACE
      nodeID: backend-listener
      ports:
        - name: backend-http
          port: 38080
        - name: http-internal
          port: 38081
        - name: backend-https
          port: 38443
        - name: envoy-metrics
          port: 9901
      resources: {}
      shtdnmgrExtraLifecycleHooks:
        - backend-listener
    pdb: {}
    replicas: 1
    resources: {}
  worker:
    config:
      redisAsync: true
    hpa: {}
    pdb: {}
    replicas: 1
    resources: {}
