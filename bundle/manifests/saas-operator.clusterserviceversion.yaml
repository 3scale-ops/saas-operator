apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "Apicast",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "production": {
              "config": {
                "configurationCache": 300,
                "logLevel": "debug",
                "threescalePortalEndpoint": "http://example.com"
              },
              "endpoint": {
                "dns": [
                  "production.gw.example.com",
                  "production.apicast.example.com"
                ]
              },
              "image": {
                "tag": "v0.1.0"
              },
              "marin3r": {
                "ports": [
                  {
                    "name": "gateway-http",
                    "port": 38080
                  },
                  {
                    "name": "gateway-https",
                    "port": 38443
                  },
                  {
                    "name": "envoy-metrics",
                    "port": 9901
                  }
                ]
              }
            },
            "staging": {
              "config": {
                "configurationCache": 30,
                "logLevel": "debug",
                "threescalePortalEndpoint": "http://example.com"
              },
              "endpoint": {
                "dns": [
                  "staging.gw.example.com",
                  "staging.apicast.example.com"
                ]
              },
              "image": {
                "tag": "v0.1.0"
              },
              "marin3r": {
                "ports": [
                  {
                    "name": "gateway-http",
                    "port": 38080
                  },
                  {
                    "name": "gateway-https",
                    "port": 38443
                  },
                  {
                    "name": "envoy-metrics",
                    "port": 9901
                  }
                ]
              }
            }
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "AutoSSL",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "config": {
              "contactEmail": "example@example.com",
              "proxyEndpoint": "https://example.com",
              "redisHost": "redis.example.com",
              "verificationEndpoint": "https://example.com/verify"
            },
            "endpoint": {
              "dns": [
                "autossl.example.com"
              ]
            },
            "image": {
              "tag": "v1.0.1"
            }
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "Backend",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "config": {
              "internalAPIPassword": {
                "fromVault": {
                  "key": "PASSWORD",
                  "path": "secret/data/some/path"
                }
              },
              "internalAPIUser": {
                "fromVault": {
                  "key": "USER",
                  "path": "secret/data/some/path"
                }
              },
              "rackEnv": "dev",
              "redisQueuesDSN": "backend-redis-queues",
              "redisStorageDSN": "backend-redis-storage",
              "systemEventsHookPassword": {
                "fromVault": {
                  "key": "PASSWORD",
                  "path": "secret/data/some/path"
                }
              },
              "systemEventsHookURL": {
                "fromVault": {
                  "key": "URL",
                  "path": "secret/data/some/path"
                }
              }
            },
            "image": {
              "tag": "v3.2.0"
            },
            "listener": {
              "config": {
                "redisAsync": false
              },
              "endpoint": {
                "dns": [
                  "backend.example.com"
                ]
              },
              "loadBalancer": {
                "eipAllocations": [
                  "eip-123",
                  "eip-456"
                ]
              },
              "marin3r": {
                "ports": [
                  {
                    "name": "backend-http",
                    "port": 38080
                  },
                  {
                    "name": "http-internal",
                    "port": 38081
                  },
                  {
                    "name": "backend-htttps",
                    "port": 38443
                  },
                  {
                    "name": "envoy-metrics",
                    "port": 9901
                  }
                ]
              }
            },
            "worker": {
              "config": {
                "redisAsync": true
              }
            }
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "CORSProxy",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "config": {
              "systemDatabaseDSN": {
                "fromVault": {
                  "key": "DSN",
                  "path": "secret/data/kubernetes/dev-eng/ocp4-5/3scale-saas/cors-proxy-system-database-mysql"
                }
              }
            },
            "image": {
              "tag": "latest"
            }
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "MappingService",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "config": {
              "apiHost": "http://example.com:3000",
              "systemAdminToken": {
                "fromVault": {
                  "key": "access-token",
                  "path": "secret/data/some/path"
                }
              }
            },
            "image": {
              "tag": "v0.1.0"
            }
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "System",
          "metadata": {
            "name": "system-sample"
          },
          "spec": {
            "config": {
              "accessCode": {
                "fromVault": {
                  "key": "ACCESS_CODE",
                  "path": "secret/data/path/system-app"
                }
              },
              "apicastAccessToken": {
                "fromVault": {
                  "key": "ACCESS_TOKEN",
                  "path": "secret/data/path/system-master-apicast"
                }
              },
              "assets": {
                "accessKey": {
                  "fromVault": {
                    "key": "AWS_ACCESS_KEY_ID",
                    "path": "secret/data/path/system-multitenant-assets-s3"
                  }
                },
                "bucket": "my-bucket",
                "region": "us-east-1",
                "secretKey": {
                  "fromVault": {
                    "key": "AWS_SECRET_ACCESS_KEY",
                    "path": "secret/data/path/system-multitenant-assets-s3"
                  }
                }
              },
              "backend": {
                "externalEndpoint": "https://backend.example.com",
                "internalAPIPassword": {
                  "fromVault": {
                    "key": "password",
                    "path": "secret/data/path/backend-internal-api"
                  }
                },
                "internalAPIUser": {
                  "fromVault": {
                    "key": "username",
                    "path": "secret/data/path/backend-internal-api"
                  }
                },
                "internalEndpoint": "http://backend-listener-internal",
                "redisDSN": "redis://backend-redis:6379/0"
              },
              "bugsnag": {
                "apiKey": {
                  "fromVault": {
                    "key": "BUGSNAG_API_KEY",
                    "path": "secret/data/path/system-app"
                  }
                }
              },
              "configFiles": {
                "files": [
                  "amazon_s3.yml",
                  "backend.yml",
                  "backend_redis.yml",
                  "banned_domains.yml",
                  "cable.yml",
                  "cache_store.yml",
                  "core.yml",
                  "database.yml",
                  "domain_substitution.yml",
                  "features.yml",
                  "internal_domains.yml",
                  "message_bus.yml",
                  "newrelic.yml",
                  "oauth2.yml",
                  "paperclip.yml",
                  "plan_rules.yml",
                  "prometheus.yml",
                  "redhat_customer_portal.yml",
                  "redis.yml",
                  "rolling_updates.yml",
                  "sandbox_proxy.yml",
                  "secrets.yml",
                  "segment.yml",
                  "settings.yml",
                  "sidekiq_schedule.yml",
                  "smtp.yml",
                  "web_hooks.yml",
                  "zync.yml"
                ],
                "vaultPath": "secret/data/path/system-config"
              },
              "databaseDSN": {
                "fromVault": {
                  "key": "URL",
                  "path": "secret/data/path/system-database"
                }
              },
              "databaseSecret": {
                "fromVault": {
                  "key": "DB_SECRET",
                  "path": "secret/data/path/system-app"
                }
              },
              "eventsSharedSecret": {
                "fromVault": {
                  "key": "EVENTS_SHARED_SECRET",
                  "path": "secret/data/path/system-app"
                }
              },
              "github": {
                "clientID": {
                  "fromVault": {
                    "key": "GITHUB_CLIENT_ID",
                    "path": "secret/data/path/system-app"
                  }
                },
                "clientSecret": {
                  "fromVault": {
                    "key": "GITHUB_CLIENT_SECRET",
                    "path": "secret/data/path/system-app"
                  }
                }
              },
              "memcachedServers": "",
              "metrics": {
                "password": {
                  "fromVault": {
                    "key": "PROMETHEUS_PASSWORD",
                    "path": "secret/data/path/system-app"
                  }
                },
                "user": {
                  "fromVault": {
                    "key": "PROMETHEUS_USER",
                    "path": "secret/data/path/system-app"
                  }
                }
              },
              "recaptcha": {
                "privateKey": {
                  "fromVault": {
                    "key": "RECAPTCHA_PRIVATE_KEY",
                    "path": "secret/data/path/system-recaptcha"
                  }
                },
                "publicKey": {
                  "fromVault": {
                    "key": "RECAPTCHA_PUBLIC_KEY",
                    "path": "secret/data/path/system-recaptcha"
                  }
                }
              },
              "redhatCustomerPortal": {
                "clientID": {
                  "fromVault": {
                    "key": "RH_CUSTOMER_PORTAL_CLIENT_ID",
                    "path": "secret/data/path/system-app"
                  }
                },
                "clientSecret": {
                  "fromVault": {
                    "key": "RH_CUSTOMER_PORTAL_CLIENT_SECRET",
                    "path": "secret/data/path/system-app"
                  }
                }
              },
              "redis": {
                "dsn": "redis://system-redis:6379/1",
                "messageBusDSN": "redis://system-redis:6379/2"
              },
              "secretKeyBase": {
                "fromVault": {
                  "key": "SECRET_KEY_BASE",
                  "path": "secret/data/path/system-app"
                }
              },
              "seed": {
                "adminAccessToken": {
                  "fromVault": {
                    "key": "ADMIN_ACCESS_TOKEN",
                    "path": "secret/data/path/system-seed"
                  }
                },
                "adminEmail": "admin@example.com",
                "adminPassword": {
                  "fromVault": {
                    "key": "ADMIN_PASSWORD",
                    "path": "secret/data/path/system-seed"
                  }
                },
                "adminUser": {
                  "fromVault": {
                    "key": "ADMIN_USER",
                    "path": "secret/data/path/system-seed"
                  }
                },
                "masterAccessToken": {
                  "fromVault": {
                    "key": "MASTER_ACCESS_TOKEN",
                    "path": "secret/data/path/system-seed"
                  }
                },
                "masterDomain": "multitenant-admin",
                "masterPassword": {
                  "fromVault": {
                    "key": "MASTER_PASSWORD",
                    "path": "secret/data/path/system-seed"
                  }
                },
                "masterUser": {
                  "fromVault": {
                    "key": "MASTER_USER",
                    "path": "secret/data/path/system-seed"
                  }
                },
                "tenantName": "example"
              },
              "segment": {
                "deletionToken": {
                  "fromVault": {
                    "key": "SEGMENT_DELETION_TOKEN",
                    "path": "secret/data/path/system-app"
                  }
                },
                "deletionWorkspace": "example",
                "writeKey": {
                  "fromVault": {
                    "key": "SEGMENT_WRITE_KEY",
                    "path": "secret/data/path/system-app"
                  }
                }
              },
              "smtp": {
                "address": "localhost",
                "authProtocol": "none",
                "opensslVerifyMode": "none",
                "password": {
                  "fromVault": {
                    "key": "password",
                    "path": "secret/data/path/system-smtp"
                  }
                },
                "port": 25,
                "starttlsAuto": false,
                "user": {
                  "fromVault": {
                    "key": "username",
                    "path": "secret/data/path/system-smtp"
                  }
                }
              },
              "zyncAuthToken": {
                "fromVault": {
                  "key": "ZYNC_AUTHENTICATION_TOKEN",
                  "path": "secret/data/path/zync"
                }
              }
            },
            "image": {
              "pullPolicy": "Always"
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: Integration & Delivery
    containerImage: quay.io/3scale/saas-operator
    createdAt: 2020-06-02T15:49:31GMT
    description: |-
      The 3scale SaaS Operator creates and maintains a SaaS-ready deployment
      of the Red Hat 3scale API Management on OpenShift.
    operators.operatorframework.io/builder: operator-sdk-v1.3.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/3scale/saas-operator
    support: Red Hat
  name: saas-operator.v0.9.0-alpha25
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Apicast is the Schema for the apicasts API
      displayName: Apicast
      kind: Apicast
      name: apicasts.saas.3scale.net
      specDescriptors:
      - description: Configures the Grafana Dashboard for the component
        displayName: Grafana Dashboard
        path: grafanaDashboard
      - description: Configures the production Apicast environment
        displayName: Production
        path: production
      - description: Application specific configuration options for the component
        displayName: Config
        path: production.config
      - description: Apicast configurations cache TTL
        displayName: Configuration Cache
        path: production.config.configurationCache
      - description: Openresty log level
        displayName: Log Level
        path: production.config.logLevel
      - description: OpenID Connect integration log level
        displayName: OIDCLog Level
        path: production.config.oidcLogLevel
      - description: Endpoint to request proxy configurations to
        displayName: Threescale Portal Endpoint
        path: production.config.threescalePortalEndpoint
      - description: The external endpoint/s for the component
        displayName: Endpoint
        path: production.endpoint
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: production.hpa
      - description: Image specification for the component
        displayName: Image
        path: production.image
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: production.livenessProbe
      - description: Configures the AWS load balancer for the component
        displayName: Load Balancer
        path: production.loadBalancer
      - description: Marin3r configures the Marin3r sidecars for the component
        displayName: Marin3r
        path: production.marin3r
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: production.pdb
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: production.readinessProbe
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: production.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: production.resources
      - description: Configures the staging Apicast environment
        displayName: Staging
        path: staging
      - description: Application specific configuration options for the component
        displayName: Config
        path: staging.config
      - description: Apicast configurations cache TTL
        displayName: Configuration Cache
        path: staging.config.configurationCache
      - description: Openresty log level
        displayName: Log Level
        path: staging.config.logLevel
      - description: OpenID Connect integration log level
        displayName: OIDCLog Level
        path: staging.config.oidcLogLevel
      - description: Endpoint to request proxy configurations to
        displayName: Threescale Portal Endpoint
        path: staging.config.threescalePortalEndpoint
      - description: The external endpoint/s for the component
        displayName: Endpoint
        path: staging.endpoint
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: staging.hpa
      - description: Image specification for the component
        displayName: Image
        path: staging.image
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: staging.livenessProbe
      - description: Configures the AWS load balancer for the component
        displayName: Load Balancer
        path: staging.loadBalancer
      - description: Marin3r configures the Marin3r sidecars for the component
        displayName: Marin3r
        path: staging.marin3r
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: staging.pdb
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: staging.readinessProbe
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: staging.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: staging.resources
      version: v1alpha1
    - description: AutoSSL is the Schema for the autossls API
      displayName: Auto SSL
      kind: AutoSSL
      name: autossls.saas.3scale.net
      specDescriptors:
      - description: Application specific configuration options for the component
        displayName: Config
        path: config
      - description: Enables/disables the Let's Encrypt staging ACME endpoint
        displayName: ACMEStaging
        path: config.acmeStaging
      - description: Defines an email address for Let's Encrypt notifications
        displayName: Contact Email
        path: config.contactEmail
      - description: List of domains that will never get autogenerated certificates
        displayName: Domain Blacklist
        path: config.domainBlacklist
      - description: List of domains that will bypass domain verification
        displayName: Domain Whitelist
        path: config.domainWhitelist
      - description: Sets the nginx log level
        displayName: Log Level
        path: config.logLevel
      - description: The endpoint to proxy_pass requests to
        displayName: Proxy Endpoint
        path: config.proxyEndpoint
      - description: Host for the redis database to store certificates
        displayName: Redis Host
        path: config.redisHost
      - description: Port for the redis database to store certificates
        displayName: Redis Port
        path: config.redisPort
      - description: The endpoint used to validate if certificate generation is allowed for the domain
        displayName: Verification Endpoint
        path: config.verificationEndpoint
      - description: The external endpoint/s for the component
        displayName: Endpoint
        path: endpoint
      - description: Configures the Grafana Dashboard for the component
        displayName: Grafana Dashboard
        path: grafanaDashboard
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: hpa
      - description: Image specification for the component
        displayName: Image
        path: image
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: livenessProbe
      - description: Configures the AWS load balancer for the component
        displayName: Load Balancer
        path: loadBalancer
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: pdb
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: readinessProbe
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: resources
      version: v1alpha1
    - kind: Backend
      name: backends.saas.3scale.net
      version: v1alpha1
    - description: CORSProxy is the Schema for the corsproxies API
      displayName: CORSProxy
      kind: CORSProxy
      name: corsproxies.saas.3scale.net
      specDescriptors:
      - description: Application specific configuration options for the component
        displayName: Config
        path: config
      - description: System database connection string
        displayName: System Database DSN
        path: config.systemDatabaseDSN
      - description: Configures the Grafana Dashboard for the component
        displayName: Grafana Dashboard
        path: grafanaDashboard
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: hpa
      - description: Image specification for the component
        displayName: Image
        path: image
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: livenessProbe
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: pdb
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: readinessProbe
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: resources
      version: v1alpha1
    - description: MappingService is the Schema for the mappingservices API
      displayName: Mapping Service
      kind: MappingService
      name: mappingservices.saas.3scale.net
      specDescriptors:
      - description: Application specific configuration options for the component
        displayName: Config
        path: config
      - description: System endpoint to fetch proxy configs from
        displayName: APIHost
        path: config.apiHost
      - description: Openresty log level
        displayName: Log Level
        path: config.logLevel
      - description: Base domain to replace the proxy configs base domain
        displayName: Preview Base Domain
        path: config.previewBaseDomain
      - description: A reference to the secret holding the system admin token
        displayName: System Admin Token
        path: config.systemAdminToken
      - description: Configures the Grafana Dashboard for the component
        displayName: Grafana Dashboard
        path: grafanaDashboard
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: hpa
      - description: Image specification for the component
        displayName: Image
        path: image
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: livenessProbe
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: pdb
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: readinessProbe
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: resources
      version: v1alpha1
    - description: System is the Schema for the systems API
      displayName: System
      kind: System
      name: systems.saas.3scale.net
      specDescriptors:
      - description: Application specific configuration options
        displayName: App
        path: app
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: app.hpa
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: app.livenessProbe
      - description: Marin3r configures the Marin3r sidecars for the component
        displayName: Marin3r
        path: app.marin3r
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: app.pdb
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: app.readinessProbe
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: app.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: app.resources
      - description: Application specific configuration options for System components
        displayName: Config
        path: config
      - description: AccessCode to protect admin urls
        displayName: Access Code
        path: config.accessCode
      - description: AMP release number
        displayName: AMPRelease
        path: config.ampRelease
      - description: Master access token for Apicast
        displayName: Apicast Access Token
        path: config.apicastAccessToken
      - description: AWS access key
        displayName: Access Key
        path: config.assets.accessKey
      - description: AWS S3 bucket name
        displayName: Bucket
        path: config.assets.bucket
      - description: AWS S3 region
        displayName: Region
        path: config.assets.region
      - description: AWS secret access key
        displayName: Secret Key
        path: config.assets.secretKey
      - description: Backend has configuration options for system to contact backend
        displayName: Backend
        path: config.backend
      - description: External endpoint
        displayName: External Endpoint
        path: config.backend.externalEndpoint
      - description: Internal API password
        displayName: Internal APIPassword
        path: config.backend.internalAPIPassword
      - description: Internal API user
        displayName: Internal APIUser
        path: config.backend.internalAPIUser
      - description: Internal endpoint
        displayName: Internal Endpoint
        path: config.backend.internalEndpoint
      - description: Redis data source name
        displayName: Redis DSN
        path: config.backend.redisDSN
      - description: Options for configuring Bugsnag integration
        displayName: Bugsnag
        path: config.bugsnag
      - description: API key
        displayName: APIKey
        path: config.bugsnag.apiKey
      - description: Extra configuration files to be mounted in the pods
        displayName: Config Files
        path: config.configFiles
      - description: DSN of system's main database
        displayName: Database DSN
        path: config.databaseDSN
      - description: Database secret
        displayName: Database Secret
        path: config.databaseSecret
      - description: EventsSharedSecret
        displayName: Events Shared Secret
        path: config.eventsSharedSecret
      - description: Enable (true) or disable (false) enforcing SSL
        displayName: Force SSL
        path: config.forceSSL
      - description: Options for Github integration
        displayName: Github
        path: config.github
      - description: Client ID
        displayName: Client ID
        path: config.github.clientID
      - description: Client secret
        displayName: Client Secret
        path: config.github.clientSecret
      - description: Memcached servers
        displayName: Memcached Servers
        path: config.memcachedServers
      - description: Options for configuring metrics publication
        displayName: Metrics
        path: config.metrics
      - description: Password
        displayName: Password
        path: config.metrics.password
      - description: User name
        displayName: User
        path: config.metrics.user
      - description: Rails configuration options for system components
        displayName: Rails
        path: config.rails
      - description: Rails environment
        displayName: Environment
        path: config.rails.environment
      - description: Rails log level (debug, info, warn, error, fatal or unknown)
        displayName: Log Level
        path: config.rails.logLevel
      - description: Holds recaptcha configuration options
        displayName: Recaptcha
        path: config.recaptcha
      - description: Private key
        displayName: Private Key
        path: config.recaptcha.privateKey
      - description: Public key
        displayName: Public Key
        path: config.recaptcha.publicKey
      - description: Options for configuring RH Customer Portal integration
        displayName: Red Hat Customer Portal
        path: config.redhatCustomerPortal
      - description: Client ID
        displayName: Client ID
        path: config.redhatCustomerPortal.clientID
      - description: Client secret
        displayName: Client Secret
        path: config.redhatCustomerPortal.clientSecret
      - description: Redis configuration options
        displayName: Redis
        path: config.redis
      - description: Data source name
        displayName: DSN
        path: config.redis.dsn
      - description: Message bus data source name
        displayName: Message Bus DSN
        path: config.redis.messageBusDSN
      - description: OpenSSL verification mode for sandbox proxy
        displayName: Sandbox Proxy Openssl Verify Mode
        path: config.sandboxProxyOpensslVerifyMode
      - description: SecretKeyBase
        displayName: Secret Key Base
        path: config.secretKeyBase
      - description: System seed
        displayName: Seed
        path: config.seed
      - description: Admin access token
        displayName: Admin Access Token
        path: config.seed.adminAccessToken
      - description: Admin email address
        displayName: Admin Email
        path: config.seed.adminEmail
      - description: Admin password
        displayName: Admin Password
        path: config.seed.adminPassword
      - description: Admin user
        displayName: Admin User
        path: config.seed.adminUser
      - description: Master access token
        displayName: Master Access Token
        path: config.seed.masterAccessToken
      - description: Master domain
        displayName: Master Domain
        path: config.seed.masterDomain
      - description: Master password
        displayName: Master Password
        path: config.seed.masterPassword
      - description: Master user
        displayName: Master User
        path: config.seed.masterUser
      - description: Tenant name
        displayName: Tenant Name
        path: config.seed.tenantName
      - description: Options for Segment integration
        displayName: Segment
        path: config.segment
      - description: Deletion token
        displayName: Deletion Token
        path: config.segment.deletionToken
      - description: Deletion workspace
        displayName: Deletion Workspace
        path: config.segment.deletionWorkspace
      - description: Write key
        displayName: Write Key
        path: config.segment.writeKey
      - description: SMTP configuration options
        displayName: SMTP
        path: config.smtp
      - description: Address
        displayName: Address
        path: config.smtp.address
      - description: Authentication protocol
        displayName: Auth Protocol
        path: config.smtp.authProtocol
      - description: OpenSSL verify mode
        displayName: Open SSLVerify Mode
        path: config.smtp.opensslVerifyMode
      - description: Password
        displayName: Password
        path: config.smtp.password
      - description: Port
        displayName: Port
        path: config.smtp.port
      - description: Enable/disable auto STARTTLS
        displayName: STARTTLSAuto
        path: config.smtp.starttlsAuto
      - description: User
        displayName: User
        path: config.smtp.user
      - description: SSL certificates path
        displayName: SSLCerts Dir
        path: config.sslCertsDir
      - description: 3scale provider plan
        displayName: Threescale Provider Plan
        path: config.threescaleProviderPlan
      - description: 3scale superdomain
        displayName: Threescale Superdomain
        path: config.threescaleSuperdomain
      - description: Zync authentication token
        displayName: Zync Auth Token
        path: config.zyncAuthToken
      - description: Configures the Grafana Dashboard for the component
        displayName: Grafana Dashboard
        path: grafanaDashboard
      - description: Image specification for the component
        displayName: Image
        path: image
      - description: Sidekiq specific configuration options
        displayName: Sidekiq
        path: sidekiq
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: sidekiq.hpa
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: sidekiq.livenessProbe
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: sidekiq.pdb
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: sidekiq.readinessProbe
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: sidekiq.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: sidekiq.resources
      - description: Sphinx specific configuration options
        displayName: Sphinx
        path: sphinx
      - description: Configuration options for System's sphinx
        displayName: Config
        path: sphinx.config
      - description: Interval used for adding chunks of brand new documents to the primary index at certain intervals without having to do a full re-index
        displayName: Delta Index Interval
        path: sphinx.config.deltaIndexInterval
      - description: Interval used to do a full re-index
        displayName: Full Reindex Interval
        path: sphinx.config.fullReindexInterval
      - description: Thinking configuration for sphinx
        displayName: Thinking
        path: sphinx.config.thinking
      - description: Allows setting the TCP host for Sphinx to a different address
        displayName: Bind Address
        path: sphinx.config.thinking.bindAddress
      - description: Sphinx configuration file path
        displayName: Config File
        path: sphinx.config.thinking.configFile
      - description: Sphinx database path
        displayName: Database Path
        path: sphinx.config.thinking.databasePath
      - description: Sphinx database storage type
        displayName: Database Storage Class
        path: sphinx.config.thinking.databaseStorageClass
      - description: Sphinx database storage size
        displayName: Database Storage Size
        path: sphinx.config.thinking.databaseStorageSize
      - description: Sphinx PID file path
        displayName: PIDFile
        path: sphinx.config.thinking.pidFile
      - description: The TCP port Sphinx will run its daemon on
        displayName: Port
        path: sphinx.config.thinking.port
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: sphinx.livenessProbe
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: sphinx.readinessProbe
      - description: Resource requirements for the component
        displayName: Resources
        path: sphinx.resources
      version: v1alpha1
  description: |
    The 3scale SaaS Operator creates and maintains SaaS-ready deployments
    of each component from the Red Hat 3scale API Management solution.

    ## Supported Features

    - **Installer:** A way to install a SaaS ready deployment of the 3scale API Management components, providing configurability options at the time of installation
    - **Reconcilliation:** Tunable CRD parameters for each component after 3scale API Management solution is installed

    ## Supported Components

    - **Apicast**
    - **Autossl**
    - **Backend**
    - **CorsProxy**
    - **MappingService**
    - **System**
    - **Zync**

    ## Documentation

    - [Getting started](https://github.com/3scale/saas-operator/blob/master/docs/getting-started.md)
    - [Custom Resource Definitions reference](https://github.com/3scale/saas-operator/tree/master/docs/reference)
    - [Development](https://github.com/3scale/saas-operator/blob/master/docs/development.md)

    ## License

    3scale SaaS Operator is licensed under the [Apache 2.0 license](https://github.com/3scale/saas-operator/blob/master/LICENSE)
  displayName: 3scale SaaS Operator
  icon:
  - base64data: |
      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
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: saas-operator-controller-manager
      deployments:
      - name: saas-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                image: quay.io/3scale/saas-operator:0.9.0-alpha25
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 100m
                    memory: 30Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: false
              serviceAccountName: saas-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          - coordination.k8s.io
          resources:
          - configmaps
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - integreatly.org
          resources:
          - grafanadashboards
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - podmonitors
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - apicasts
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - apicasts/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - apicasts/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - autossls
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - autossls/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - autossls/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - backends
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - backends/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - backends/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - corsproxies
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - corsproxies/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - corsproxies/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - mappingservices
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - mappingservices/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - mappingservices/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - systems
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - systems/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - systems/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - secrets-manager.tuenti.io
          resources:
          - secretdefinitions
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        serviceAccountName: saas-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - saas
  - 3scale
  - operations
  links:
  - name: GitHub Repository
    url: https://github.com/3scale/saas-operator
  - name: 3scale
    url: https://3scale.net
  maintainers:
  - email: 3scale-operations@redhat.com
    name: 3scale Ops
  maturity: alpha
  provider:
    name: Red Hat
    url: https://www.3scale.net/
  version: 0.9.0-alpha25
