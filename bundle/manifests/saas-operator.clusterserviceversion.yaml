apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "Apicast",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "production": {
              "config": {
                "configurationCache": 300,
                "logLevel": "debug",
                "threescalePortalEndpoint": "http://example.com"
              },
              "image": {
                "tag": "v0.1.0"
              },
              "publishingStrategies": {
                "endpoints": [
                  {
                    "marin3rSidecar": {
                      "dynamicConfigs": {
                        "gateway_cluster": {
                          "cluster": {
                            "host": "127.0.0.1",
                            "port": 8080
                          }
                        },
                        "http": {
                          "listenerHttp": {
                            "port": 38080,
                            "rateLimitOptions": {
                              "domain": "apicast_production",
                              "rateLimitCluster": "limitador_cluster",
                              "timeout": "10ms"
                            },
                            "routeConfigName": "router"
                          }
                        },
                        "https": {
                          "listenerHttp": {
                            "certificateSecretName": "stg-saas-wildcard-apicast-production",
                            "port": 38443,
                            "rateLimitOptions": {
                              "domain": "apicast_production",
                              "rateLimitCluster": "limitador_cluster",
                              "timeout": "10ms"
                            },
                            "routeConfigName": "router"
                          }
                        },
                        "limitador_cluster": {
                          "cluster": {
                            "host": "limitador-cluster.limitador.svc.cluster.local",
                            "isHttp2": true,
                            "port": 8081
                          }
                        },
                        "router": {
                          "routeConfiguration": {
                            "virtualHosts": [
                              {
                                "domains": [
                                  "*"
                                ],
                                "name": "gateway",
                                "rate_limits": [
                                  {
                                    "actions": [
                                      {
                                        "request_headers": {
                                          "descriptor_key": "per_hostname_per_second_burst",
                                          "header_name": ":authority"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "actions": [
                                      {
                                        "request_headers": {
                                          "descriptor_key": "per_hostname_daily_total",
                                          "header_name": ":authority"
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "routes": [
                                  {
                                    "match": {
                                      "prefix": "/"
                                    },
                                    "route": {
                                      "cluster": "gateway_cluster",
                                      "timeout": "30s"
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "runtime": {
                          "runtime": {
                            "listenerNames": [
                              "http",
                              "https"
                            ]
                          }
                        }
                      },
                      "externalDnsHostnames": [
                        "production.gw.example.com",
                        "production.apicast.example.com"
                      ],
                      "ports": [
                        {
                          "name": "gateway-http",
                          "port": 38080
                        },
                        {
                          "name": "gateway-https",
                          "port": 38443
                        },
                        {
                          "name": "envoy-metrics",
                          "port": 9901
                        }
                      ],
                      "servicePorts": [
                        {
                          "name": "gateway-http",
                          "port": 80,
                          "targetPort": "gateway-http"
                        },
                        {
                          "name": "gateway-https",
                          "port": 443,
                          "targetPort": "gateway-https"
                        }
                      ],
                      "serviceType": "ELB",
                      "shtdnmgrExtraLifecycleHooks": [
                        "apicast"
                      ],
                      "shtdnmgrPort": 8091
                    },
                    "name": "Gateway",
                    "strategy": "Marin3rSidecar"
                  },
                  {
                    "name": "Management",
                    "simple": {
                      "serviceType": "ClusterIP"
                    },
                    "strategy": "Simple"
                  }
                ]
              }
            },
            "staging": {
              "config": {
                "configurationCache": 30,
                "logLevel": "debug",
                "threescalePortalEndpoint": "http://example.com"
              },
              "image": {
                "tag": "v0.1.0"
              },
              "publishingStrategies": {
                "endpoints": [
                  {
                    "name": "Gateway",
                    "simple": {
                      "serviceName": "apicast-staging",
                      "serviceType": "NLB"
                    },
                    "strategy": "Simple"
                  },
                  {
                    "marin3rSidecar": {
                      "dynamicConfigs": {
                        "gateway_cluster": {
                          "cluster": {
                            "host": "127.0.0.1",
                            "port": 8080
                          }
                        },
                        "http": {
                          "listenerHttp": {
                            "port": 38080,
                            "rateLimitOptions": {
                              "domain": "apicast_staging",
                              "rateLimitCluster": "limitador_cluster",
                              "timeout": "10ms"
                            },
                            "routeConfigName": "router"
                          }
                        },
                        "https": {
                          "listenerHttp": {
                            "certificateSecretName": "stg-saas-wildcard-apicast-staging",
                            "port": 38443,
                            "rateLimitOptions": {
                              "domain": "apicast_staging",
                              "rateLimitCluster": "limitador_cluster",
                              "timeout": "10ms"
                            },
                            "routeConfigName": "router"
                          }
                        },
                        "limitador_cluster": {
                          "cluster": {
                            "host": "limitador-cluster.limitador.svc.cluster.local",
                            "isHttp2": true,
                            "port": 8081
                          }
                        },
                        "router": {
                          "routeConfiguration": {
                            "virtualHosts": [
                              {
                                "domains": [
                                  "*"
                                ],
                                "name": "gateway",
                                "rate_limits": [
                                  {
                                    "actions": [
                                      {
                                        "request_headers": {
                                          "descriptor_key": "per_hostname_per_second_burst",
                                          "header_name": ":authority"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "actions": [
                                      {
                                        "request_headers": {
                                          "descriptor_key": "per_hostname_daily_total",
                                          "header_name": ":authority"
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "routes": [
                                  {
                                    "match": {
                                      "prefix": "/"
                                    },
                                    "route": {
                                      "cluster": "gateway_cluster",
                                      "timeout": "30s"
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "runtime": {
                          "runtime": {
                            "listenerNames": [
                              "http",
                              "https"
                            ]
                          }
                        }
                      },
                      "externalDnsHostnames": [
                        "staging.gw.example.com",
                        "staging.apicast.example.com"
                      ],
                      "ports": [
                        {
                          "name": "gateway-http",
                          "port": 38080
                        },
                        {
                          "name": "gateway-https",
                          "port": 38443
                        },
                        {
                          "name": "envoy-metrics",
                          "port": 9901
                        }
                      ],
                      "servicePorts": [
                        {
                          "name": "gateway-http",
                          "port": 80,
                          "targetPort": "gateway-http"
                        },
                        {
                          "name": "gateway-https",
                          "port": 443,
                          "targetPort": "gateway-https"
                        }
                      ],
                      "serviceType": "ELB",
                      "shtdnmgrExtraLifecycleHooks": [
                        "apicast"
                      ],
                      "shtdnmgrPort": 8091
                    },
                    "name": "Gateway",
                    "strategy": "Marin3rSidecar"
                  },
                  {
                    "name": "Management",
                    "simple": {
                      "serviceType": "ClusterIP"
                    },
                    "strategy": "Simple"
                  }
                ],
                "mode": "Replace"
              }
            }
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "AutoSSL",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "config": {
              "contactEmail": "example@example.com",
              "proxyEndpoint": "https://example.com",
              "redisHost": "redis.example.com",
              "verificationEndpoint": "https://example.com/verify"
            },
            "endpoint": {
              "dns": [
                "autossl.example.com"
              ]
            },
            "image": {
              "tag": "v1.0.1"
            }
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "Backend",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "config": {
              "internalAPIPassword": {
                "fromVault": {
                  "key": "PASSWORD",
                  "path": "secret/data/some/path"
                }
              },
              "internalAPIUser": {
                "fromVault": {
                  "key": "USER",
                  "path": "secret/data/some/path"
                }
              },
              "rackEnv": "dev",
              "redisQueuesDSN": "backend-redis-queues",
              "redisStorageDSN": "backend-redis-storage",
              "systemEventsHookPassword": {
                "fromVault": {
                  "key": "PASSWORD",
                  "path": "secret/data/some/path"
                }
              },
              "systemEventsHookURL": {
                "fromVault": {
                  "key": "URL",
                  "path": "secret/data/some/path"
                }
              }
            },
            "image": {
              "tag": "v3.2.0"
            },
            "listener": {
              "config": {
                "redisAsync": false
              },
              "endpoint": {
                "dns": [
                  "backend.example.com"
                ]
              },
              "loadBalancer": {
                "eipAllocations": [
                  "eip-123",
                  "eip-456"
                ]
              },
              "marin3r": {
                "ports": [
                  {
                    "name": "backend-http",
                    "port": 38080
                  },
                  {
                    "name": "http-internal",
                    "port": 38081
                  },
                  {
                    "name": "backend-https",
                    "port": 38443
                  },
                  {
                    "name": "envoy-metrics",
                    "port": 9901
                  }
                ]
              }
            },
            "worker": {
              "config": {
                "redisAsync": true
              }
            }
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "CORSProxy",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "config": {
              "systemDatabaseDSN": {
                "fromVault": {
                  "key": "DSN",
                  "path": "secret/data/kubernetes/dev-eng/ocp4-5/3scale-saas/cors-proxy-system-database-mysql"
                }
              }
            },
            "image": {
              "tag": "latest"
            }
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "EchoAPI",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "endpoint": {
              "dns": [
                "echoapi.example.com"
              ]
            },
            "image": {
              "tag": "latest"
            },
            "marin3r": {
              "ports": [
                {
                  "name": "echo-api-http",
                  "port": 38080
                },
                {
                  "name": "echo-api-https",
                  "port": 38443
                },
                {
                  "name": "envoy-metrics",
                  "port": 9901
                }
              ]
            }
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "MappingService",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "config": {
              "apiHost": "http://example.com:3000",
              "systemAdminToken": {
                "fromVault": {
                  "key": "access-token",
                  "path": "secret/data/some/path"
                }
              }
            },
            "image": {
              "tag": "v0.1.0"
            }
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "RedisShard",
          "metadata": {
            "name": "redisshard-sample"
          },
          "spec": {}
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "Sentinel",
          "metadata": {
            "name": "sentinel-sample"
          },
          "spec": {
            "config": {
              "monitoredShards": {
                "shard01": [
                  "redis://10.244.0.39:6379",
                  "redis://10.244.0.40:6379",
                  "redis://10.244.0.41:6379"
                ]
              }
            }
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "ShardedRedisBackup",
          "metadata": {
            "name": "backup",
            "namespace": "default"
          },
          "spec": {
            "dbFile": "/data/dump.rdb",
            "historyLimit": 10,
            "pollInterval": "10s",
            "s3Options": {
              "bucket": "my-bucket",
              "credentialsSecretRef": {
                "name": "aws-credentials"
              },
              "path": "backups",
              "region": "us-east-1"
            },
            "schedule": "*/30 * * * *",
            "sentinelRef": "sentinel",
            "sshOptions": {
              "privateKeySecretRef": {
                "name": "redis-ssh-private-key"
              },
              "user": "root"
            },
            "timeout": "5m"
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "System",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "config": {
              "accessCode": {
                "fromVault": {
                  "key": "ACCESS_CODE",
                  "path": "secret/data/path/system-app"
                }
              },
              "apicastAccessToken": {
                "fromVault": {
                  "key": "ACCESS_TOKEN",
                  "path": "secret/data/path/system-master-apicast"
                }
              },
              "assets": {
                "accessKey": {
                  "fromVault": {
                    "key": "AWS_ACCESS_KEY_ID",
                    "path": "secret/data/path/system-multitenant-assets-s3"
                  }
                },
                "bucket": "my-bucket",
                "host": "test.cloudfront.net",
                "region": "us-east-1",
                "secretKey": {
                  "fromVault": {
                    "key": "AWS_SECRET_ACCESS_KEY",
                    "path": "secret/data/path/system-multitenant-assets-s3"
                  }
                }
              },
              "backend": {
                "externalEndpoint": "https://backend.example.com",
                "internalAPIPassword": {
                  "fromVault": {
                    "key": "password",
                    "path": "secret/data/path/backend-internal-api"
                  }
                },
                "internalAPIUser": {
                  "fromVault": {
                    "key": "username",
                    "path": "secret/data/path/backend-internal-api"
                  }
                },
                "internalEndpoint": "http://backend-listener-internal",
                "redisDSN": "redis://backend-redis:6379/0"
              },
              "bugsnag": {
                "apiKey": {
                  "fromVault": {
                    "key": "BUGSNAG_API_KEY",
                    "path": "secret/data/path/system-app"
                  }
                },
                "releaseStage": "staging"
              },
              "configFiles": {
                "files": [
                  "amazon_s3.yml",
                  "backend.yml",
                  "backend_redis.yml",
                  "banned_domains.yml",
                  "cable.yml",
                  "cache_store.yml",
                  "core.yml",
                  "database.yml",
                  "domain_substitution.yml",
                  "features.yml",
                  "internal_domains.yml",
                  "message_bus.yml",
                  "oauth2.yml",
                  "paperclip.yml",
                  "plan_rules.yml",
                  "redhat_customer_portal.yml",
                  "redis.yml",
                  "rolling_updates.yml",
                  "sandbox_proxy.yml",
                  "secrets.yml",
                  "segment.yml",
                  "settings.yml",
                  "sidekiq_schedule.yml",
                  "smtp.yml",
                  "web_hooks.yml",
                  "zync.yml"
                ],
                "vaultPath": "secret/data/path/system-config"
              },
              "databaseDSN": {
                "fromVault": {
                  "key": "URL",
                  "path": "secret/data/path/system-database"
                }
              },
              "databaseSecret": {
                "fromVault": {
                  "key": "DB_SECRET",
                  "path": "secret/data/path/system-app"
                }
              },
              "eventsSharedSecret": {
                "fromVault": {
                  "key": "EVENTS_SHARED_SECRET",
                  "path": "secret/data/path/system-app"
                }
              },
              "github": {
                "clientID": {
                  "fromVault": {
                    "key": "GITHUB_CLIENT_ID",
                    "path": "secret/data/path/system-app"
                  }
                },
                "clientSecret": {
                  "fromVault": {
                    "key": "GITHUB_CLIENT_SECRET",
                    "path": "secret/data/path/system-app"
                  }
                }
              },
              "mappingServiceAccessToken": {
                "fromVault": {
                  "key": "ACCESS_TOKEN",
                  "path": "secret/data/path/system-master-apicast"
                }
              },
              "memcachedServers": "",
              "recaptcha": {
                "privateKey": {
                  "fromVault": {
                    "key": "RECAPTCHA_PRIVATE_KEY",
                    "path": "secret/data/path/system-recaptcha"
                  }
                },
                "publicKey": {
                  "fromVault": {
                    "key": "RECAPTCHA_PUBLIC_KEY",
                    "path": "secret/data/path/system-recaptcha"
                  }
                }
              },
              "redhatCustomerPortal": {
                "clientID": {
                  "fromVault": {
                    "key": "RH_CUSTOMER_PORTAL_CLIENT_ID",
                    "path": "secret/data/path/system-app"
                  }
                },
                "clientSecret": {
                  "fromVault": {
                    "key": "RH_CUSTOMER_PORTAL_CLIENT_SECRET",
                    "path": "secret/data/path/system-app"
                  }
                },
                "realm": "sso.example.net"
              },
              "redis": {
                "queuesDSN": "redis://system-redis:6379/1"
              },
              "secretKeyBase": {
                "fromVault": {
                  "key": "SECRET_KEY_BASE",
                  "path": "secret/data/path/system-app"
                }
              },
              "segment": {
                "deletionToken": {
                  "fromVault": {
                    "key": "SEGMENT_DELETION_TOKEN",
                    "path": "secret/data/path/system-app"
                  }
                },
                "deletionWorkspace": "example",
                "writeKey": {
                  "fromVault": {
                    "key": "SEGMENT_WRITE_KEY",
                    "path": "secret/data/path/system-app"
                  }
                }
              },
              "smtp": {
                "address": "localhost",
                "authProtocol": "none",
                "opensslVerifyMode": "none",
                "password": {
                  "fromVault": {
                    "key": "password",
                    "path": "secret/data/path/system-smtp"
                  }
                },
                "port": 25,
                "starttls": false,
                "user": {
                  "fromVault": {
                    "key": "username",
                    "path": "secret/data/path/system-smtp"
                  }
                }
              },
              "zync": {
                "authToken": {
                  "fromVault": {
                    "key": "ZYNC_AUTHENTICATION_TOKEN",
                    "path": "secret/data/path/zync"
                  }
                },
                "endpoint": "http://zync:8080"
              }
            },
            "image": {
              "pullPolicy": "Always"
            }
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "TwemproxyConfig",
          "metadata": {
            "name": "twemproxyconfig-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "apiVersion": "saas.3scale.net/v1alpha1",
          "kind": "Zync",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "api": {
              "hpa": {
                "minReplicas": 1
              }
            },
            "config": {
              "bugsnag": {
                "apiKey": {
                  "fromVault": {
                    "key": "BUGSNAG_API_KEY",
                    "path": "secret/data/path/zync"
                  }
                },
                "releaseStage": "development"
              },
              "databaseDSN": {
                "fromVault": {
                  "key": "URL",
                  "path": "secret/data/path/zync"
                }
              },
              "rails": {
                "environment": "development",
                "logLevel": "info"
              },
              "secretKeyBase": {
                "fromVault": {
                  "key": "SECRET_KEY_BASE",
                  "path": "secret/data/path/zync"
                }
              },
              "zyncAuthToken": {
                "fromVault": {
                  "key": "ZYNC_AUTHENTICATION_TOKEN",
                  "path": "secret/data/path/zync"
                }
              }
            },
            "que": {
              "hpa": {
                "minReplicas": 1
              }
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: Integration & Delivery
    containerImage: quay.io/3scale/saas-operator
    createdAt: "2024-07-24T10:29:11Z"
    description: |-
      The 3scale SaaS Operator creates and maintains a SaaS-ready deployment
      of the Red Hat 3scale API Management on OpenShift.
    operators.operatorframework.io/builder: operator-sdk-v1.27.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/3scale-ops/saas-operator
    support: Red Hat
  name: saas-operator.v0.25.0-alpha.7
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Apicast is the Schema for the apicasts API
      displayName: Apicast
      kind: Apicast
      name: apicasts.saas.3scale.net
      specDescriptors:
      - description: Configures the Grafana Dashboard for the component
        displayName: Grafana Dashboard
        path: grafanaDashboard
      - description: Label key used by grafana-operator for dashboard discovery
        displayName: Selector Key
        path: grafanaDashboard.selectorKey
      - description: Label value used by grafana-operator for dashboard discovery
        displayName: Selector Value
        path: grafanaDashboard.selectorValue
      - description: Configures the production Apicast environment
        displayName: Production
        path: production
      - description: Canary defines spec changes for the canary Deployment. If left
          unset the canary Deployment wil not be created.
        displayName: Canary
        path: production.canary
      - description: ImageName to use for the canary Deployment
        displayName: Image Name
        path: production.canary.imageName
      - description: ImageTag to use for the canary Deployment
        displayName: Image Tag
        path: production.canary.imageTag
      - description: Patches to apply for the canary Deployment. Patches are expected
          to be JSON documents as an RFC 6902 patches.
        displayName: Patches
        path: production.canary.patches
      - description: Number of replicas for the canary Deployment
        displayName: Replicas
        path: production.canary.replicas
      - description: SendTraffic controls if traffic is sent to the canary
        displayName: Send Traffic
        path: production.canary.sendTraffic
      - description: Application specific configuration options for the component
        displayName: Config
        path: production.config
      - description: Apicast configurations cache TTL
        displayName: Configuration Cache
        path: production.config.configurationCache
      - description: Openresty log level
        displayName: Log Level
        path: production.config.logLevel
      - description: OpenID Connect integration log level
        displayName: OIDCLog Level
        path: production.config.oidcLogLevel
      - description: Endpoint to request proxy configurations to
        displayName: Threescale Portal Endpoint
        path: production.config.threescalePortalEndpoint
      - description: The external endpoint/s for the component DEPRECATED
        displayName: Endpoint
        path: production.endpoint
      - description: The list of dns records that will point to the component
        displayName: DNS
        path: production.endpoint.dns
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: production.hpa
      - description: Upper limit for the number of replicas to which the autoscaler
          can scale up. It cannot be less that minReplicas.
        displayName: Max Replicas
        path: production.hpa.maxReplicas
      - description: Lower limit for the number of replicas to which the autoscaler
          can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if
          the alpha feature gate HPAScaleToZero is enabled and at least one Object
          or External metric is configured.  Scaling is active as long as at least
          one metric value is available.
        displayName: Min Replicas
        path: production.hpa.minReplicas
      - description: Target resource used to autoscale (cpu/memory)
        displayName: Resource Name
        path: production.hpa.resourceName
      - description: A percentage indicating the target resource consumption used
          to autoscale
        displayName: Resource Utilization
        path: production.hpa.resourceUtilization
      - description: Image specification for the component
        displayName: Image
        path: production.image
      - description: Docker repository of the image
        displayName: Name
        path: production.image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: production.image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: production.image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: production.image.tag
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: production.livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: production.livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: production.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: production.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: production.livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: production.livenessProbe.timeoutSeconds
      - description: Configures the AWS load balancer for the component DEPRECATED
        displayName: Load Balancer
        path: production.loadBalancer
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: production.loadBalancer.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: production.loadBalancer.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: production.loadBalancer.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: production.loadBalancer.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: production.loadBalancer.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: production.loadBalancer.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: production.loadBalancer.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: production.loadBalancer.proxyProtocol
      - description: Marin3r configures the Marin3r sidecars for the component DEPRECATED
        displayName: Marin3r
        path: production.marin3r
      - description: Envoy dynamic configuration. Populating this field causes the
          operator to create a Marin3r EnvoyConfig resource, so Marin3r must be installed
          in the cluster.
        displayName: Envoy Dynamic Config
        path: production.marin3r.dynamicConfigs
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: production.marin3r.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: production.marin3r.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: production.marin3r.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: production.marin3r.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: production.marin3r.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: production.marin3r.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: production.marin3r.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: production.marin3r.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: production.marin3r.elasticLoadBalancerConfig.proxyProtocol
      - description: The Envoy API version to use
        displayName: Envoy APIVersion
        path: production.marin3r.envoyAPIVersion
      - description: The Envoy iamge to use
        displayName: Envoy Image
        path: production.marin3r.envoyImage
      - description: Extra annotations to pass the Pod to further configure the sidecar
          container.
        displayName: Extra Pod Annotations
        path: production.marin3r.extraPodAnnotations
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: production.marin3r.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: production.marin3r.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: production.marin3r.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: production.marin3r.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: production.marin3r.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: production.marin3r.networkLoadBalancerConfig.proxyProtocol
      - description: The NodeID that identifies the Envoy sidecar to the DiscoveryService
        displayName: Node ID
        path: production.marin3r.nodeID
      - description: The ports that the sidecar exposes
        displayName: Ports
        path: production.marin3r.ports
      - description: Port name
        displayName: Name
        path: production.marin3r.ports[0].name
      - description: Port value
        displayName: Port
        path: production.marin3r.ports[0].port
      - description: Compute Resources required by the sidecar container.
        displayName: Resources
        path: production.marin3r.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: production.marin3r.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: production.marin3r.resources.requests
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: production.marin3r.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: production.marin3r.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: production.marin3r.serviceType
      - description: Extra containers to sync with the shutdown manager upon pod termination
        displayName: Shutdown Manager Extra Lifecycle Hooks
        path: production.marin3r.shtdnmgrExtraLifecycleHooks
      - description: The port where Marin3r's shutdown manager listens
        displayName: Shutdown Manager Port
        path: production.marin3r.shtdnmgrPort
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: production.pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: production.pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: production.pdb.minAvailable
      - description: Describes how the services provided by this workload are exposed
          to its consumers
        displayName: Publishing Strategies
        path: production.publishingStrategies
      - description: Endpoints holds the list of publishing strategies for each workload
          endpoint.
        displayName: Endpoints
        path: production.publishingStrategies.endpoints
      - description: Create explicitely tells the controller that this is a new endpoint
          that should be added. Default is false, causing the controller to error
          when seeing an unknown endpoint.
        displayName: Create
        path: production.publishingStrategies.endpoints[0].create
      - description: Marin3rSidecar holds configuration for the Marin3rSidecar publishing
          strategy
        displayName: Marin3r Sidecar
        path: production.publishingStrategies.endpoints[0].marin3rSidecar
      - description: Envoy dynamic configuration. Populating this field causes the
          operator to create a Marin3r EnvoyConfig resource, so Marin3r must be installed
          in the cluster.
        displayName: Envoy Dynamic Config
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.dynamicConfigs
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.proxyProtocol
      - description: The Envoy API version to use
        displayName: Envoy APIVersion
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.envoyAPIVersion
      - description: The Envoy iamge to use
        displayName: Envoy Image
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.envoyImage
      - description: Extra annotations to pass the Pod to further configure the sidecar
          container.
        displayName: Extra Pod Annotations
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.extraPodAnnotations
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.proxyProtocol
      - description: The NodeID that identifies the Envoy sidecar to the DiscoveryService
        displayName: Node ID
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.nodeID
      - description: The ports that the sidecar exposes
        displayName: Ports
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.ports
      - description: Port name
        displayName: Name
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.ports[0].name
      - description: Port value
        displayName: Port
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.ports[0].port
      - description: Compute Resources required by the sidecar container.
        displayName: Resources
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.resources.requests
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.serviceType
      - description: Extra containers to sync with the shutdown manager upon pod termination
        displayName: Shutdown Manager Extra Lifecycle Hooks
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrExtraLifecycleHooks
      - description: The port where Marin3r's shutdown manager listens
        displayName: Shutdown Manager Port
        path: production.publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrPort
      - description: EndpointName defines the endpoint affected by this publishing
          strategy
        displayName: Endpoint Name
        path: production.publishingStrategies.endpoints[0].name
      - description: Simple holds configuration for the Simple publishing strategy
        displayName: Simple
        path: production.publishingStrategies.endpoints[0].simple
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: production.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: production.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: production.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: production.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: production.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: production.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: production.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: production.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: production.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.proxyProtocol
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: production.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: production.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: production.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: production.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: production.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: production.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.proxyProtocol
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: production.publishingStrategies.endpoints[0].simple.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: production.publishingStrategies.endpoints[0].simple.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: production.publishingStrategies.endpoints[0].simple.serviceType
      - description: Strategy defines the type of publishing strategy
        displayName: Strategy
        path: production.publishingStrategies.endpoints[0].strategy
      - description: PublishingStrategiesReconcileMode specifies if the list of strategies
          should be merged with the defautls or replace them entirely. Allowed values
          are "Merge" or "Replace". "Replace" strategy should be used to enable 2
          strategies at the same time for a single endpoint.
        displayName: Mode
        path: production.publishingStrategies.mode
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: production.readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: production.readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: production.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: production.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: production.readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: production.readinessProbe.timeoutSeconds
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: production.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: production.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: production.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: production.resources.requests
      - description: Configures the staging Apicast environment
        displayName: Staging
        path: staging
      - description: Canary defines spec changes for the canary Deployment. If left
          unset the canary Deployment wil not be created.
        displayName: Canary
        path: staging.canary
      - description: ImageName to use for the canary Deployment
        displayName: Image Name
        path: staging.canary.imageName
      - description: ImageTag to use for the canary Deployment
        displayName: Image Tag
        path: staging.canary.imageTag
      - description: Patches to apply for the canary Deployment. Patches are expected
          to be JSON documents as an RFC 6902 patches.
        displayName: Patches
        path: staging.canary.patches
      - description: Number of replicas for the canary Deployment
        displayName: Replicas
        path: staging.canary.replicas
      - description: SendTraffic controls if traffic is sent to the canary
        displayName: Send Traffic
        path: staging.canary.sendTraffic
      - description: Application specific configuration options for the component
        displayName: Config
        path: staging.config
      - description: Apicast configurations cache TTL
        displayName: Configuration Cache
        path: staging.config.configurationCache
      - description: Openresty log level
        displayName: Log Level
        path: staging.config.logLevel
      - description: OpenID Connect integration log level
        displayName: OIDCLog Level
        path: staging.config.oidcLogLevel
      - description: Endpoint to request proxy configurations to
        displayName: Threescale Portal Endpoint
        path: staging.config.threescalePortalEndpoint
      - description: The external endpoint/s for the component DEPRECATED
        displayName: Endpoint
        path: staging.endpoint
      - description: The list of dns records that will point to the component
        displayName: DNS
        path: staging.endpoint.dns
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: staging.hpa
      - description: Upper limit for the number of replicas to which the autoscaler
          can scale up. It cannot be less that minReplicas.
        displayName: Max Replicas
        path: staging.hpa.maxReplicas
      - description: Lower limit for the number of replicas to which the autoscaler
          can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if
          the alpha feature gate HPAScaleToZero is enabled and at least one Object
          or External metric is configured.  Scaling is active as long as at least
          one metric value is available.
        displayName: Min Replicas
        path: staging.hpa.minReplicas
      - description: Target resource used to autoscale (cpu/memory)
        displayName: Resource Name
        path: staging.hpa.resourceName
      - description: A percentage indicating the target resource consumption used
          to autoscale
        displayName: Resource Utilization
        path: staging.hpa.resourceUtilization
      - description: Image specification for the component
        displayName: Image
        path: staging.image
      - description: Docker repository of the image
        displayName: Name
        path: staging.image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: staging.image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: staging.image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: staging.image.tag
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: staging.livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: staging.livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: staging.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: staging.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: staging.livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: staging.livenessProbe.timeoutSeconds
      - description: Configures the AWS load balancer for the component DEPRECATED
        displayName: Load Balancer
        path: staging.loadBalancer
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: staging.loadBalancer.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: staging.loadBalancer.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: staging.loadBalancer.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: staging.loadBalancer.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: staging.loadBalancer.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: staging.loadBalancer.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: staging.loadBalancer.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: staging.loadBalancer.proxyProtocol
      - description: Marin3r configures the Marin3r sidecars for the component DEPRECATED
        displayName: Marin3r
        path: staging.marin3r
      - description: Envoy dynamic configuration. Populating this field causes the
          operator to create a Marin3r EnvoyConfig resource, so Marin3r must be installed
          in the cluster.
        displayName: Envoy Dynamic Config
        path: staging.marin3r.dynamicConfigs
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: staging.marin3r.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: staging.marin3r.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: staging.marin3r.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: staging.marin3r.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: staging.marin3r.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: staging.marin3r.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: staging.marin3r.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: staging.marin3r.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: staging.marin3r.elasticLoadBalancerConfig.proxyProtocol
      - description: The Envoy API version to use
        displayName: Envoy APIVersion
        path: staging.marin3r.envoyAPIVersion
      - description: The Envoy iamge to use
        displayName: Envoy Image
        path: staging.marin3r.envoyImage
      - description: Extra annotations to pass the Pod to further configure the sidecar
          container.
        displayName: Extra Pod Annotations
        path: staging.marin3r.extraPodAnnotations
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: staging.marin3r.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: staging.marin3r.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: staging.marin3r.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: staging.marin3r.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: staging.marin3r.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: staging.marin3r.networkLoadBalancerConfig.proxyProtocol
      - description: The NodeID that identifies the Envoy sidecar to the DiscoveryService
        displayName: Node ID
        path: staging.marin3r.nodeID
      - description: The ports that the sidecar exposes
        displayName: Ports
        path: staging.marin3r.ports
      - description: Port name
        displayName: Name
        path: staging.marin3r.ports[0].name
      - description: Port value
        displayName: Port
        path: staging.marin3r.ports[0].port
      - description: Compute Resources required by the sidecar container.
        displayName: Resources
        path: staging.marin3r.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: staging.marin3r.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: staging.marin3r.resources.requests
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: staging.marin3r.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: staging.marin3r.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: staging.marin3r.serviceType
      - description: Extra containers to sync with the shutdown manager upon pod termination
        displayName: Shutdown Manager Extra Lifecycle Hooks
        path: staging.marin3r.shtdnmgrExtraLifecycleHooks
      - description: The port where Marin3r's shutdown manager listens
        displayName: Shutdown Manager Port
        path: staging.marin3r.shtdnmgrPort
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: staging.pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: staging.pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: staging.pdb.minAvailable
      - description: Describes how the services provided by this workload are exposed
          to its consumers
        displayName: Publishing Strategies
        path: staging.publishingStrategies
      - description: Endpoints holds the list of publishing strategies for each workload
          endpoint.
        displayName: Endpoints
        path: staging.publishingStrategies.endpoints
      - description: Create explicitely tells the controller that this is a new endpoint
          that should be added. Default is false, causing the controller to error
          when seeing an unknown endpoint.
        displayName: Create
        path: staging.publishingStrategies.endpoints[0].create
      - description: Marin3rSidecar holds configuration for the Marin3rSidecar publishing
          strategy
        displayName: Marin3r Sidecar
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar
      - description: Envoy dynamic configuration. Populating this field causes the
          operator to create a Marin3r EnvoyConfig resource, so Marin3r must be installed
          in the cluster.
        displayName: Envoy Dynamic Config
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.dynamicConfigs
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.proxyProtocol
      - description: The Envoy API version to use
        displayName: Envoy APIVersion
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.envoyAPIVersion
      - description: The Envoy iamge to use
        displayName: Envoy Image
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.envoyImage
      - description: Extra annotations to pass the Pod to further configure the sidecar
          container.
        displayName: Extra Pod Annotations
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.extraPodAnnotations
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.proxyProtocol
      - description: The NodeID that identifies the Envoy sidecar to the DiscoveryService
        displayName: Node ID
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.nodeID
      - description: The ports that the sidecar exposes
        displayName: Ports
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.ports
      - description: Port name
        displayName: Name
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.ports[0].name
      - description: Port value
        displayName: Port
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.ports[0].port
      - description: Compute Resources required by the sidecar container.
        displayName: Resources
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.resources.requests
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.serviceType
      - description: Extra containers to sync with the shutdown manager upon pod termination
        displayName: Shutdown Manager Extra Lifecycle Hooks
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrExtraLifecycleHooks
      - description: The port where Marin3r's shutdown manager listens
        displayName: Shutdown Manager Port
        path: staging.publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrPort
      - description: EndpointName defines the endpoint affected by this publishing
          strategy
        displayName: Endpoint Name
        path: staging.publishingStrategies.endpoints[0].name
      - description: Simple holds configuration for the Simple publishing strategy
        displayName: Simple
        path: staging.publishingStrategies.endpoints[0].simple
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: staging.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: staging.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: staging.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: staging.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: staging.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: staging.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: staging.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: staging.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: staging.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.proxyProtocol
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: staging.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: staging.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: staging.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: staging.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: staging.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: staging.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.proxyProtocol
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: staging.publishingStrategies.endpoints[0].simple.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: staging.publishingStrategies.endpoints[0].simple.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: staging.publishingStrategies.endpoints[0].simple.serviceType
      - description: Strategy defines the type of publishing strategy
        displayName: Strategy
        path: staging.publishingStrategies.endpoints[0].strategy
      - description: PublishingStrategiesReconcileMode specifies if the list of strategies
          should be merged with the defautls or replace them entirely. Allowed values
          are "Merge" or "Replace". "Replace" strategy should be used to enable 2
          strategies at the same time for a single endpoint.
        displayName: Mode
        path: staging.publishingStrategies.mode
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: staging.readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: staging.readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: staging.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: staging.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: staging.readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: staging.readinessProbe.timeoutSeconds
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: staging.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: staging.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: staging.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: staging.resources.requests
      version: v1alpha1
    - description: AutoSSL is the Schema for the autossls API
      displayName: Auto SSL
      kind: AutoSSL
      name: autossls.saas.3scale.net
      specDescriptors:
      - description: Canary defines spec changes for the canary Deployment. If left
          unset the canary Deployment wil not be created.
        displayName: Canary
        path: canary
      - description: ImageName to use for the canary Deployment
        displayName: Image Name
        path: canary.imageName
      - description: ImageTag to use for the canary Deployment
        displayName: Image Tag
        path: canary.imageTag
      - description: Patches to apply for the canary Deployment. Patches are expected
          to be JSON documents as an RFC 6902 patches.
        displayName: Patches
        path: canary.patches
      - description: Number of replicas for the canary Deployment
        displayName: Replicas
        path: canary.replicas
      - description: SendTraffic controls if traffic is sent to the canary
        displayName: Send Traffic
        path: canary.sendTraffic
      - description: Application specific configuration options for the component
        displayName: Config
        path: config
      - description: Enables/disables the Let's Encrypt staging ACME endpoint
        displayName: ACMEStaging
        path: config.acmeStaging
      - description: Defines an email address for Let's Encrypt notifications
        displayName: Contact Email
        path: config.contactEmail
      - description: List of domains that will never get autogenerated certificates
        displayName: Domain Blacklist
        path: config.domainBlacklist
      - description: List of domains that will bypass domain verification
        displayName: Domain Whitelist
        path: config.domainWhitelist
      - description: Sets the nginx log level
        displayName: Log Level
        path: config.logLevel
      - description: The endpoint to proxy_pass requests to
        displayName: Proxy Endpoint
        path: config.proxyEndpoint
      - description: Host for the redis database to store certificates
        displayName: Redis Host
        path: config.redisHost
      - description: Port for the redis database to store certificates
        displayName: Redis Port
        path: config.redisPort
      - description: The endpoint used to validate if certificate generation is allowed
          for the domain
        displayName: Verification Endpoint
        path: config.verificationEndpoint
      - description: The external endpoint/s for the component DEPRECATED
        displayName: Endpoint
        path: endpoint
      - description: The list of dns records that will point to the component
        displayName: DNS
        path: endpoint.dns
      - description: Configures the Grafana Dashboard for the component
        displayName: Grafana Dashboard
        path: grafanaDashboard
      - description: Label key used by grafana-operator for dashboard discovery
        displayName: Selector Key
        path: grafanaDashboard.selectorKey
      - description: Label value used by grafana-operator for dashboard discovery
        displayName: Selector Value
        path: grafanaDashboard.selectorValue
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: hpa
      - description: Upper limit for the number of replicas to which the autoscaler
          can scale up. It cannot be less that minReplicas.
        displayName: Max Replicas
        path: hpa.maxReplicas
      - description: Lower limit for the number of replicas to which the autoscaler
          can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if
          the alpha feature gate HPAScaleToZero is enabled and at least one Object
          or External metric is configured.  Scaling is active as long as at least
          one metric value is available.
        displayName: Min Replicas
        path: hpa.minReplicas
      - description: Target resource used to autoscale (cpu/memory)
        displayName: Resource Name
        path: hpa.resourceName
      - description: A percentage indicating the target resource consumption used
          to autoscale
        displayName: Resource Utilization
        path: hpa.resourceUtilization
      - description: Image specification for the component
        displayName: Image
        path: image
      - description: Docker repository of the image
        displayName: Name
        path: image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: image.tag
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: livenessProbe.timeoutSeconds
      - description: Configures the AWS load balancer for the component DEPRECATED
        displayName: Load Balancer
        path: loadBalancer
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: loadBalancer.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: loadBalancer.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: loadBalancer.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: loadBalancer.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: loadBalancer.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: loadBalancer.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: loadBalancer.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: loadBalancer.proxyProtocol
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: pdb.minAvailable
      - description: Describes how the services provided by this workload are exposed
          to its consumers
        displayName: Publishing Strategies
        path: publishingStrategies
      - description: Endpoints holds the list of publishing strategies for each workload
          endpoint.
        displayName: Endpoints
        path: publishingStrategies.endpoints
      - description: Create explicitely tells the controller that this is a new endpoint
          that should be added. Default is false, causing the controller to error
          when seeing an unknown endpoint.
        displayName: Create
        path: publishingStrategies.endpoints[0].create
      - description: Marin3rSidecar holds configuration for the Marin3rSidecar publishing
          strategy
        displayName: Marin3r Sidecar
        path: publishingStrategies.endpoints[0].marin3rSidecar
      - description: Envoy dynamic configuration. Populating this field causes the
          operator to create a Marin3r EnvoyConfig resource, so Marin3r must be installed
          in the cluster.
        displayName: Envoy Dynamic Config
        path: publishingStrategies.endpoints[0].marin3rSidecar.dynamicConfigs
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.proxyProtocol
      - description: The Envoy API version to use
        displayName: Envoy APIVersion
        path: publishingStrategies.endpoints[0].marin3rSidecar.envoyAPIVersion
      - description: The Envoy iamge to use
        displayName: Envoy Image
        path: publishingStrategies.endpoints[0].marin3rSidecar.envoyImage
      - description: Extra annotations to pass the Pod to further configure the sidecar
          container.
        displayName: Extra Pod Annotations
        path: publishingStrategies.endpoints[0].marin3rSidecar.extraPodAnnotations
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.proxyProtocol
      - description: The NodeID that identifies the Envoy sidecar to the DiscoveryService
        displayName: Node ID
        path: publishingStrategies.endpoints[0].marin3rSidecar.nodeID
      - description: The ports that the sidecar exposes
        displayName: Ports
        path: publishingStrategies.endpoints[0].marin3rSidecar.ports
      - description: Port name
        displayName: Name
        path: publishingStrategies.endpoints[0].marin3rSidecar.ports[0].name
      - description: Port value
        displayName: Port
        path: publishingStrategies.endpoints[0].marin3rSidecar.ports[0].port
      - description: Compute Resources required by the sidecar container.
        displayName: Resources
        path: publishingStrategies.endpoints[0].marin3rSidecar.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: publishingStrategies.endpoints[0].marin3rSidecar.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: publishingStrategies.endpoints[0].marin3rSidecar.resources.requests
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: publishingStrategies.endpoints[0].marin3rSidecar.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: publishingStrategies.endpoints[0].marin3rSidecar.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: publishingStrategies.endpoints[0].marin3rSidecar.serviceType
      - description: Extra containers to sync with the shutdown manager upon pod termination
        displayName: Shutdown Manager Extra Lifecycle Hooks
        path: publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrExtraLifecycleHooks
      - description: The port where Marin3r's shutdown manager listens
        displayName: Shutdown Manager Port
        path: publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrPort
      - description: EndpointName defines the endpoint affected by this publishing
          strategy
        displayName: Endpoint Name
        path: publishingStrategies.endpoints[0].name
      - description: Simple holds configuration for the Simple publishing strategy
        displayName: Simple
        path: publishingStrategies.endpoints[0].simple
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.proxyProtocol
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.proxyProtocol
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: publishingStrategies.endpoints[0].simple.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: publishingStrategies.endpoints[0].simple.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: publishingStrategies.endpoints[0].simple.serviceType
      - description: Strategy defines the type of publishing strategy
        displayName: Strategy
        path: publishingStrategies.endpoints[0].strategy
      - description: PublishingStrategiesReconcileMode specifies if the list of strategies
          should be merged with the defautls or replace them entirely. Allowed values
          are "Merge" or "Replace". "Replace" strategy should be used to enable 2
          strategies at the same time for a single endpoint.
        displayName: Mode
        path: publishingStrategies.mode
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: readinessProbe.timeoutSeconds
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: resources.requests
      version: v1alpha1
    - description: Backend is the Schema for the backends API
      displayName: Backend
      kind: Backend
      name: backends.saas.3scale.net
      specDescriptors:
      - description: Application specific configuration options for the component
        displayName: Config
        path: config
      - description: A reference to the secret holding the backend-error-monitoring
          key
        displayName: Error Monitoring Key
        path: config.errorMonitoringKey
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.errorMonitoringKey.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.errorMonitoringKey.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.errorMonitoringKey.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.errorMonitoringKey.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.errorMonitoringKey.override
      - description: A reference to the secret holding the backend-error-monitoring
          service
        displayName: Error Monitoring Service
        path: config.errorMonitoringService
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.errorMonitoringService.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.errorMonitoringService.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.errorMonitoringService.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.errorMonitoringService.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.errorMonitoringService.override
      - description: External Secret common configuration
        displayName: External Secret
        path: config.externalSecret
      - description: RefreshInterval is the amount of time before the values reading
          again from the SecretStore provider (duration)
        displayName: Refresh Interval
        path: config.externalSecret.refreshInterval
      - description: SecretStoreRef defines which SecretStore to use when fetching
          the secret data
        displayName: Secret Store Ref
        path: config.externalSecret.secretStoreRef
      - description: The Vault secret store reference kind
        displayName: Kind
        path: config.externalSecret.secretStoreRef.kind
      - description: The Vault secret store reference name
        displayName: Name
        path: config.externalSecret.secretStoreRef.name
      - description: A reference to the secret holding the backend-internal-api password
        displayName: Internal APIPassword
        path: config.internalAPIPassword
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.internalAPIPassword.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.internalAPIPassword.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.internalAPIPassword.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.internalAPIPassword.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.internalAPIPassword.override
      - description: A reference to the secret holding the backend-internal-api user
        displayName: Internal APIUser
        path: config.internalAPIUser
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.internalAPIUser.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.internalAPIUser.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.internalAPIUser.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.internalAPIUser.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.internalAPIUser.override
      - description: Master service account ID in Porta
        displayName: Master Service ID
        path: config.masterServiceID
      - description: Rack environment
        displayName: Rack Env
        path: config.rackEnv
      - description: Redis Queues DSN
        displayName: Redis Queues DSN
        path: config.redisQueuesDSN
      - description: Redis Storage DSN
        displayName: Redis Storage DSN
        path: config.redisStorageDSN
      - description: A reference to the secret holding the backend-system-events-hook
          password
        displayName: System Events Hook Password
        path: config.systemEventsHookPassword
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.systemEventsHookPassword.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.systemEventsHookPassword.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.systemEventsHookPassword.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.systemEventsHookPassword.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.systemEventsHookPassword.override
      - description: A reference to the secret holding the backend-system-events-hook
          URL
        displayName: System Events Hook URL
        path: config.systemEventsHookURL
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.systemEventsHookURL.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.systemEventsHookURL.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.systemEventsHookURL.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.systemEventsHookURL.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.systemEventsHookURL.override
      - description: Configures the backend cron
        displayName: Cron
        path: cron
      - description: Describes node affinity scheduling rules for the pod.
        displayName: Node Affinity
        path: cron.nodeAffinity
      - description: Number of replicas for the component
        displayName: Replicas
        path: cron.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: cron.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: cron.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: cron.resources.requests
      - description: If specified, the pod's tolerations.
        displayName: Tolerations
        path: cron.tolerations
      - description: Configures the Grafana Dashboard for the component
        displayName: Grafana Dashboard
        path: grafanaDashboard
      - description: Label key used by grafana-operator for dashboard discovery
        displayName: Selector Key
        path: grafanaDashboard.selectorKey
      - description: Label value used by grafana-operator for dashboard discovery
        displayName: Selector Value
        path: grafanaDashboard.selectorValue
      - description: Image specification for the component
        displayName: Image
        path: image
      - description: Docker repository of the image
        displayName: Name
        path: image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: image.tag
      - description: Configures the backend listener
        displayName: Listener
        path: listener
      - description: Canary defines spec changes for the canary Deployment. If left
          unset the canary Deployment wil not be created.
        displayName: Canary
        path: listener.canary
      - description: ImageName to use for the canary Deployment
        displayName: Image Name
        path: listener.canary.imageName
      - description: ImageTag to use for the canary Deployment
        displayName: Image Tag
        path: listener.canary.imageTag
      - description: Patches to apply for the canary Deployment. Patches are expected
          to be JSON documents as an RFC 6902 patches.
        displayName: Patches
        path: listener.canary.patches
      - description: Number of replicas for the canary Deployment
        displayName: Replicas
        path: listener.canary.replicas
      - description: SendTraffic controls if traffic is sent to the canary
        displayName: Send Traffic
        path: listener.canary.sendTraffic
      - description: Listener specific configuration options for the component element
        displayName: Config
        path: listener.config
      - description: Enable (true) or disable (false) Legacy Referrer Filters
        displayName: Legacy Referrer Filters
        path: listener.config.legacyReferrerFilters
      - description: Number of worker processes per listener pod
        displayName: Listener Workers
        path: listener.config.listenerWorkers
      - description: Listener log format
        displayName: Log Format
        path: listener.config.logFormat
      - description: Enable (true) or disable (false) listener redis async mode
        displayName: Redis Async
        path: listener.config.redisAsync
      - description: The external endpoint/s for the component DEPRECATED
        displayName: Endpoint
        path: listener.endpoint
      - description: The list of dns records that will point to the component
        displayName: DNS
        path: listener.endpoint.dns
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: listener.hpa
      - description: Upper limit for the number of replicas to which the autoscaler
          can scale up. It cannot be less that minReplicas.
        displayName: Max Replicas
        path: listener.hpa.maxReplicas
      - description: Lower limit for the number of replicas to which the autoscaler
          can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if
          the alpha feature gate HPAScaleToZero is enabled and at least one Object
          or External metric is configured.  Scaling is active as long as at least
          one metric value is available.
        displayName: Min Replicas
        path: listener.hpa.minReplicas
      - description: Target resource used to autoscale (cpu/memory)
        displayName: Resource Name
        path: listener.hpa.resourceName
      - description: A percentage indicating the target resource consumption used
          to autoscale
        displayName: Resource Utilization
        path: listener.hpa.resourceUtilization
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: listener.livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: listener.livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: listener.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: listener.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: listener.livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: listener.livenessProbe.timeoutSeconds
      - description: Configures the AWS load balancer for the component DEPRECATED
        displayName: Load Balancer
        path: listener.loadBalancer
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: listener.loadBalancer.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: listener.loadBalancer.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: listener.loadBalancer.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: listener.loadBalancer.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: listener.loadBalancer.proxyProtocol
      - description: Marin3r configures the Marin3r sidecars for the component DEPRECATED
        displayName: Marin3r
        path: listener.marin3r
      - description: Envoy dynamic configuration. Populating this field causes the
          operator to create a Marin3r EnvoyConfig resource, so Marin3r must be installed
          in the cluster.
        displayName: Envoy Dynamic Config
        path: listener.marin3r.dynamicConfigs
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: listener.marin3r.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: listener.marin3r.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: listener.marin3r.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: listener.marin3r.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: listener.marin3r.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: listener.marin3r.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: listener.marin3r.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: listener.marin3r.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: listener.marin3r.elasticLoadBalancerConfig.proxyProtocol
      - description: The Envoy API version to use
        displayName: Envoy APIVersion
        path: listener.marin3r.envoyAPIVersion
      - description: The Envoy iamge to use
        displayName: Envoy Image
        path: listener.marin3r.envoyImage
      - description: Extra annotations to pass the Pod to further configure the sidecar
          container.
        displayName: Extra Pod Annotations
        path: listener.marin3r.extraPodAnnotations
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: listener.marin3r.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: listener.marin3r.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: listener.marin3r.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: listener.marin3r.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: listener.marin3r.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: listener.marin3r.networkLoadBalancerConfig.proxyProtocol
      - description: The NodeID that identifies the Envoy sidecar to the DiscoveryService
        displayName: Node ID
        path: listener.marin3r.nodeID
      - description: The ports that the sidecar exposes
        displayName: Ports
        path: listener.marin3r.ports
      - description: Port name
        displayName: Name
        path: listener.marin3r.ports[0].name
      - description: Port value
        displayName: Port
        path: listener.marin3r.ports[0].port
      - description: Compute Resources required by the sidecar container.
        displayName: Resources
        path: listener.marin3r.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: listener.marin3r.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: listener.marin3r.resources.requests
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: listener.marin3r.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: listener.marin3r.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: listener.marin3r.serviceType
      - description: Extra containers to sync with the shutdown manager upon pod termination
        displayName: Shutdown Manager Extra Lifecycle Hooks
        path: listener.marin3r.shtdnmgrExtraLifecycleHooks
      - description: The port where Marin3r's shutdown manager listens
        displayName: Shutdown Manager Port
        path: listener.marin3r.shtdnmgrPort
      - description: Describes node affinity scheduling rules for the pod.
        displayName: Node Affinity
        path: listener.nodeAffinity
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: listener.pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: listener.pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: listener.pdb.minAvailable
      - description: Describes how the services provided by this workload are exposed
          to its consumers
        displayName: Publishing Strategies
        path: listener.publishingStrategies
      - description: Endpoints holds the list of publishing strategies for each workload
          endpoint.
        displayName: Endpoints
        path: listener.publishingStrategies.endpoints
      - description: Create explicitely tells the controller that this is a new endpoint
          that should be added. Default is false, causing the controller to error
          when seeing an unknown endpoint.
        displayName: Create
        path: listener.publishingStrategies.endpoints[0].create
      - description: Marin3rSidecar holds configuration for the Marin3rSidecar publishing
          strategy
        displayName: Marin3r Sidecar
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar
      - description: Envoy dynamic configuration. Populating this field causes the
          operator to create a Marin3r EnvoyConfig resource, so Marin3r must be installed
          in the cluster.
        displayName: Envoy Dynamic Config
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.dynamicConfigs
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.proxyProtocol
      - description: The Envoy API version to use
        displayName: Envoy APIVersion
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.envoyAPIVersion
      - description: The Envoy iamge to use
        displayName: Envoy Image
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.envoyImage
      - description: Extra annotations to pass the Pod to further configure the sidecar
          container.
        displayName: Extra Pod Annotations
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.extraPodAnnotations
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.proxyProtocol
      - description: The NodeID that identifies the Envoy sidecar to the DiscoveryService
        displayName: Node ID
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.nodeID
      - description: The ports that the sidecar exposes
        displayName: Ports
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.ports
      - description: Port name
        displayName: Name
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.ports[0].name
      - description: Port value
        displayName: Port
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.ports[0].port
      - description: Compute Resources required by the sidecar container.
        displayName: Resources
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.resources.requests
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.serviceType
      - description: Extra containers to sync with the shutdown manager upon pod termination
        displayName: Shutdown Manager Extra Lifecycle Hooks
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrExtraLifecycleHooks
      - description: The port where Marin3r's shutdown manager listens
        displayName: Shutdown Manager Port
        path: listener.publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrPort
      - description: EndpointName defines the endpoint affected by this publishing
          strategy
        displayName: Endpoint Name
        path: listener.publishingStrategies.endpoints[0].name
      - description: Simple holds configuration for the Simple publishing strategy
        displayName: Simple
        path: listener.publishingStrategies.endpoints[0].simple
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: listener.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: listener.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: listener.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: listener.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: listener.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: listener.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: listener.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: listener.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: listener.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.proxyProtocol
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: listener.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: listener.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: listener.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: listener.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: listener.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: listener.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.proxyProtocol
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: listener.publishingStrategies.endpoints[0].simple.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: listener.publishingStrategies.endpoints[0].simple.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: listener.publishingStrategies.endpoints[0].simple.serviceType
      - description: Strategy defines the type of publishing strategy
        displayName: Strategy
        path: listener.publishingStrategies.endpoints[0].strategy
      - description: PublishingStrategiesReconcileMode specifies if the list of strategies
          should be merged with the defautls or replace them entirely. Allowed values
          are "Merge" or "Replace". "Replace" strategy should be used to enable 2
          strategies at the same time for a single endpoint.
        displayName: Mode
        path: listener.publishingStrategies.mode
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: listener.readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: listener.readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: listener.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: listener.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: listener.readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: listener.readinessProbe.timeoutSeconds
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: listener.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: listener.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: listener.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: listener.resources.requests
      - description: If specified, the pod's tolerations.
        displayName: Tolerations
        path: listener.tolerations
      - description: Configures twemproxy
        displayName: Twemproxy
        path: twemproxy
      - description: Image specification for the component
        displayName: Image
        path: twemproxy.image
      - description: Docker repository of the image
        displayName: Name
        path: twemproxy.image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: twemproxy.image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: twemproxy.image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: twemproxy.image.tag
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: twemproxy.livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: twemproxy.livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: twemproxy.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: twemproxy.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: twemproxy.livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: twemproxy.livenessProbe.timeoutSeconds
      - description: Options
        displayName: Options
        path: twemproxy.options
      - description: 'Set logging level to N. (default: 5, min: 0, max: 11)'
        displayName: Log Level
        path: twemproxy.options.logLevel
      - description: 'Set stats monitoring port to port.  (default: 22222)'
        displayName: Metrics Port
        path: twemproxy.options.metricsAddress
      - description: 'Set stats aggregation interval in msec to interval.  (default:
          30s)'
        displayName: Stats Interval
        path: twemproxy.options.statsInterval
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: twemproxy.readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: twemproxy.readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: twemproxy.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: twemproxy.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: twemproxy.readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: twemproxy.readinessProbe.timeoutSeconds
      - description: Resource requirements for the component
        displayName: Resources
        path: twemproxy.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: twemproxy.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: twemproxy.resources.requests
      - description: TwemproxyConfigRef is a reference to a TwemproxyConfig resource
          in the same Namespace
        displayName: Twemproxy Config Ref
        path: twemproxy.twemproxyConfigRef
      - description: Configures the backend worker
        displayName: Worker
        path: worker
      - description: Canary defines spec changes for the canary Deployment. If left
          unset the canary Deployment wil not be created.
        displayName: Canary
        path: worker.canary
      - description: ImageName to use for the canary Deployment
        displayName: Image Name
        path: worker.canary.imageName
      - description: ImageTag to use for the canary Deployment
        displayName: Image Tag
        path: worker.canary.imageTag
      - description: Patches to apply for the canary Deployment. Patches are expected
          to be JSON documents as an RFC 6902 patches.
        displayName: Patches
        path: worker.canary.patches
      - description: Number of replicas for the canary Deployment
        displayName: Replicas
        path: worker.canary.replicas
      - description: SendTraffic controls if traffic is sent to the canary
        displayName: Send Traffic
        path: worker.canary.sendTraffic
      - description: Listener specific configuration options for the component element
        displayName: Config
        path: worker.config
      - description: Worker log format
        displayName: Log Format
        path: worker.config.logFormat
      - description: Enable (true) or disable (false) worker redis async mode
        displayName: Redis Async
        path: worker.config.redisAsync
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: worker.hpa
      - description: Upper limit for the number of replicas to which the autoscaler
          can scale up. It cannot be less that minReplicas.
        displayName: Max Replicas
        path: worker.hpa.maxReplicas
      - description: Lower limit for the number of replicas to which the autoscaler
          can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if
          the alpha feature gate HPAScaleToZero is enabled and at least one Object
          or External metric is configured.  Scaling is active as long as at least
          one metric value is available.
        displayName: Min Replicas
        path: worker.hpa.minReplicas
      - description: Target resource used to autoscale (cpu/memory)
        displayName: Resource Name
        path: worker.hpa.resourceName
      - description: A percentage indicating the target resource consumption used
          to autoscale
        displayName: Resource Utilization
        path: worker.hpa.resourceUtilization
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: worker.livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: worker.livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: worker.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: worker.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: worker.livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: worker.livenessProbe.timeoutSeconds
      - description: Describes node affinity scheduling rules for the pod.
        displayName: Node Affinity
        path: worker.nodeAffinity
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: worker.pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: worker.pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: worker.pdb.minAvailable
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: worker.readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: worker.readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: worker.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: worker.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: worker.readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: worker.readinessProbe.timeoutSeconds
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: worker.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: worker.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: worker.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: worker.resources.requests
      - description: If specified, the pod's tolerations.
        displayName: Tolerations
        path: worker.tolerations
      version: v1alpha1
    - description: CORSProxy is the Schema for the corsproxies API
      displayName: CORSProxy
      kind: CORSProxy
      name: corsproxies.saas.3scale.net
      specDescriptors:
      - description: Application specific configuration options for the component
        displayName: Config
        path: config
      - description: External Secret common configuration
        displayName: External Secret
        path: config.externalSecret
      - description: RefreshInterval is the amount of time before the values reading
          again from the SecretStore provider (duration)
        displayName: Refresh Interval
        path: config.externalSecret.refreshInterval
      - description: SecretStoreRef defines which SecretStore to use when fetching
          the secret data
        displayName: Secret Store Ref
        path: config.externalSecret.secretStoreRef
      - description: The Vault secret store reference kind
        displayName: Kind
        path: config.externalSecret.secretStoreRef.kind
      - description: The Vault secret store reference name
        displayName: Name
        path: config.externalSecret.secretStoreRef.name
      - description: System database connection string
        displayName: System Database DSN
        path: config.systemDatabaseDSN
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.systemDatabaseDSN.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.systemDatabaseDSN.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.systemDatabaseDSN.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.systemDatabaseDSN.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.systemDatabaseDSN.override
      - description: Configures the Grafana Dashboard for the component
        displayName: Grafana Dashboard
        path: grafanaDashboard
      - description: Label key used by grafana-operator for dashboard discovery
        displayName: Selector Key
        path: grafanaDashboard.selectorKey
      - description: Label value used by grafana-operator for dashboard discovery
        displayName: Selector Value
        path: grafanaDashboard.selectorValue
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: hpa
      - description: Upper limit for the number of replicas to which the autoscaler
          can scale up. It cannot be less that minReplicas.
        displayName: Max Replicas
        path: hpa.maxReplicas
      - description: Lower limit for the number of replicas to which the autoscaler
          can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if
          the alpha feature gate HPAScaleToZero is enabled and at least one Object
          or External metric is configured.  Scaling is active as long as at least
          one metric value is available.
        displayName: Min Replicas
        path: hpa.minReplicas
      - description: Target resource used to autoscale (cpu/memory)
        displayName: Resource Name
        path: hpa.resourceName
      - description: A percentage indicating the target resource consumption used
          to autoscale
        displayName: Resource Utilization
        path: hpa.resourceUtilization
      - description: Image specification for the component
        displayName: Image
        path: image
      - description: Docker repository of the image
        displayName: Name
        path: image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: image.tag
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: livenessProbe.timeoutSeconds
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: pdb.minAvailable
      - description: Describes how the services provided by this workload are exposed
          to its consumers
        displayName: Publishing Strategies
        path: publishingStrategies
      - description: Endpoints holds the list of publishing strategies for each workload
          endpoint.
        displayName: Endpoints
        path: publishingStrategies.endpoints
      - description: Create explicitely tells the controller that this is a new endpoint
          that should be added. Default is false, causing the controller to error
          when seeing an unknown endpoint.
        displayName: Create
        path: publishingStrategies.endpoints[0].create
      - description: Marin3rSidecar holds configuration for the Marin3rSidecar publishing
          strategy
        displayName: Marin3r Sidecar
        path: publishingStrategies.endpoints[0].marin3rSidecar
      - description: Envoy dynamic configuration. Populating this field causes the
          operator to create a Marin3r EnvoyConfig resource, so Marin3r must be installed
          in the cluster.
        displayName: Envoy Dynamic Config
        path: publishingStrategies.endpoints[0].marin3rSidecar.dynamicConfigs
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.proxyProtocol
      - description: The Envoy API version to use
        displayName: Envoy APIVersion
        path: publishingStrategies.endpoints[0].marin3rSidecar.envoyAPIVersion
      - description: The Envoy iamge to use
        displayName: Envoy Image
        path: publishingStrategies.endpoints[0].marin3rSidecar.envoyImage
      - description: Extra annotations to pass the Pod to further configure the sidecar
          container.
        displayName: Extra Pod Annotations
        path: publishingStrategies.endpoints[0].marin3rSidecar.extraPodAnnotations
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.proxyProtocol
      - description: The NodeID that identifies the Envoy sidecar to the DiscoveryService
        displayName: Node ID
        path: publishingStrategies.endpoints[0].marin3rSidecar.nodeID
      - description: The ports that the sidecar exposes
        displayName: Ports
        path: publishingStrategies.endpoints[0].marin3rSidecar.ports
      - description: Port name
        displayName: Name
        path: publishingStrategies.endpoints[0].marin3rSidecar.ports[0].name
      - description: Port value
        displayName: Port
        path: publishingStrategies.endpoints[0].marin3rSidecar.ports[0].port
      - description: Compute Resources required by the sidecar container.
        displayName: Resources
        path: publishingStrategies.endpoints[0].marin3rSidecar.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: publishingStrategies.endpoints[0].marin3rSidecar.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: publishingStrategies.endpoints[0].marin3rSidecar.resources.requests
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: publishingStrategies.endpoints[0].marin3rSidecar.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: publishingStrategies.endpoints[0].marin3rSidecar.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: publishingStrategies.endpoints[0].marin3rSidecar.serviceType
      - description: Extra containers to sync with the shutdown manager upon pod termination
        displayName: Shutdown Manager Extra Lifecycle Hooks
        path: publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrExtraLifecycleHooks
      - description: The port where Marin3r's shutdown manager listens
        displayName: Shutdown Manager Port
        path: publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrPort
      - description: EndpointName defines the endpoint affected by this publishing
          strategy
        displayName: Endpoint Name
        path: publishingStrategies.endpoints[0].name
      - description: Simple holds configuration for the Simple publishing strategy
        displayName: Simple
        path: publishingStrategies.endpoints[0].simple
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.proxyProtocol
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.proxyProtocol
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: publishingStrategies.endpoints[0].simple.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: publishingStrategies.endpoints[0].simple.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: publishingStrategies.endpoints[0].simple.serviceType
      - description: Strategy defines the type of publishing strategy
        displayName: Strategy
        path: publishingStrategies.endpoints[0].strategy
      - description: PublishingStrategiesReconcileMode specifies if the list of strategies
          should be merged with the defautls or replace them entirely. Allowed values
          are "Merge" or "Replace". "Replace" strategy should be used to enable 2
          strategies at the same time for a single endpoint.
        displayName: Mode
        path: publishingStrategies.mode
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: readinessProbe.timeoutSeconds
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: resources.requests
      version: v1alpha1
    - description: EchoAPI is the Schema for the echoapis API
      displayName: Echo API
      kind: EchoAPI
      name: echoapis.saas.3scale.net
      specDescriptors:
      - description: The external endpoint/s for the component DEPRECATED
        displayName: Endpoint
        path: endpoint
      - description: The list of dns records that will point to the component
        displayName: DNS
        path: endpoint.dns
      - description: Resource requirements for the component
        displayName: HPA
        path: hpa
      - description: Upper limit for the number of replicas to which the autoscaler
          can scale up. It cannot be less that minReplicas.
        displayName: Max Replicas
        path: hpa.maxReplicas
      - description: Lower limit for the number of replicas to which the autoscaler
          can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if
          the alpha feature gate HPAScaleToZero is enabled and at least one Object
          or External metric is configured.  Scaling is active as long as at least
          one metric value is available.
        displayName: Min Replicas
        path: hpa.minReplicas
      - description: Target resource used to autoscale (cpu/memory)
        displayName: Resource Name
        path: hpa.resourceName
      - description: A percentage indicating the target resource consumption used
          to autoscale
        displayName: Resource Utilization
        path: hpa.resourceUtilization
      - description: Image specification for the component
        displayName: Image
        path: image
      - description: Docker repository of the image
        displayName: Name
        path: image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: image.tag
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: livenessProbe.timeoutSeconds
      - description: Configures the AWS load balancer for the component DEPRECATED
        displayName: Load Balancer
        path: loadBalancer
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: loadBalancer.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: loadBalancer.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: loadBalancer.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: loadBalancer.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: loadBalancer.proxyProtocol
      - description: Marin3r configures the Marin3r sidecars for the component DEPRECATED
        displayName: Marin3r
        path: marin3r
      - description: Envoy dynamic configuration. Populating this field causes the
          operator to create a Marin3r EnvoyConfig resource, so Marin3r must be installed
          in the cluster.
        displayName: Envoy Dynamic Config
        path: marin3r.dynamicConfigs
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: marin3r.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: marin3r.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: marin3r.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: marin3r.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: marin3r.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: marin3r.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: marin3r.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: marin3r.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: marin3r.elasticLoadBalancerConfig.proxyProtocol
      - description: The Envoy API version to use
        displayName: Envoy APIVersion
        path: marin3r.envoyAPIVersion
      - description: The Envoy iamge to use
        displayName: Envoy Image
        path: marin3r.envoyImage
      - description: Extra annotations to pass the Pod to further configure the sidecar
          container.
        displayName: Extra Pod Annotations
        path: marin3r.extraPodAnnotations
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: marin3r.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: marin3r.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: marin3r.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: marin3r.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: marin3r.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: marin3r.networkLoadBalancerConfig.proxyProtocol
      - description: The NodeID that identifies the Envoy sidecar to the DiscoveryService
        displayName: Node ID
        path: marin3r.nodeID
      - description: The ports that the sidecar exposes
        displayName: Ports
        path: marin3r.ports
      - description: Port name
        displayName: Name
        path: marin3r.ports[0].name
      - description: Port value
        displayName: Port
        path: marin3r.ports[0].port
      - description: Compute Resources required by the sidecar container.
        displayName: Resources
        path: marin3r.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: marin3r.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: marin3r.resources.requests
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: marin3r.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: marin3r.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: marin3r.serviceType
      - description: Extra containers to sync with the shutdown manager upon pod termination
        displayName: Shutdown Manager Extra Lifecycle Hooks
        path: marin3r.shtdnmgrExtraLifecycleHooks
      - description: The port where Marin3r's shutdown manager listens
        displayName: Shutdown Manager Port
        path: marin3r.shtdnmgrPort
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: PDB
        path: pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: pdb.minAvailable
      - description: Describes how the services provided by this workload are exposed
          to its consumers
        displayName: Publishing Strategies
        path: publishingStrategies
      - description: Endpoints holds the list of publishing strategies for each workload
          endpoint.
        displayName: Endpoints
        path: publishingStrategies.endpoints
      - description: Create explicitely tells the controller that this is a new endpoint
          that should be added. Default is false, causing the controller to error
          when seeing an unknown endpoint.
        displayName: Create
        path: publishingStrategies.endpoints[0].create
      - description: Marin3rSidecar holds configuration for the Marin3rSidecar publishing
          strategy
        displayName: Marin3r Sidecar
        path: publishingStrategies.endpoints[0].marin3rSidecar
      - description: Envoy dynamic configuration. Populating this field causes the
          operator to create a Marin3r EnvoyConfig resource, so Marin3r must be installed
          in the cluster.
        displayName: Envoy Dynamic Config
        path: publishingStrategies.endpoints[0].marin3rSidecar.dynamicConfigs
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.proxyProtocol
      - description: The Envoy API version to use
        displayName: Envoy APIVersion
        path: publishingStrategies.endpoints[0].marin3rSidecar.envoyAPIVersion
      - description: The Envoy iamge to use
        displayName: Envoy Image
        path: publishingStrategies.endpoints[0].marin3rSidecar.envoyImage
      - description: Extra annotations to pass the Pod to further configure the sidecar
          container.
        displayName: Extra Pod Annotations
        path: publishingStrategies.endpoints[0].marin3rSidecar.extraPodAnnotations
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.proxyProtocol
      - description: The NodeID that identifies the Envoy sidecar to the DiscoveryService
        displayName: Node ID
        path: publishingStrategies.endpoints[0].marin3rSidecar.nodeID
      - description: The ports that the sidecar exposes
        displayName: Ports
        path: publishingStrategies.endpoints[0].marin3rSidecar.ports
      - description: Port name
        displayName: Name
        path: publishingStrategies.endpoints[0].marin3rSidecar.ports[0].name
      - description: Port value
        displayName: Port
        path: publishingStrategies.endpoints[0].marin3rSidecar.ports[0].port
      - description: Compute Resources required by the sidecar container.
        displayName: Resources
        path: publishingStrategies.endpoints[0].marin3rSidecar.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: publishingStrategies.endpoints[0].marin3rSidecar.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: publishingStrategies.endpoints[0].marin3rSidecar.resources.requests
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: publishingStrategies.endpoints[0].marin3rSidecar.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: publishingStrategies.endpoints[0].marin3rSidecar.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: publishingStrategies.endpoints[0].marin3rSidecar.serviceType
      - description: Extra containers to sync with the shutdown manager upon pod termination
        displayName: Shutdown Manager Extra Lifecycle Hooks
        path: publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrExtraLifecycleHooks
      - description: The port where Marin3r's shutdown manager listens
        displayName: Shutdown Manager Port
        path: publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrPort
      - description: EndpointName defines the endpoint affected by this publishing
          strategy
        displayName: Endpoint Name
        path: publishingStrategies.endpoints[0].name
      - description: Simple holds configuration for the Simple publishing strategy
        displayName: Simple
        path: publishingStrategies.endpoints[0].simple
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.proxyProtocol
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.proxyProtocol
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: publishingStrategies.endpoints[0].simple.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: publishingStrategies.endpoints[0].simple.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: publishingStrategies.endpoints[0].simple.serviceType
      - description: Strategy defines the type of publishing strategy
        displayName: Strategy
        path: publishingStrategies.endpoints[0].strategy
      - description: PublishingStrategiesReconcileMode specifies if the list of strategies
          should be merged with the defautls or replace them entirely. Allowed values
          are "Merge" or "Replace". "Replace" strategy should be used to enable 2
          strategies at the same time for a single endpoint.
        displayName: Mode
        path: publishingStrategies.mode
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: readinessProbe.timeoutSeconds
      - description: Configures the Grafana Dashboard for the component
        displayName: Replicas
        path: replicas
      - description: Horizontal Pod Autoscaler for the component
        displayName: Resources
        path: resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: resources.requests
      version: v1alpha1
    - description: MappingService is the Schema for the mappingservices API
      displayName: Mapping Service
      kind: MappingService
      name: mappingservices.saas.3scale.net
      specDescriptors:
      - description: Application specific configuration options for the component
        displayName: Config
        path: config
      - description: System endpoint to fetch proxy configs from
        displayName: APIHost
        path: config.apiHost
      - description: External Secret common configuration
        displayName: External Secret
        path: config.externalSecret
      - description: RefreshInterval is the amount of time before the values reading
          again from the SecretStore provider (duration)
        displayName: Refresh Interval
        path: config.externalSecret.refreshInterval
      - description: SecretStoreRef defines which SecretStore to use when fetching
          the secret data
        displayName: Secret Store Ref
        path: config.externalSecret.secretStoreRef
      - description: The Vault secret store reference kind
        displayName: Kind
        path: config.externalSecret.secretStoreRef.kind
      - description: The Vault secret store reference name
        displayName: Name
        path: config.externalSecret.secretStoreRef.name
      - description: Openresty log level
        displayName: Log Level
        path: config.logLevel
      - description: Base domain to replace the proxy configs base domain
        displayName: Preview Base Domain
        path: config.previewBaseDomain
      - description: A reference to the secret holding the system admin token
        displayName: System Admin Token
        path: config.systemAdminToken
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.systemAdminToken.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.systemAdminToken.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.systemAdminToken.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.systemAdminToken.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.systemAdminToken.override
      - description: Configures the Grafana Dashboard for the component
        displayName: Grafana Dashboard
        path: grafanaDashboard
      - description: Label key used by grafana-operator for dashboard discovery
        displayName: Selector Key
        path: grafanaDashboard.selectorKey
      - description: Label value used by grafana-operator for dashboard discovery
        displayName: Selector Value
        path: grafanaDashboard.selectorValue
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: hpa
      - description: Upper limit for the number of replicas to which the autoscaler
          can scale up. It cannot be less that minReplicas.
        displayName: Max Replicas
        path: hpa.maxReplicas
      - description: Lower limit for the number of replicas to which the autoscaler
          can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if
          the alpha feature gate HPAScaleToZero is enabled and at least one Object
          or External metric is configured.  Scaling is active as long as at least
          one metric value is available.
        displayName: Min Replicas
        path: hpa.minReplicas
      - description: Target resource used to autoscale (cpu/memory)
        displayName: Resource Name
        path: hpa.resourceName
      - description: A percentage indicating the target resource consumption used
          to autoscale
        displayName: Resource Utilization
        path: hpa.resourceUtilization
      - description: Image specification for the component
        displayName: Image
        path: image
      - description: Docker repository of the image
        displayName: Name
        path: image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: image.tag
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: livenessProbe.timeoutSeconds
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: pdb.minAvailable
      - description: Describes how the services provided by this workload are exposed
          to its consumers
        displayName: Publishing Strategies
        path: publishingStrategies
      - description: Endpoints holds the list of publishing strategies for each workload
          endpoint.
        displayName: Endpoints
        path: publishingStrategies.endpoints
      - description: Create explicitely tells the controller that this is a new endpoint
          that should be added. Default is false, causing the controller to error
          when seeing an unknown endpoint.
        displayName: Create
        path: publishingStrategies.endpoints[0].create
      - description: Marin3rSidecar holds configuration for the Marin3rSidecar publishing
          strategy
        displayName: Marin3r Sidecar
        path: publishingStrategies.endpoints[0].marin3rSidecar
      - description: Envoy dynamic configuration. Populating this field causes the
          operator to create a Marin3r EnvoyConfig resource, so Marin3r must be installed
          in the cluster.
        displayName: Envoy Dynamic Config
        path: publishingStrategies.endpoints[0].marin3rSidecar.dynamicConfigs
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.proxyProtocol
      - description: The Envoy API version to use
        displayName: Envoy APIVersion
        path: publishingStrategies.endpoints[0].marin3rSidecar.envoyAPIVersion
      - description: The Envoy iamge to use
        displayName: Envoy Image
        path: publishingStrategies.endpoints[0].marin3rSidecar.envoyImage
      - description: Extra annotations to pass the Pod to further configure the sidecar
          container.
        displayName: Extra Pod Annotations
        path: publishingStrategies.endpoints[0].marin3rSidecar.extraPodAnnotations
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.proxyProtocol
      - description: The NodeID that identifies the Envoy sidecar to the DiscoveryService
        displayName: Node ID
        path: publishingStrategies.endpoints[0].marin3rSidecar.nodeID
      - description: The ports that the sidecar exposes
        displayName: Ports
        path: publishingStrategies.endpoints[0].marin3rSidecar.ports
      - description: Port name
        displayName: Name
        path: publishingStrategies.endpoints[0].marin3rSidecar.ports[0].name
      - description: Port value
        displayName: Port
        path: publishingStrategies.endpoints[0].marin3rSidecar.ports[0].port
      - description: Compute Resources required by the sidecar container.
        displayName: Resources
        path: publishingStrategies.endpoints[0].marin3rSidecar.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: publishingStrategies.endpoints[0].marin3rSidecar.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: publishingStrategies.endpoints[0].marin3rSidecar.resources.requests
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: publishingStrategies.endpoints[0].marin3rSidecar.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: publishingStrategies.endpoints[0].marin3rSidecar.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: publishingStrategies.endpoints[0].marin3rSidecar.serviceType
      - description: Extra containers to sync with the shutdown manager upon pod termination
        displayName: Shutdown Manager Extra Lifecycle Hooks
        path: publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrExtraLifecycleHooks
      - description: The port where Marin3r's shutdown manager listens
        displayName: Shutdown Manager Port
        path: publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrPort
      - description: EndpointName defines the endpoint affected by this publishing
          strategy
        displayName: Endpoint Name
        path: publishingStrategies.endpoints[0].name
      - description: Simple holds configuration for the Simple publishing strategy
        displayName: Simple
        path: publishingStrategies.endpoints[0].simple
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.proxyProtocol
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.proxyProtocol
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: publishingStrategies.endpoints[0].simple.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: publishingStrategies.endpoints[0].simple.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: publishingStrategies.endpoints[0].simple.serviceType
      - description: Strategy defines the type of publishing strategy
        displayName: Strategy
        path: publishingStrategies.endpoints[0].strategy
      - description: PublishingStrategiesReconcileMode specifies if the list of strategies
          should be merged with the defautls or replace them entirely. Allowed values
          are "Merge" or "Replace". "Replace" strategy should be used to enable 2
          strategies at the same time for a single endpoint.
        displayName: Mode
        path: publishingStrategies.mode
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: readinessProbe.timeoutSeconds
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: resources.requests
      version: v1alpha1
    - description: RedisShard is the Schema for the redisshards API
      displayName: Redis Shard
      kind: RedisShard
      name: redisshards.saas.3scale.net
      specDescriptors:
      - description: Command overrides the redis container command
        displayName: Command
        path: command
      - description: Image specification for the component
        displayName: Image
        path: image
      - description: Docker repository of the image
        displayName: Name
        path: image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: image.tag
      - description: MasterIndex is the StatefulSet Pod index of the redis server
          with the master role. The other Pods are slaves of the master one.
        displayName: Master Index
        path: masterIndex
      - description: SlaveCount is the number of redis slaves
        displayName: Slave Count
        path: slaveCount
      statusDescriptors:
      - description: ShardNodes describes the nodes in the redis shard
        displayName: Shard Nodes
        path: shardNodes
      - description: Master is the node that acts as master role in the redis shard
        displayName: Master
        path: shardNodes.master
      - description: Slaves are the nodes that act as master role in the redis shard
        displayName: Slaves
        path: shardNodes.slaves
      version: v1alpha1
    - description: Sentinel is the Schema for the sentinels API
      displayName: Sentinel
      kind: Sentinel
      name: sentinels.saas.3scale.net
      specDescriptors:
      - description: ClusterTopology indicates the redis servers that form part of
          each shard monitored by sentinel
        displayName: Cluster Topology
        path: config.clusterTopology
      - description: MetricsRefreshInterval determines the refresh interval for gahtering
          metrics from sentinel
        displayName: Metrics Refresh Interval
        path: config.metricsRefreshInterval
      - description: Monitored shards indicates the redis servers that form part of
          each shard monitored by sentinel
        displayName: Monitored Shards
        path: config.monitoredShards
      - description: StorageClass is the storage class to be used for the persistent
          sentinel config file where the shards state is stored
        displayName: Storage Class
        path: config.storageClass
      - description: StorageSize is the storage size to  provision for the persistent
          sentinel config file where the shards state is stored
        displayName: Storage Size
        path: config.storageSize
      - description: Configures the Grafana Dashboard for the component
        displayName: Grafana Dashboard
        path: grafanaDashboard
      - description: Label key used by grafana-operator for dashboard discovery
        displayName: Selector Key
        path: grafanaDashboard.selectorKey
      - description: Label value used by grafana-operator for dashboard discovery
        displayName: Selector Value
        path: grafanaDashboard.selectorValue
      - description: Image specification for the component
        displayName: Image
        path: image
      - description: Docker repository of the image
        displayName: Name
        path: image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: image.tag
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: livenessProbe.timeoutSeconds
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: pdb.minAvailable
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: readinessProbe.timeoutSeconds
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: resources.requests
      statusDescriptors:
      - description: MonitoredShards is the list of shards that the Sentinel resource
          is currently monitoring
        displayName: Monitored Shards
        path: monitoredShards
      - description: Addresses of the sentinel instances currently running
        displayName: Sentinels
        path: sentinels
      version: v1alpha1
    - description: ShardedRedisBackup is the Schema for the shardedredisbackups API
      displayName: Sharded Redis Backup
      kind: ShardedRedisBackup
      name: shardedredisbackups.saas.3scale.net
      specDescriptors:
      - description: Name of the dbfile in the redis instances
        displayName: DBFile
        path: dbFile
      - description: Max number of backup history to keep
        displayName: History Limit
        path: historyLimit
      - description: If true, backup execution is stopped
        displayName: Pause
        path: pause
      - description: How frequently redis is polled for the BGSave status
        displayName: Poll Interval
        path: pollInterval
      - description: S3 storage options
        displayName: S3 Options
        path: s3Options
      - description: S3 bucket name
        displayName: Bucket
        path: s3Options.bucket
      - description: 'Reference to a Secret tha contains credentials to access S3
          API. The credentials must have the following permissions: s3:GetObject,
          s3:PutObject, and s3:ListBucket, s3:ListObjects, s3:PutObjectTagging.'
        displayName: Credentials Secret Ref
        path: s3Options.credentialsSecretRef
      - description: S3 path where backups should be uploaded
        displayName: Path
        path: s3Options.path
      - description: AWS region
        displayName: Region
        path: s3Options.region
      - description: Optionally use a custom s3 service endpoint. Useful for testing
          with Minio.
        displayName: Service Endpoint
        path: s3Options.serviceEndpoint
      - description: Cron-like schedule specification
        displayName: Schedule
        path: schedule
      - description: Reference to a sentinel instance
        displayName: Sentinel Ref
        path: sentinelRef
      - description: SSH connection options
        displayName: SSHOptions
        path: sshOptions
      - description: SSH port (default is 22)
        displayName: Port
        path: sshOptions.port
      - description: Reference to a Secret that contains the SSH private key
        displayName: Private Key Secret Ref
        path: sshOptions.privateKeySecretRef
      - description: Use sudo to execute commands agains the remote host
        displayName: Sudo
        path: sshOptions.sudo
      - description: SSH user
        displayName: User
        path: sshOptions.user
      - description: Max allowed time for a backup to complete
        displayName: Timeout
        path: timeout
      version: v1alpha1
    - description: System is the Schema for the systems API
      displayName: System
      kind: System
      name: systems.saas.3scale.net
      specDescriptors:
      - description: Application specific configuration options
        displayName: App
        path: app
      - description: Canary defines spec changes for the canary Deployment. If left
          unset the canary Deployment wil not be created.
        displayName: Canary
        path: app.canary
      - description: ImageName to use for the canary Deployment
        displayName: Image Name
        path: app.canary.imageName
      - description: ImageTag to use for the canary Deployment
        displayName: Image Tag
        path: app.canary.imageTag
      - description: Patches to apply for the canary Deployment. Patches are expected
          to be JSON documents as an RFC 6902 patches.
        displayName: Patches
        path: app.canary.patches
      - description: Number of replicas for the canary Deployment
        displayName: Replicas
        path: app.canary.replicas
      - description: SendTraffic controls if traffic is sent to the canary
        displayName: Send Traffic
        path: app.canary.sendTraffic
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: app.hpa
      - description: Upper limit for the number of replicas to which the autoscaler
          can scale up. It cannot be less that minReplicas.
        displayName: Max Replicas
        path: app.hpa.maxReplicas
      - description: Lower limit for the number of replicas to which the autoscaler
          can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if
          the alpha feature gate HPAScaleToZero is enabled and at least one Object
          or External metric is configured.  Scaling is active as long as at least
          one metric value is available.
        displayName: Min Replicas
        path: app.hpa.minReplicas
      - description: Target resource used to autoscale (cpu/memory)
        displayName: Resource Name
        path: app.hpa.resourceName
      - description: A percentage indicating the target resource consumption used
          to autoscale
        displayName: Resource Utilization
        path: app.hpa.resourceUtilization
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: app.livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: app.livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: app.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: app.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: app.livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: app.livenessProbe.timeoutSeconds
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: app.pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: app.pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: app.pdb.minAvailable
      - description: Describes how the services provided by this workload are exposed
          to its consumers
        displayName: Publishing Strategies
        path: app.publishingStrategies
      - description: Endpoints holds the list of publishing strategies for each workload
          endpoint.
        displayName: Endpoints
        path: app.publishingStrategies.endpoints
      - description: Create explicitely tells the controller that this is a new endpoint
          that should be added. Default is false, causing the controller to error
          when seeing an unknown endpoint.
        displayName: Create
        path: app.publishingStrategies.endpoints[0].create
      - description: Marin3rSidecar holds configuration for the Marin3rSidecar publishing
          strategy
        displayName: Marin3r Sidecar
        path: app.publishingStrategies.endpoints[0].marin3rSidecar
      - description: Envoy dynamic configuration. Populating this field causes the
          operator to create a Marin3r EnvoyConfig resource, so Marin3r must be installed
          in the cluster.
        displayName: Envoy Dynamic Config
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.dynamicConfigs
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.proxyProtocol
      - description: The Envoy API version to use
        displayName: Envoy APIVersion
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.envoyAPIVersion
      - description: The Envoy iamge to use
        displayName: Envoy Image
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.envoyImage
      - description: Extra annotations to pass the Pod to further configure the sidecar
          container.
        displayName: Extra Pod Annotations
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.extraPodAnnotations
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.proxyProtocol
      - description: The NodeID that identifies the Envoy sidecar to the DiscoveryService
        displayName: Node ID
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.nodeID
      - description: The ports that the sidecar exposes
        displayName: Ports
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.ports
      - description: Port name
        displayName: Name
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.ports[0].name
      - description: Port value
        displayName: Port
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.ports[0].port
      - description: Compute Resources required by the sidecar container.
        displayName: Resources
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.resources.requests
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.serviceType
      - description: Extra containers to sync with the shutdown manager upon pod termination
        displayName: Shutdown Manager Extra Lifecycle Hooks
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrExtraLifecycleHooks
      - description: The port where Marin3r's shutdown manager listens
        displayName: Shutdown Manager Port
        path: app.publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrPort
      - description: EndpointName defines the endpoint affected by this publishing
          strategy
        displayName: Endpoint Name
        path: app.publishingStrategies.endpoints[0].name
      - description: Simple holds configuration for the Simple publishing strategy
        displayName: Simple
        path: app.publishingStrategies.endpoints[0].simple
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: app.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: app.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: app.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: app.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: app.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: app.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: app.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: app.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: app.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.proxyProtocol
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: app.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: app.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: app.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: app.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: app.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: app.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.proxyProtocol
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: app.publishingStrategies.endpoints[0].simple.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: app.publishingStrategies.endpoints[0].simple.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: app.publishingStrategies.endpoints[0].simple.serviceType
      - description: Strategy defines the type of publishing strategy
        displayName: Strategy
        path: app.publishingStrategies.endpoints[0].strategy
      - description: PublishingStrategiesReconcileMode specifies if the list of strategies
          should be merged with the defautls or replace them entirely. Allowed values
          are "Merge" or "Replace". "Replace" strategy should be used to enable 2
          strategies at the same time for a single endpoint.
        displayName: Mode
        path: app.publishingStrategies.mode
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: app.readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: app.readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: app.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: app.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: app.readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: app.readinessProbe.timeoutSeconds
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: app.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: app.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: app.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: app.resources.requests
      - description: Configures the TerminationGracePeriodSeconds
        displayName: Termination Grace Period Seconds
        path: app.terminationGracePeriodSeconds
      - description: Application specific configuration options for System components
        displayName: Config
        path: config
      - description: AccessCode to protect admin urls
        displayName: Access Code
        path: config.accessCode
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.accessCode.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.accessCode.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.accessCode.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.accessCode.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.accessCode.override
      - description: Apicast can be used to pass down apicast endpoints configuration
        displayName: Apicast
        path: config.apicast
      - description: Assets has configuration to access assets in AWS s3
        displayName: Assets
        path: config.assets
      - description: AWS access key
        displayName: Access Key
        path: config.assets.accessKey
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.assets.accessKey.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.assets.accessKey.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.assets.accessKey.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.assets.accessKey.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.assets.accessKey.override
      - description: AWS S3 bucket name
        displayName: Bucket
        path: config.assets.bucket
      - description: Assets host (CDN)
        displayName: Host
        path: config.assets.host
      - description: AWS S3 region
        displayName: Region
        path: config.assets.region
      - description: Assets custom S3 endpoint
        displayName: S3 Endpoint
        path: config.assets.s3Endpoint
      - description: AWS secret access key
        displayName: Secret Key
        path: config.assets.secretKey
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.assets.secretKey.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.assets.secretKey.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.assets.secretKey.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.assets.secretKey.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.assets.secretKey.override
      - description: Backend has configuration options for system to contact backend
        displayName: Backend
        path: config.backend
      - description: External endpoint
        displayName: External Endpoint
        path: config.backend.externalEndpoint
      - description: Internal API password
        displayName: Internal APIPassword
        path: config.backend.internalAPIPassword
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.backend.internalAPIPassword.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.backend.internalAPIPassword.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.backend.internalAPIPassword.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.backend.internalAPIPassword.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.backend.internalAPIPassword.override
      - description: Internal API user
        displayName: Internal APIUser
        path: config.backend.internalAPIUser
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.backend.internalAPIUser.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.backend.internalAPIUser.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.backend.internalAPIUser.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.backend.internalAPIUser.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.backend.internalAPIUser.override
      - description: Internal endpoint
        displayName: Internal Endpoint
        path: config.backend.internalEndpoint
      - description: Redis data source name
        displayName: Redis DSN
        path: config.backend.redisDSN
      - description: Options for configuring Bugsnag integration
        displayName: Bugsnag
        path: config.bugsnag
      - description: API key
        displayName: APIKey
        path: config.bugsnag.apiKey
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.bugsnag.apiKey.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.bugsnag.apiKey.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.bugsnag.apiKey.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.bugsnag.apiKey.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.bugsnag.apiKey.override
      - description: Release Stage to identify environment
        displayName: Release Stage
        path: config.bugsnag.releaseStage
      - description: Secret containging system configuration files to be mounted in
          the pods
        displayName: Config Files Secret
        path: config.configFilesSecret
      - description: DSN of system's main database
        displayName: Database DSN
        path: config.databaseDSN
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.databaseDSN.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.databaseDSN.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.databaseDSN.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.databaseDSN.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.databaseDSN.override
      - description: DatabaseSecret is a site key stored off-database for improved
          more secure password hashing See https://github.com/3scale/porta/blob/ae498814cef3d856613f60d29330882fa870271d/config/initializers/site_keys.rb#L2-L19
        displayName: Database Secret
        path: config.databaseSecret
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.databaseSecret.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.databaseSecret.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.databaseSecret.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.databaseSecret.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.databaseSecret.override
      - description: EventsSharedSecret is a password that protects System's event
          hooks endpoint.
        displayName: Events Shared Secret
        path: config.eventsSharedSecret
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.eventsSharedSecret.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.eventsSharedSecret.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.eventsSharedSecret.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.eventsSharedSecret.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.eventsSharedSecret.override
      - description: External Secret common configuration
        displayName: External Secret
        path: config.externalSecret
      - description: RefreshInterval is the amount of time before the values reading
          again from the SecretStore provider (duration)
        displayName: Refresh Interval
        path: config.externalSecret.refreshInterval
      - description: SecretStoreRef defines which SecretStore to use when fetching
          the secret data
        displayName: Secret Store Ref
        path: config.externalSecret.secretStoreRef
      - description: The Vault secret store reference kind
        displayName: Kind
        path: config.externalSecret.secretStoreRef.kind
      - description: The Vault secret store reference name
        displayName: Name
        path: config.externalSecret.secretStoreRef.name
      - description: Enable (true) or disable (false) enforcing SSL
        displayName: Force SSL
        path: config.forceSSL
      - description: Options for Github integration
        displayName: Github
        path: config.github
      - description: Client ID
        displayName: Client ID
        path: config.github.clientID
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.github.clientID.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.github.clientID.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.github.clientID.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.github.clientID.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.github.clientID.override
      - description: Client secret
        displayName: Client Secret
        path: config.github.clientSecret
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.github.clientSecret.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.github.clientSecret.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.github.clientSecret.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.github.clientSecret.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.github.clientSecret.override
      - description: Mapping Service access token
        displayName: Mapping Service Access Token
        path: config.mappingServiceAccessToken
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.mappingServiceAccessToken.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.mappingServiceAccessToken.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.mappingServiceAccessToken.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.mappingServiceAccessToken.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.mappingServiceAccessToken.override
      - description: Memcached servers
        displayName: Memcached Servers
        path: config.memcachedServers
      - description: Rails configuration options for system components
        displayName: Rails
        path: config.rails
      - description: Rails Console
        displayName: Console
        path: config.rails.console
      - description: Rails environment
        displayName: Environment
        path: config.rails.environment
      - description: Rails log level (debug, info, warn, error, fatal or unknown)
        displayName: Log Level
        path: config.rails.logLevel
      - description: Holds recaptcha configuration options
        displayName: Recaptcha
        path: config.recaptcha
      - description: Private key
        displayName: Private Key
        path: config.recaptcha.privateKey
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.recaptcha.privateKey.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.recaptcha.privateKey.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.recaptcha.privateKey.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.recaptcha.privateKey.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.recaptcha.privateKey.override
      - description: Public key
        displayName: Public Key
        path: config.recaptcha.publicKey
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.recaptcha.publicKey.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.recaptcha.publicKey.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.recaptcha.publicKey.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.recaptcha.publicKey.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.recaptcha.publicKey.override
      - description: Options for configuring RH Customer Portal integration
        displayName: Red Hat Customer Portal
        path: config.redhatCustomerPortal
      - description: Client ID
        displayName: Client ID
        path: config.redhatCustomerPortal.clientID
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.redhatCustomerPortal.clientID.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.redhatCustomerPortal.clientID.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.redhatCustomerPortal.clientID.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.redhatCustomerPortal.clientID.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.redhatCustomerPortal.clientID.override
      - description: Client secret
        displayName: Client Secret
        path: config.redhatCustomerPortal.clientSecret
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.redhatCustomerPortal.clientSecret.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.redhatCustomerPortal.clientSecret.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.redhatCustomerPortal.clientSecret.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.redhatCustomerPortal.clientSecret.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.redhatCustomerPortal.clientSecret.override
      - description: Realm
        displayName: Realm
        path: config.redhatCustomerPortal.realm
      - description: Redis configuration options
        displayName: Redis
        path: config.redis
      - description: Data source name
        displayName: Queues DSN
        path: config.redis.queuesDSN
      - description: OpenSSL verification mode for sandbox proxy
        displayName: Sandbox Proxy Openssl Verify Mode
        path: config.sandboxProxyOpensslVerifyMode
      - description: Search service options
        displayName: Search Server
        path: config.searchServer
      - description: Defines the batch size
        displayName: Batch Size
        path: config.searchServer.batchSize
      - description: Defines the address host
        displayName: Host
        path: config.searchServer.host
      - description: Defines the address port
        displayName: Port
        path: config.searchServer.port
      - description: 'SecretKeyBase: https://api.rubyonrails.org/classes/Rails/Application.html#method-i-secret_key_base
          You can generate one random key using ''bundle exec rake secret'''
        displayName: Secret Key Base
        path: config.secretKeyBase
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.secretKeyBase.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.secretKeyBase.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.secretKeyBase.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.secretKeyBase.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.secretKeyBase.override
      - description: Options for Segment integration
        displayName: Segment
        path: config.segment
      - description: Deletion token
        displayName: Deletion Token
        path: config.segment.deletionToken
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.segment.deletionToken.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.segment.deletionToken.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.segment.deletionToken.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.segment.deletionToken.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.segment.deletionToken.override
      - description: Deletion workspace
        displayName: Deletion Workspace
        path: config.segment.deletionWorkspace
      - description: Write key
        displayName: Write Key
        path: config.segment.writeKey
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.segment.writeKey.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.segment.writeKey.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.segment.writeKey.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.segment.writeKey.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.segment.writeKey.override
      - description: SMTP configuration options
        displayName: SMTP
        path: config.smtp
      - description: Address
        displayName: Address
        path: config.smtp.address
      - description: Authentication protocol
        displayName: Auth Protocol
        path: config.smtp.authProtocol
      - description: OpenSSL verify mode
        displayName: Open SSLVerify Mode
        path: config.smtp.opensslVerifyMode
      - description: Password
        displayName: Password
        path: config.smtp.password
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.smtp.password.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.smtp.password.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.smtp.password.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.smtp.password.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.smtp.password.override
      - description: Port
        displayName: Port
        path: config.smtp.port
      - description: Enable/disable STARTTLS
        displayName: STARTTLS
        path: config.smtp.starttls
      - description: Enable/disable auto STARTTLS
        displayName: STARTTLSAuto
        path: config.smtp.starttlsAuto
      - description: User
        displayName: User
        path: config.smtp.user
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.smtp.user.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.smtp.user.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.smtp.user.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.smtp.user.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.smtp.user.override
      - description: SSL certificates path
        displayName: SSLCerts Dir
        path: config.sslCertsDir
      - description: 3scale provider plan
        displayName: Threescale Provider Plan
        path: config.threescaleProviderPlan
      - description: 3scale superdomain
        displayName: Threescale Superdomain
        path: config.threescaleSuperdomain
      - description: Zync has configuration options for system to contact zync
        displayName: Zync
        path: config.zync
      - description: Zync authentication token
        displayName: Auth Token
        path: config.zync.authToken
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.zync.authToken.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.zync.authToken.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.zync.authToken.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.zync.authToken.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.zync.authToken.override
      - description: Zync endpoint
        displayName: Endpoint
        path: config.zync.endpoint
      - description: Console specific configuration options
        displayName: Console
        path: console
      - description: Image specification for the Console component. Defaults to system
          image if not defined.
        displayName: Image
        path: console.image
      - description: Docker repository of the image
        displayName: Name
        path: console.image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: console.image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: console.image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: console.image.tag
      - description: Resource requirements for the component
        displayName: Resources
        path: console.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: console.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: console.resources.requests
      - description: Configures the Grafana Dashboard for the component
        displayName: Grafana Dashboard
        path: grafanaDashboard
      - description: Label key used by grafana-operator for dashboard discovery
        displayName: Selector Key
        path: grafanaDashboard.selectorKey
      - description: Label value used by grafana-operator for dashboard discovery
        displayName: Selector Value
        path: grafanaDashboard.selectorValue
      - description: Image specification for the component
        displayName: Image
        path: image
      - description: Docker repository of the image
        displayName: Name
        path: image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: image.tag
      - description: Searchd specific configuration options
        displayName: Searchd
        path: searchd
      - description: Configuration options for System's Searchd
        displayName: Config
        path: searchd.config
      - description: Searchd database path
        displayName: Database Path
        path: searchd.config.databasePath
      - description: Searchd database storage type
        displayName: Database Storage Class
        path: searchd.config.databaseStorageClass
      - description: Searchd database storage size
        displayName: Database Storage Size
        path: searchd.config.databaseStorageSize
      - description: The TCP port Searchd will run its daemon on
        displayName: Port
        path: searchd.config.port
      - description: Allows setting the service name for Searchd
        displayName: Service Name
        path: searchd.config.serviceName
      - description: Deploy searchd instance
        displayName: Enabled
        path: searchd.enabled
      - description: Image specification for the Searchd component. Defaults to system
          image if not defined.
        displayName: Image
        path: searchd.image
      - description: Docker repository of the image
        displayName: Name
        path: searchd.image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: searchd.image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: searchd.image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: searchd.image.tag
      - description: Liveness probe for the Searchd component
        displayName: Liveness Probe
        path: searchd.livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: searchd.livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: searchd.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: searchd.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: searchd.livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: searchd.livenessProbe.timeoutSeconds
      - description: Readiness probe for the Searchd component
        displayName: Readiness Probe
        path: searchd.readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: searchd.readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: searchd.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: searchd.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: searchd.readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: searchd.readinessProbe.timeoutSeconds
      - description: Resource requirements for the Searchd component
        displayName: Resources
        path: searchd.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: searchd.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: searchd.resources.requests
      - description: Configures the TerminationGracePeriodSeconds for Searchd
        displayName: Termination Grace Period Seconds
        path: searchd.terminationGracePeriodSeconds
      - description: Sidekiq Billing specific configuration options
        displayName: Sidekiq Billing
        path: sidekiqBilling
      - description: Canary defines spec changes for the canary Deployment. If left
          unset the canary Deployment wil not be created.
        displayName: Canary
        path: sidekiqBilling.canary
      - description: ImageName to use for the canary Deployment
        displayName: Image Name
        path: sidekiqBilling.canary.imageName
      - description: ImageTag to use for the canary Deployment
        displayName: Image Tag
        path: sidekiqBilling.canary.imageTag
      - description: Patches to apply for the canary Deployment. Patches are expected
          to be JSON documents as an RFC 6902 patches.
        displayName: Patches
        path: sidekiqBilling.canary.patches
      - description: Number of replicas for the canary Deployment
        displayName: Replicas
        path: sidekiqBilling.canary.replicas
      - description: SendTraffic controls if traffic is sent to the canary
        displayName: Send Traffic
        path: sidekiqBilling.canary.sendTraffic
      - description: Sidekiq specific configuration options for the component element
        displayName: Config
        path: sidekiqBilling.config
      - description: Number of rails max threads per sidekiq pod
        displayName: Max Threads
        path: sidekiqBilling.config.maxThreads
      - description: 'List of queues to be consumed by sidekiq. Format: queue[,Priority]'
        displayName: Queues
        path: sidekiqBilling.config.queues
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: sidekiqBilling.hpa
      - description: Upper limit for the number of replicas to which the autoscaler
          can scale up. It cannot be less that minReplicas.
        displayName: Max Replicas
        path: sidekiqBilling.hpa.maxReplicas
      - description: Lower limit for the number of replicas to which the autoscaler
          can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if
          the alpha feature gate HPAScaleToZero is enabled and at least one Object
          or External metric is configured.  Scaling is active as long as at least
          one metric value is available.
        displayName: Min Replicas
        path: sidekiqBilling.hpa.minReplicas
      - description: Target resource used to autoscale (cpu/memory)
        displayName: Resource Name
        path: sidekiqBilling.hpa.resourceName
      - description: A percentage indicating the target resource consumption used
          to autoscale
        displayName: Resource Utilization
        path: sidekiqBilling.hpa.resourceUtilization
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: sidekiqBilling.livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: sidekiqBilling.livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: sidekiqBilling.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: sidekiqBilling.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: sidekiqBilling.livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: sidekiqBilling.livenessProbe.timeoutSeconds
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: sidekiqBilling.pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: sidekiqBilling.pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: sidekiqBilling.pdb.minAvailable
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: sidekiqBilling.readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: sidekiqBilling.readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: sidekiqBilling.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: sidekiqBilling.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: sidekiqBilling.readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: sidekiqBilling.readinessProbe.timeoutSeconds
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: sidekiqBilling.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: sidekiqBilling.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: sidekiqBilling.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: sidekiqBilling.resources.requests
      - description: Configures the TerminationGracePeriodSeconds
        displayName: Termination Grace Period Seconds
        path: sidekiqBilling.terminationGracePeriodSeconds
      - description: Sidekiq Default specific configuration options
        displayName: Sidekiq Default
        path: sidekiqDefault
      - description: Canary defines spec changes for the canary Deployment. If left
          unset the canary Deployment wil not be created.
        displayName: Canary
        path: sidekiqDefault.canary
      - description: ImageName to use for the canary Deployment
        displayName: Image Name
        path: sidekiqDefault.canary.imageName
      - description: ImageTag to use for the canary Deployment
        displayName: Image Tag
        path: sidekiqDefault.canary.imageTag
      - description: Patches to apply for the canary Deployment. Patches are expected
          to be JSON documents as an RFC 6902 patches.
        displayName: Patches
        path: sidekiqDefault.canary.patches
      - description: Number of replicas for the canary Deployment
        displayName: Replicas
        path: sidekiqDefault.canary.replicas
      - description: SendTraffic controls if traffic is sent to the canary
        displayName: Send Traffic
        path: sidekiqDefault.canary.sendTraffic
      - description: Sidekiq specific configuration options for the component element
        displayName: Config
        path: sidekiqDefault.config
      - description: Number of rails max threads per sidekiq pod
        displayName: Max Threads
        path: sidekiqDefault.config.maxThreads
      - description: 'List of queues to be consumed by sidekiq. Format: queue[,Priority]'
        displayName: Queues
        path: sidekiqDefault.config.queues
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: sidekiqDefault.hpa
      - description: Upper limit for the number of replicas to which the autoscaler
          can scale up. It cannot be less that minReplicas.
        displayName: Max Replicas
        path: sidekiqDefault.hpa.maxReplicas
      - description: Lower limit for the number of replicas to which the autoscaler
          can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if
          the alpha feature gate HPAScaleToZero is enabled and at least one Object
          or External metric is configured.  Scaling is active as long as at least
          one metric value is available.
        displayName: Min Replicas
        path: sidekiqDefault.hpa.minReplicas
      - description: Target resource used to autoscale (cpu/memory)
        displayName: Resource Name
        path: sidekiqDefault.hpa.resourceName
      - description: A percentage indicating the target resource consumption used
          to autoscale
        displayName: Resource Utilization
        path: sidekiqDefault.hpa.resourceUtilization
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: sidekiqDefault.livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: sidekiqDefault.livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: sidekiqDefault.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: sidekiqDefault.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: sidekiqDefault.livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: sidekiqDefault.livenessProbe.timeoutSeconds
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: sidekiqDefault.pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: sidekiqDefault.pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: sidekiqDefault.pdb.minAvailable
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: sidekiqDefault.readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: sidekiqDefault.readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: sidekiqDefault.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: sidekiqDefault.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: sidekiqDefault.readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: sidekiqDefault.readinessProbe.timeoutSeconds
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: sidekiqDefault.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: sidekiqDefault.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: sidekiqDefault.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: sidekiqDefault.resources.requests
      - description: Configures the TerminationGracePeriodSeconds
        displayName: Termination Grace Period Seconds
        path: sidekiqDefault.terminationGracePeriodSeconds
      - description: Sidekiq Low specific configuration options
        displayName: Sidekiq Low
        path: sidekiqLow
      - description: Canary defines spec changes for the canary Deployment. If left
          unset the canary Deployment wil not be created.
        displayName: Canary
        path: sidekiqLow.canary
      - description: ImageName to use for the canary Deployment
        displayName: Image Name
        path: sidekiqLow.canary.imageName
      - description: ImageTag to use for the canary Deployment
        displayName: Image Tag
        path: sidekiqLow.canary.imageTag
      - description: Patches to apply for the canary Deployment. Patches are expected
          to be JSON documents as an RFC 6902 patches.
        displayName: Patches
        path: sidekiqLow.canary.patches
      - description: Number of replicas for the canary Deployment
        displayName: Replicas
        path: sidekiqLow.canary.replicas
      - description: SendTraffic controls if traffic is sent to the canary
        displayName: Send Traffic
        path: sidekiqLow.canary.sendTraffic
      - description: Sidekiq specific configuration options for the component element
        displayName: Config
        path: sidekiqLow.config
      - description: Number of rails max threads per sidekiq pod
        displayName: Max Threads
        path: sidekiqLow.config.maxThreads
      - description: 'List of queues to be consumed by sidekiq. Format: queue[,Priority]'
        displayName: Queues
        path: sidekiqLow.config.queues
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: sidekiqLow.hpa
      - description: Upper limit for the number of replicas to which the autoscaler
          can scale up. It cannot be less that minReplicas.
        displayName: Max Replicas
        path: sidekiqLow.hpa.maxReplicas
      - description: Lower limit for the number of replicas to which the autoscaler
          can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if
          the alpha feature gate HPAScaleToZero is enabled and at least one Object
          or External metric is configured.  Scaling is active as long as at least
          one metric value is available.
        displayName: Min Replicas
        path: sidekiqLow.hpa.minReplicas
      - description: Target resource used to autoscale (cpu/memory)
        displayName: Resource Name
        path: sidekiqLow.hpa.resourceName
      - description: A percentage indicating the target resource consumption used
          to autoscale
        displayName: Resource Utilization
        path: sidekiqLow.hpa.resourceUtilization
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: sidekiqLow.livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: sidekiqLow.livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: sidekiqLow.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: sidekiqLow.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: sidekiqLow.livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: sidekiqLow.livenessProbe.timeoutSeconds
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: sidekiqLow.pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: sidekiqLow.pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: sidekiqLow.pdb.minAvailable
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: sidekiqLow.readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: sidekiqLow.readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: sidekiqLow.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: sidekiqLow.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: sidekiqLow.readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: sidekiqLow.readinessProbe.timeoutSeconds
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: sidekiqLow.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: sidekiqLow.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: sidekiqLow.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: sidekiqLow.resources.requests
      - description: Configures the TerminationGracePeriodSeconds
        displayName: Termination Grace Period Seconds
        path: sidekiqLow.terminationGracePeriodSeconds
      - description: Configures the Tekton Tasks for the component
        displayName: Tasks
        path: tasks
      - description: System Tekton Task specific configuration options for the component
          element
        displayName: Config
        path: tasks[0].config
      - description: List of args to be consumed by the task.
        displayName: Args
        path: tasks[0].config.args
      - description: List of commands to be consumed by the task.
        displayName: Command
        path: tasks[0].config.command
      - description: List of extra evironment variables to be consumed by the task.
        displayName: Extra Env
        path: tasks[0].config.extraEnv
      - description: Image specification for the Console component. Defaults to system
          image if not defined.
        displayName: Image
        path: tasks[0].config.image
      - description: Docker repository of the image
        displayName: Name
        path: tasks[0].config.image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: tasks[0].config.image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: tasks[0].config.image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: tasks[0].config.image.tag
      - description: Timeout for the Tekton task
        displayName: Timeout
        path: tasks[0].config.timeout
      - description: Description for the Tekton task and pipeline
        displayName: Description
        path: tasks[0].description
      - description: Deploy task instance
        displayName: Enabled
        path: tasks[0].enabled
      - description: Name for the Tekton task and pipeline
        displayName: Name
        path: tasks[0].name
      - description: Pod Disruption Budget for the component
        displayName: Resources
        path: tasks[0].resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: tasks[0].resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: tasks[0].resources.requests
      - description: Configures the TerminationGracePeriodSeconds
        displayName: Termination Grace Period Seconds
        path: tasks[0].terminationGracePeriodSeconds
      - description: Configures twemproxy
        displayName: Twemproxy
        path: twemproxy
      - description: Image specification for the component
        displayName: Image
        path: twemproxy.image
      - description: Docker repository of the image
        displayName: Name
        path: twemproxy.image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: twemproxy.image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: twemproxy.image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: twemproxy.image.tag
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: twemproxy.livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: twemproxy.livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: twemproxy.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: twemproxy.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: twemproxy.livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: twemproxy.livenessProbe.timeoutSeconds
      - description: Options
        displayName: Options
        path: twemproxy.options
      - description: 'Set logging level to N. (default: 5, min: 0, max: 11)'
        displayName: Log Level
        path: twemproxy.options.logLevel
      - description: 'Set stats monitoring port to port.  (default: 22222)'
        displayName: Metrics Port
        path: twemproxy.options.metricsAddress
      - description: 'Set stats aggregation interval in msec to interval.  (default:
          30s)'
        displayName: Stats Interval
        path: twemproxy.options.statsInterval
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: twemproxy.readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: twemproxy.readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: twemproxy.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: twemproxy.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: twemproxy.readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: twemproxy.readinessProbe.timeoutSeconds
      - description: Resource requirements for the component
        displayName: Resources
        path: twemproxy.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: twemproxy.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: twemproxy.resources.requests
      - description: TwemproxyConfigRef is a reference to a TwemproxyConfig resource
          in the same Namespace
        displayName: Twemproxy Config Ref
        path: twemproxy.twemproxyConfigRef
      version: v1alpha1
    - description: TwemproxyConfig is the Schema for the twemproxyconfigs API
      displayName: Twemproxy Config
      kind: TwemproxyConfig
      name: twemproxyconfigs.saas.3scale.net
      specDescriptors:
      - description: Configures the Grafana Dashboard for the component
        displayName: Grafana Dashboard
        path: grafanaDashboard
      - description: Label key used by grafana-operator for dashboard discovery
        displayName: Selector Key
        path: grafanaDashboard.selectorKey
      - description: Label value used by grafana-operator for dashboard discovery
        displayName: Selector Value
        path: grafanaDashboard.selectorValue
      - description: 'SentinelURI is the redis URI of sentinel. If not set, the controller
          will try to autodiscover Sentinel within the namespace. TODO: remove, unused'
        displayName: Sentinel URIs
        path: sentinelURIs
      - description: 'ServerPools is the list of Twemproxy server pools WARNING: only
          1 pool is supported at this time'
        displayName: Server Pools
        path: serverPools
      - description: The address to bind to. Format is ip:port
        displayName: Bind Address
        path: serverPools[0].bindAddress
      - description: The name of the server pool
        displayName: Name
        path: serverPools[0].name
      - description: Connect to all servers in the pool during startup
        displayName: Pre Connect
        path: serverPools[0].preConnect
      - description: Target defines which are the servers that will be configured
          as backend redis servers for the Twemproxy configuration. The default is
          to target masters, but read-write slaves can be configured through this
          option. If read-write slaves are configured but there are none available,
          the config will fall back to masters. The masters never fall back to slaves
          though and will just wait for sentinel triggered failovers to solve the
          unavailability.
        displayName: Target
        path: serverPools[0].target
      - description: Max number of pending connections in the queue
        displayName: TCPBacklog
        path: serverPools[0].tcpBacklog
      - description: Timeout to stablish connection with the servers in the server
          pool
        displayName: Timeout
        path: serverPools[0].timeout
      - description: The topology of the servers within the server pool. This field
          describes the association of logical shards to physical shards.
        displayName: Topology
        path: serverPools[0].topology
      - description: The physical shard where the logical one is stored. This name
          should match the shard names monitored by Sentinel.
        displayName: Physical Shard
        path: serverPools[0].topology[0].physicalShard
      - description: The name of the locigal shard
        displayName: Shard Name
        path: serverPools[0].topology[0].shardName
      statusDescriptors:
      - description: The list of serves currently targeted by this TwemproxyConfig
        displayName: Selected Targets
        path: targets
      version: v1alpha1
    - description: Zync is the Schema for the zyncs API
      displayName: Zync
      kind: Zync
      name: zyncs.saas.3scale.net
      specDescriptors:
      - description: Configures the main zync api component
        displayName: API
        path: api
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: api.hpa
      - description: Upper limit for the number of replicas to which the autoscaler
          can scale up. It cannot be less that minReplicas.
        displayName: Max Replicas
        path: api.hpa.maxReplicas
      - description: Lower limit for the number of replicas to which the autoscaler
          can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if
          the alpha feature gate HPAScaleToZero is enabled and at least one Object
          or External metric is configured.  Scaling is active as long as at least
          one metric value is available.
        displayName: Min Replicas
        path: api.hpa.minReplicas
      - description: Target resource used to autoscale (cpu/memory)
        displayName: Resource Name
        path: api.hpa.resourceName
      - description: A percentage indicating the target resource consumption used
          to autoscale
        displayName: Resource Utilization
        path: api.hpa.resourceUtilization
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: api.livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: api.livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: api.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: api.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: api.livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: api.livenessProbe.timeoutSeconds
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: api.pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: api.pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: api.pdb.minAvailable
      - description: Describes how the services provided by this workload are exposed
          to its consumers
        displayName: Publishing Strategies
        path: api.publishingStrategies
      - description: Endpoints holds the list of publishing strategies for each workload
          endpoint.
        displayName: Endpoints
        path: api.publishingStrategies.endpoints
      - description: Create explicitely tells the controller that this is a new endpoint
          that should be added. Default is false, causing the controller to error
          when seeing an unknown endpoint.
        displayName: Create
        path: api.publishingStrategies.endpoints[0].create
      - description: Marin3rSidecar holds configuration for the Marin3rSidecar publishing
          strategy
        displayName: Marin3r Sidecar
        path: api.publishingStrategies.endpoints[0].marin3rSidecar
      - description: Envoy dynamic configuration. Populating this field causes the
          operator to create a Marin3r EnvoyConfig resource, so Marin3r must be installed
          in the cluster.
        displayName: Envoy Dynamic Config
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.dynamicConfigs
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.elasticLoadBalancerConfig.proxyProtocol
      - description: The Envoy API version to use
        displayName: Envoy APIVersion
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.envoyAPIVersion
      - description: The Envoy iamge to use
        displayName: Envoy Image
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.envoyImage
      - description: Extra annotations to pass the Pod to further configure the sidecar
          container.
        displayName: Extra Pod Annotations
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.extraPodAnnotations
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.networkLoadBalancerConfig.proxyProtocol
      - description: The NodeID that identifies the Envoy sidecar to the DiscoveryService
        displayName: Node ID
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.nodeID
      - description: The ports that the sidecar exposes
        displayName: Ports
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.ports
      - description: Port name
        displayName: Name
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.ports[0].name
      - description: Port value
        displayName: Port
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.ports[0].port
      - description: Compute Resources required by the sidecar container.
        displayName: Resources
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.resources.requests
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.serviceType
      - description: Extra containers to sync with the shutdown manager upon pod termination
        displayName: Shutdown Manager Extra Lifecycle Hooks
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrExtraLifecycleHooks
      - description: The port where Marin3r's shutdown manager listens
        displayName: Shutdown Manager Port
        path: api.publishingStrategies.endpoints[0].marin3rSidecar.shtdnmgrPort
      - description: EndpointName defines the endpoint affected by this publishing
          strategy
        displayName: Endpoint Name
        path: api.publishingStrategies.endpoints[0].name
      - description: Simple holds configuration for the Simple publishing strategy
        displayName: Simple
        path: api.publishingStrategies.endpoints[0].simple
      - description: Classic LB configuration
        displayName: Elastic Load Balancer Config
        path: api.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig
      - description: Enables/disables connection draining
        displayName: Connection Draining Enabled
        path: api.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingEnabled
      - description: Sets the timeout for connection draining
        displayName: Connection Draining Timeout
        path: api.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.connectionDrainingTimeout
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: api.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Sets the healthy threshold for the load balancer
        displayName: Healthcheck Healthy Threshold
        path: api.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckHealthyThreshold
      - description: Sets the interval between health checks
        displayName: Healthcheck Interval
        path: api.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckInterval
      - description: Sets the timeout for the health check
        displayName: Healthcheck Timeout
        path: api.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckTimeout
      - description: Sets the unhealthy threshold for the load balancer
        displayName: Healthcheck Unhealthy Threshold
        path: api.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.healthcheckUnhealthyThreshold
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: api.publishingStrategies.endpoints[0].simple.elasticLoadBalancerConfig.proxyProtocol
      - description: NLB configuration
        displayName: Network Load Balancer Config
        path: api.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig
      - description: Enables/disables cross zone load balancing
        displayName: Cross Zone Load Balancing Enabled
        path: api.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.crossZoneLoadBalancingEnabled
      - description: Deletion protection setting
        displayName: Deletion Protection
        path: api.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.deletionProtection
      - description: The list of optional Elastic IPs allocations
        displayName: EIPAllocations
        path: api.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.eipAllocations
      - description: Optionally specify the load balancer name
        displayName: Load Balancer Name
        path: api.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.loadBalancerName
      - description: Enables/disbles use of proxy protocol in the load balancer
        displayName: Proxy Protocol
        path: api.publishingStrategies.endpoints[0].simple.networkLoadBalancerConfig.proxyProtocol
      - description: ServiceNameOverride allows the user to override the generated
          Service name
        displayName: Service Name Override
        path: api.publishingStrategies.endpoints[0].simple.serviceName
      - description: ServicePortsOverride allows the user to override the ports of
          a Service. It's a replace operation, so specify all the required ports.
        displayName: Service Ports Override
        path: api.publishingStrategies.endpoints[0].simple.servicePorts
      - description: ServiceType defines the type of k8s Service to use for exposing
          the service to its consumers
        displayName: Service Type
        path: api.publishingStrategies.endpoints[0].simple.serviceType
      - description: Strategy defines the type of publishing strategy
        displayName: Strategy
        path: api.publishingStrategies.endpoints[0].strategy
      - description: PublishingStrategiesReconcileMode specifies if the list of strategies
          should be merged with the defautls or replace them entirely. Allowed values
          are "Merge" or "Replace". "Replace" strategy should be used to enable 2
          strategies at the same time for a single endpoint.
        displayName: Mode
        path: api.publishingStrategies.mode
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: api.readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: api.readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: api.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: api.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: api.readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: api.readinessProbe.timeoutSeconds
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: api.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: api.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: api.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: api.resources.requests
      - description: Application specific configuration options for the component
        displayName: Config
        path: config
      - description: Options for configuring Bugsnag integration
        displayName: Bugsnag
        path: config.bugsnag
      - description: API key
        displayName: APIKey
        path: config.bugsnag.apiKey
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.bugsnag.apiKey.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.bugsnag.apiKey.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.bugsnag.apiKey.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.bugsnag.apiKey.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.bugsnag.apiKey.override
      - description: Release Stage to identify environment
        displayName: Release Stage
        path: config.bugsnag.releaseStage
      - description: A reference to the secret holding the database DSN
        displayName: Database DSN
        path: config.databaseDSN
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.databaseDSN.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.databaseDSN.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.databaseDSN.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.databaseDSN.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.databaseDSN.override
      - description: External Secret common configuration
        displayName: External Secret
        path: config.externalSecret
      - description: RefreshInterval is the amount of time before the values reading
          again from the SecretStore provider (duration)
        displayName: Refresh Interval
        path: config.externalSecret.refreshInterval
      - description: SecretStoreRef defines which SecretStore to use when fetching
          the secret data
        displayName: Secret Store Ref
        path: config.externalSecret.secretStoreRef
      - description: The Vault secret store reference kind
        displayName: Kind
        path: config.externalSecret.secretStoreRef.kind
      - description: The Vault secret store reference name
        displayName: Name
        path: config.externalSecret.secretStoreRef.name
      - description: Rails configuration options for zync components
        displayName: Rails
        path: config.rails
      - description: Rails environment
        displayName: Environment
        path: config.rails.environment
      - description: Rails log level (debug, info, warn, error, fatal or unknown)
        displayName: Log Level
        path: config.rails.logLevel
      - description: Rails max threads (only applies to api)
        displayName: Max Threads
        path: config.rails.maxThreads
      - description: A reference to the secret holding the secret-key-base
        displayName: Secret Key Base
        path: config.secretKeyBase
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.secretKeyBase.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.secretKeyBase.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.secretKeyBase.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.secretKeyBase.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.secretKeyBase.override
      - description: A reference to the secret holding the zync authentication token
        displayName: Zync Auth Token
        path: config.zyncAuthToken
      - description: FromSeed will try to retrieve the secret value from the default
          seed Secret.
        displayName: From Seed
        path: config.zyncAuthToken.fromSeed
      - description: FromVault is a reference to a secret key/value stored in a Hashicorp
          Vault
        displayName: From Vault
        path: config.zyncAuthToken.fromVault
      - description: The Vault key of the secret
        displayName: Key
        path: config.zyncAuthToken.fromVault.key
      - description: The Vault path where the secret is located
        displayName: Path
        path: config.zyncAuthToken.fromVault.path
      - description: Override allows to directly specify a string value.
        displayName: Override
        path: config.zyncAuthToken.override
      - description: Console specific configuration options
        displayName: Console
        path: console
      - description: Enables or disables the Zync Console statefulset
        displayName: Enabled
        path: console.enabled
      - description: Defaults to zync image if not defined.
        displayName: Image
        path: console.image
      - description: Docker repository of the image
        displayName: Name
        path: console.image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: console.image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: console.image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: console.image.tag
      - description: Resource requirements for the component
        displayName: Resources
        path: console.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: console.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: console.resources.requests
      - description: Configures the Grafana Dashboard for the component
        displayName: Grafana Dashboard
        path: grafanaDashboard
      - description: Label key used by grafana-operator for dashboard discovery
        displayName: Selector Key
        path: grafanaDashboard.selectorKey
      - description: Label value used by grafana-operator for dashboard discovery
        displayName: Selector Value
        path: grafanaDashboard.selectorValue
      - description: Image specification for the component
        displayName: Image
        path: image
      - description: Docker repository of the image
        displayName: Name
        path: image.name
      - description: Pull policy for the image
        displayName: Pull Policy
        path: image.pullPolicy
      - description: Name of the Secret that holds quay.io credentials to access the
          image repository
        displayName: Pull Secret Name
        path: image.pullSecretName
      - description: Image tag
        displayName: Tag
        path: image.tag
      - description: Configures the zync que component
        displayName: Que
        path: que
      - description: Horizontal Pod Autoscaler for the component
        displayName: HPA
        path: que.hpa
      - description: Upper limit for the number of replicas to which the autoscaler
          can scale up. It cannot be less that minReplicas.
        displayName: Max Replicas
        path: que.hpa.maxReplicas
      - description: Lower limit for the number of replicas to which the autoscaler
          can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if
          the alpha feature gate HPAScaleToZero is enabled and at least one Object
          or External metric is configured.  Scaling is active as long as at least
          one metric value is available.
        displayName: Min Replicas
        path: que.hpa.minReplicas
      - description: Target resource used to autoscale (cpu/memory)
        displayName: Resource Name
        path: que.hpa.resourceName
      - description: A percentage indicating the target resource consumption used
          to autoscale
        displayName: Resource Utilization
        path: que.hpa.resourceUtilization
      - description: Liveness probe for the component
        displayName: Liveness Probe
        path: que.livenessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: que.livenessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: que.livenessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: que.livenessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: que.livenessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: que.livenessProbe.timeoutSeconds
      - description: Pod Disruption Budget for the component
        displayName: PDB
        path: que.pdb
      - description: An eviction is allowed if at most "maxUnavailable" pods selected
          by "selector" are unavailable after the eviction, i.e. even in absence of
          the evicted pod. For example, one can prevent all voluntary evictions by
          specifying 0. This is a mutually exclusive setting with "minAvailable".
        displayName: Max Unavailable
        path: que.pdb.maxUnavailable
      - description: An eviction is allowed if at least "minAvailable" pods selected
          by "selector" will still be available after the eviction, i.e. even in the
          absence of the evicted pod.  So for example you can prevent all voluntary
          evictions by specifying "100%".
        displayName: Min Available
        path: que.pdb.minAvailable
      - description: Readiness probe for the component
        displayName: Readiness Probe
        path: que.readinessProbe
      - description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded
        displayName: Failure Threshold
        path: que.readinessProbe.failureThreshold
      - description: Number of seconds after the container has started before liveness
          probes are initiated
        displayName: Initial Delay Seconds
        path: que.readinessProbe.initialDelaySeconds
      - description: How often (in seconds) to perform the probe
        displayName: Period Seconds
        path: que.readinessProbe.periodSeconds
      - description: Minimum consecutive successes for the probe to be considered
          successful after having failed
        displayName: Success Threshold
        path: que.readinessProbe.successThreshold
      - description: Number of seconds after which the probe times out
        displayName: Timeout Seconds
        path: que.readinessProbe.timeoutSeconds
      - description: Number of replicas (ignored if hpa is enabled) for the component
        displayName: Replicas
        path: que.replicas
      - description: Resource requirements for the component
        displayName: Resources
        path: que.resources
      - description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Limits
        path: que.resources.limits
      - description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        displayName: Requests
        path: que.resources.requests
      version: v1alpha1
  description: |
    The 3scale SaaS Operator creates and maintains SaaS-ready deployments
    of each component from the Red Hat 3scale API Management solution.

    ## Supported Features

    - **Installer:** A way to install a SaaS ready deployment of the 3scale API Management components, providing configurability options at the time of installation
    - **Reconcilliation:** Tunable CRD parameters for each component after 3scale API Management solution is installed

    ## Supported Components

    - **Apicast**
    - **Autossl**
    - **Backend**
    - **CorsProxy**
    - **MappingService**
    - **System**
    - **Zync**

    ## Documentation

    - [Getting started](https://github.com/3scale-ops/saas-operator/blob/master/docs/getting-started.md)
    - [Custom Resource Definitions reference](https://github.com/3scale-ops/saas-operator/tree/master/docs/reference)
    - [Development](https://github.com/3scale-ops/saas-operator/blob/master/docs/development.md)

    ## License

    3scale SaaS Operator is licensed under the [Apache 2.0 license](https://github.com/3scale-ops/saas-operator/blob/master/LICENSE)
  displayName: 3scale SaaS Operator
  icon:
  - base64data: |
      iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAACXBIWXMAAATrAAAE6wHYKlsNAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAABp0RVh0VGl0bGUATkdJTlhfUGFydG5lcnNfbG9nb198DJyHAAAHVUlEQVRoge3Ze7DVVRUH8M/v3IsYXJGUEBHx3IsJFVZYlFoivrNETaKpCR9gSlNqYsFh1JQZpwaYwtQmy1fma2LyUVNTmphmWfSYnKkcc3yAomJJl/LeK0L3nt0fa9/u9XDgoh2QHL//nN/ee/1+e+291v7utdbhDWxzTMVVGIl3vbaqbBs0YxDWYCf8FAmfw6wscwSueE20azBOxmoUwqLE4q7DnhiGT+A0/Cr3nbfdtWwAzsI3sReOqzM+B4flsR6Mzv0jheX/7/A34bbjc3s3/AU35vY8HJOfh+ff6fhWfm7B19G2zTVtEKZitj6Fy/g3HhXuPUucayjl3zcJly6LjVqPj24PZf9X/FKQ0wQ8IxYI++Itwnr35+cP4AVclmW+KjxjptiQQ7EQTY1SrrlRH+qH44WCa7H3+krb3lVpKapFajpvyJLHnseULPtusQEjcnuNsOxa4RHnCCtfg6cboVxpYJFXhGWYLBZ0Oqo9qbooMT0xo1p0L8Y0PIlRuBtj5x405tMd88vndM4r34MheFwY4yzhBQ1ZLI1f8G34K+7C4pihqPYNF91YhfvwIg5A5yVTmqcURXGZkq9lwXtxCJ7DCeJsNwSNdOk9xAauwxicikuLavf8VDRtTKnoKZpdKBj8VAzFCtwxdGP3aV2DdlqcVO/K32rDxqzfmCy7w+HngnC+Ldz2RbwVg2vkWvCh/DwHB+XnEcLio/Dx3LcbztV3ve1QuFYs+Eu53es9D2KBYOt34P34DXTOK4/qXFCudC5omztlnyGTcCI+iX/k9y/N31zRKCWLgUW2GiXhfk/l9hRx/RyCJ4TVlorg45R155aHDxpc/Dm/Q+FPQ3ceMrlY+NBGwfI9+Bi+g8txQaOUbBSqeJ+IjYlzWAjF29GR+zugeafS4XoXC8k712/omiTu7z8KS9+KXTRosTSepa8Td2aB68X5vU+EkdcIYjsbmlSfrXm3p9hYPCfO8ESMw97iODQMjXRpOCp/82f9+kaIQKIXE0QY+WBHpfXLRcTV3SmlBbssWXV5v3faBVm1C2bfYTENd+pz16NxZn5uxn7Cgq0opbP3HZzOfE9vXH2EILmd8QVBWDdtJ71fNXrj4am5/Xhu7yMipj+IdLBHuPcgHCmsPg6XCC+Zm9+70Q6OQV5+bx6GMwTz/ljfGZ8tFl4RC7vMphivL6va4XG1yHZgrJcT5L74iXDvo/CYYGWCqC7cTjo2FHuJNPFoYcGF/caOyn3T+/XNwu/E+R22rZRq9LXUH8+IeHglHsBv8UERa7eIfPgpkRwQTP4UukWO/LpA74JPyu3Z/DdDegPbApsNPLoqrWckxeGKtKekRVjmOUW6uWXRqjuz2HDBsvvrO7NrRex8hQgRa3EzDhRJxi0D6LcM78X5+blW9zmCI0aJYOV5kUN/H9/b6gV3LGidUSTfxUWpSKspqoWimXSg5LPVZOKwJSsfEQn/foKR1+ClvAnHC2Iq45/9Pj1GVDseEEHIwVtYbFls3AOC4KbUjJ8h7vwloqjwL8ENbxex93Gi6D8wOua3XdlRabu93lhXpfxY5/y2WWKzOvSRTn/slpU8sqa/IshsnAg8JmxBjQtEoDI+y46rGb9V1L7rYYXNcENdli5K6QnSvfXGkmJdiqhosNjRDXXE2oUFHq3p/5QIFR8Xljt5MwoTlcsb8Ihg+FNqxnffzNxwMe7Ywre3Dmnh6CGdldZ1nZVybxG9HRdt5euThNX3z+3ThQXrlWAnZ9mJuT1HuG1/A90iSsKvqIQ7YLbUVdnnWEqzEkNI5aT4YcvilRcWodA8Uax7SJBFF/6eF/IjkQj0YqmIrw/I7WHi3J+A5TXTXi5KP5Nze9cs+2GRbsrjdwqOWJnnXpvlVuAHr2rBHeePm1iqVg9OqWjB2EL1uGpK03ZZ8uTDWWSs+NtzpCCs4aKMc6ioOz8sCGq1IJhL+33+ZlE46O/azWLDvpIX3otlok42q1/frmJTRud53yySlJniT7lvDLS+AdFRabu9s1JeOoBYSbDx53P7WFFYH1Ujd4xYxK79+qZl2T1qZD+CTsEbA+EqYf1NULdM27mg9b6Cm4YuWnlN7VhJejoVxQixm3eLkutDNWJVPKvvH4WZIsysTfWaBAFOF9WSXtkNNs2Dm0W59iRBZjeIM3x1nSU8re/obPKRTVAkTaTR9cZSMpL0rLhzJ4nronbBJeFm7aImdSKuFGxbixfFpl0nLH28CFp+X0d2fZa9Qdzpk+rpmMfa6w3UL8SntDyVitkdlbbnFWltkdILRanUlFJ6m2RaUSrNyJPfLxL2vfSVcYaJHHg07hEWqYqroqvObKvxa7FxU4UnXJy/X4s1+IU4p3eJCGxV/ka3viLCTH3l4pehLmmlGZo6W9vmlIo0NVFWeEmyQUobi1LptqGLnuh1v93xRUFOI/OEa4U7Xy/O0bUi+5lbb66M5YJVJwuWn7cZuUIU/JeJc/oZEVqOFMHOujz/ckFYPVuY8w28LvEfkWzvtfgS9qMAAAAASUVORK5CYII=
    mediatype: image/png
  install:
    spec:
      deployments:
      - label:
          control-plane: controller-manager
        name: saas-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - operator
                - --metrics-bind-address=:8080"
                - --leader-elect
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                image: quay.io/3scale/saas-operator:v0.25.0-alpha.7
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 8080
                  name: metrics
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 2Gi
                  requests:
                    cpu: 25m
                    memory: 550Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: saas-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - external-secrets.io
          resources:
          - externalsecrets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - grafana.integreatly.org
          resources:
          - grafanadashboards
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - marin3r.3scale.net
          resources:
          - envoyconfigs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - podmonitors
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - apicasts
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - apicasts/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - apicasts/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - autossls
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - autossls/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - autossls/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - backends
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - backends/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - backends/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - corsproxies
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - corsproxies/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - corsproxies/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - echoapis
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - echoapis/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - echoapis/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - mappingservices
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - mappingservices/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - mappingservices/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - redisshards
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - redisshards/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - redisshards/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - sentinels
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - sentinels/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - sentinels/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - shardedredisbackups
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - shardedredisbackups/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - shardedredisbackups/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - systems
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - systems/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - systems/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - twemproxyconfigs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - twemproxyconfigs/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - twemproxyconfigs/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - zyncs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - saas.3scale.net
          resources:
          - zyncs/finalizers
          verbs:
          - update
        - apiGroups:
          - saas.3scale.net
          resources:
          - zyncs/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - tekton.dev
          resources:
          - pipelines
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - tekton.dev
          resources:
          - tasks
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        serviceAccountName: saas-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - saas
  - 3scale
  - operations
  links:
  - name: GitHub Repository
    url: https://github.com/3scale-ops/saas-operator
  - name: 3scale
    url: https://3scale.net
  maintainers:
  - email: 3scale-operations@redhat.com
    name: 3scale Ops
  maturity: alpha
  provider:
    name: Red Hat
    url: https://www.3scale.net/
  version: 0.25.0-alpha.7
